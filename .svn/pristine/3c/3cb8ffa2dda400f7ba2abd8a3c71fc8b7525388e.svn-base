using System.Runtime.Serialization;
using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Linq;
using System.Web;
using PetaPoco;

// This file is generated; please do not edit it by hand.
// To make changes, follow these steps:
//   * Ensure you've installed the Chatham Developer Module: http://itsablogyo/?p=1992
//   * Modify the corresponding *.Template.json file.
//   * Run the following command in the Package Manager Console: Set-DataAccessEntityModel
namespace Library.Data.Models.Core
{
    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_accounting")]
    [PrimaryKey("ac_accounting_id")]
    [ExplicitColumns]
    public class TreatmentTableModel : TableModel
    {
        
        public const string ColumnNameId = "ac_accounting_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameNotes = "ac_notes";
        private string _notes;
        [Column(ColumnNameNotes)]
        public string Notes
        {
            get { return _notes; }
            set { _notes = value; MarkColumnModified(ColumnNameNotes); }
        }
        
        public const string ColumnNamePercentItemHedged = "ac_prcnt_item_hdg";
        private decimal? _percentItemHedged;
        [Column(ColumnNamePercentItemHedged)]
        public decimal? PercentItemHedged
        {
            get { return _percentItemHedged; }
            set { _percentItemHedged = value; MarkColumnModified(ColumnNamePercentItemHedged); }
        }
        
        public const string ColumnNameMatureHedgedPortDate = "ac_matur_hdg_port_dt";
        private DateTime? _matureHedgedPortDate;
        [Column(ColumnNameMatureHedgedPortDate)]
        public DateTime? MatureHedgedPortDate
        {
            get { return _matureHedgedPortDate; }
            set { _matureHedgedPortDate = value; MarkColumnModified(ColumnNameMatureHedgedPortDate); }
        }
        
        public const string ColumnNameHedgeDesignationMethodRefId = "ac_rv_hdg_desig";
        private int? _hedgeDesignationMethodRefId;
        [Column(ColumnNameHedgeDesignationMethodRefId)]
        public int? HedgeDesignationMethodRefId
        {
            get { return _hedgeDesignationMethodRefId; }
            set { _hedgeDesignationMethodRefId = value; MarkColumnModified(ColumnNameHedgeDesignationMethodRefId); }
        }
        
        public const string ColumnNameTestMethodRetrospectiveRefId = "ac_rv_eff_test_methd_retro";
        private int? _testMethodRetrospectiveRefId;
        [Column(ColumnNameTestMethodRetrospectiveRefId)]
        public int? TestMethodRetrospectiveRefId
        {
            get { return _testMethodRetrospectiveRefId; }
            set { _testMethodRetrospectiveRefId = value; MarkColumnModified(ColumnNameTestMethodRetrospectiveRefId); }
        }
        
        public const string ColumnNameHedgePurpose = "ac_hedge_purpose";
        private string _hedgePurpose;
        [Column(ColumnNameHedgePurpose)]
        public string HedgePurpose
        {
            get { return _hedgePurpose; }
            set { _hedgePurpose = value; MarkColumnModified(ColumnNameHedgePurpose); }
        }
        
        public const string ColumnNameIneffectiveReason = "ac_ineffect_reason";
        private string _ineffectiveReason;
        [Column(ColumnNameIneffectiveReason)]
        public string IneffectiveReason
        {
            get { return _ineffectiveReason; }
            set { _ineffectiveReason = value; MarkColumnModified(ColumnNameIneffectiveReason); }
        }
        
        public const string ColumnNameHedgedNotional = "ac_hedged_notional";
        private decimal? _hedgedNotional;
        [Column(ColumnNameHedgedNotional)]
        public decimal? HedgedNotional
        {
            get { return _hedgedNotional; }
            set { _hedgedNotional = value; MarkColumnModified(ColumnNameHedgedNotional); }
        }
        
        public const string ColumnNameCarryAmountAtInception = "ac_carry_amt_at_incp";
        private decimal? _carryAmountAtInception;
        [Column(ColumnNameCarryAmountAtInception)]
        public decimal? CarryAmountAtInception
        {
            get { return _carryAmountAtInception; }
            set { _carryAmountAtInception = value; MarkColumnModified(ColumnNameCarryAmountAtInception); }
        }
        
        public const string ColumnNameEffectiveRatioAtInception = "ac_eff_ratio_at_incp";
        private decimal? _effectiveRatioAtInception;
        [Column(ColumnNameEffectiveRatioAtInception)]
        public decimal? EffectiveRatioAtInception
        {
            get { return _effectiveRatioAtInception; }
            set { _effectiveRatioAtInception = value; MarkColumnModified(ColumnNameEffectiveRatioAtInception); }
        }
        
        public const string ColumnNameNextPeriodEndDate = "ac_next_pd_end_dt";
        private DateTime? _nextPeriodEndDate;
        [Column(ColumnNameNextPeriodEndDate)]
        public DateTime? NextPeriodEndDate
        {
            get { return _nextPeriodEndDate; }
            set { _nextPeriodEndDate = value; MarkColumnModified(ColumnNameNextPeriodEndDate); }
        }
        
        public const string ColumnNameTreatmentStatusRefId = "ac_rv_treatment_status";
        private int? _treatmentStatusRefId;
        [Column(ColumnNameTreatmentStatusRefId)]
        public int? TreatmentStatusRefId
        {
            get { return _treatmentStatusRefId; }
            set { _treatmentStatusRefId = value; MarkColumnModified(ColumnNameTreatmentStatusRefId); }
        }
        
        public const string ColumnNameStillGetsHedgeAccounting = "ac_still_eff_bit";
        private bool? _stillGetsHedgeAccounting;
        [Column(ColumnNameStillGetsHedgeAccounting)]
        public bool? StillGetsHedgeAccounting
        {
            get { return _stillGetsHedgeAccounting; }
            set { _stillGetsHedgeAccounting = value; MarkColumnModified(ColumnNameStillGetsHedgeAccounting); }
        }
        
        public const string ColumnNameTreatmentCreateDate = "ac_create_dt";
        private DateTime? _treatmentCreateDate;
        [Column(ColumnNameTreatmentCreateDate)]
        public DateTime? TreatmentCreateDate
        {
            get { return _treatmentCreateDate; }
            set { _treatmentCreateDate = value; MarkColumnModified(ColumnNameTreatmentCreateDate); }
        }
        
        public const string ColumnNameEntriesDone = "ac_entries_done_bit";
        private bool? _entriesDone;
        [Column(ColumnNameEntriesDone)]
        public bool? EntriesDone
        {
            get { return _entriesDone; }
            set { _entriesDone = value; MarkColumnModified(ColumnNameEntriesDone); }
        }
        
        public const string ColumnNameShowJournalEntries = "ac_show_je_bit";
        private bool? _showJournalEntries;
        [Column(ColumnNameShowJournalEntries)]
        public bool? ShowJournalEntries
        {
            get { return _showJournalEntries; }
            set { _showJournalEntries = value; MarkColumnModified(ColumnNameShowJournalEntries); }
        }
        
        public const string ColumnNameHedgedRiskRefId = "ac_rv_hedged_risk";
        private int? _hedgedRiskRefId;
        [Column(ColumnNameHedgedRiskRefId)]
        public int? HedgedRiskRefId
        {
            get { return _hedgedRiskRefId; }
            set { _hedgedRiskRefId = value; MarkColumnModified(ColumnNameHedgedRiskRefId); }
        }
        
        public const string ColumnNameStartDate = "ac_start_date";
        private DateTime? _startDate;
        [Column(ColumnNameStartDate)]
        public DateTime? StartDate
        {
            get { return _startDate; }
            set { _startDate = value; MarkColumnModified(ColumnNameStartDate); }
        }
        
        public const string ColumnNameEffectivenessTestScopeRefId = "ac_rv_eff_test_scope";
        private int? _effectivenessTestScopeRefId;
        [Column(ColumnNameEffectivenessTestScopeRefId)]
        public int? EffectivenessTestScopeRefId
        {
            get { return _effectivenessTestScopeRefId; }
            set { _effectivenessTestScopeRefId = value; MarkColumnModified(ColumnNameEffectivenessTestScopeRefId); }
        }
        
        public const string ColumnNameEffectivenessTestStartDate = "ac_eff_test_start_dt";
        private DateTime? _effectivenessTestStartDate;
        [Column(ColumnNameEffectivenessTestStartDate)]
        public DateTime? EffectivenessTestStartDate
        {
            get { return _effectivenessTestStartDate; }
            set { _effectivenessTestStartDate = value; MarkColumnModified(ColumnNameEffectivenessTestStartDate); }
        }
        
        public const string ColumnNameExcludedComponentRefId = "ac_rv_excluded_cmpnt";
        private int? _excludedComponentRefId;
        [Column(ColumnNameExcludedComponentRefId)]
        public int? ExcludedComponentRefId
        {
            get { return _excludedComponentRefId; }
            set { _excludedComponentRefId = value; MarkColumnModified(ColumnNameExcludedComponentRefId); }
        }
        
        public const string ColumnNameHedgedRate = "ac_hedged_rate";
        private decimal? _hedgedRate;
        [Column(ColumnNameHedgedRate)]
        public decimal? HedgedRate
        {
            get { return _hedgedRate; }
            set { _hedgedRate = value; MarkColumnModified(ColumnNameHedgedRate); }
        }
        
        public const string ColumnNameTestMethodProspectiveRefId = "ac_rv_eff_test_methd_prosp";
        private int? _testMethodProspectiveRefId;
        [Column(ColumnNameTestMethodProspectiveRefId)]
        public int? TestMethodProspectiveRefId
        {
            get { return _testMethodProspectiveRefId; }
            set { _testMethodProspectiveRefId = value; MarkColumnModified(ColumnNameTestMethodProspectiveRefId); }
        }
        
        public const string ColumnNameEffectivenessTestEndDate = "ac_eff_test_end_dt";
        private DateTime? _effectivenessTestEndDate;
        [Column(ColumnNameEffectivenessTestEndDate)]
        public DateTime? EffectivenessTestEndDate
        {
            get { return _effectivenessTestEndDate; }
            set { _effectivenessTestEndDate = value; MarkColumnModified(ColumnNameEffectivenessTestEndDate); }
        }
        
        public const string ColumnNameManualTestReason = "ac_manual_test_reason";
        private string _manualTestReason;
        [Column(ColumnNameManualTestReason)]
        public string ManualTestReason
        {
            get { return _manualTestReason; }
            set { _manualTestReason = value; MarkColumnModified(ColumnNameManualTestReason); }
        }
        
        public const string ColumnNameTestMethodMeasureRefId = "ac_rv_measurement_method";
        private int? _testMethodMeasureRefId;
        [Column(ColumnNameTestMethodMeasureRefId)]
        public int? TestMethodMeasureRefId
        {
            get { return _testMethodMeasureRefId; }
            set { _testMethodMeasureRefId = value; MarkColumnModified(ColumnNameTestMethodMeasureRefId); }
        }
        
        public const string ColumnNameTestManuallyRetrospective = "ac_test_manually_retro_bit";
        private bool? _testManuallyRetrospective;
        [Column(ColumnNameTestManuallyRetrospective)]
        public bool? TestManuallyRetrospective
        {
            get { return _testManuallyRetrospective; }
            set { _testManuallyRetrospective = value; MarkColumnModified(ColumnNameTestManuallyRetrospective); }
        }
        
        public const string ColumnNameTestManuallyProspective = "ac_test_manually_prosp_bit";
        private bool? _testManuallyProspective;
        [Column(ColumnNameTestManuallyProspective)]
        public bool? TestManuallyProspective
        {
            get { return _testManuallyProspective; }
            set { _testManuallyProspective = value; MarkColumnModified(ColumnNameTestManuallyProspective); }
        }
        
        public const string ColumnNameTestManuallyMeasure = "ac_test_manually_measure_bit";
        private bool? _testManuallyMeasure;
        [Column(ColumnNameTestManuallyMeasure)]
        public bool? TestManuallyMeasure
        {
            get { return _testManuallyMeasure; }
            set { _testManuallyMeasure = value; MarkColumnModified(ColumnNameTestManuallyMeasure); }
        }
        
        public const string ColumnNameAssumedEffectiveRatio = "ac_assumed_eff_ratio";
        private decimal? _assumedEffectiveRatio;
        [Column(ColumnNameAssumedEffectiveRatio)]
        public decimal? AssumedEffectiveRatio
        {
            get { return _assumedEffectiveRatio; }
            set { _assumedEffectiveRatio = value; MarkColumnModified(ColumnNameAssumedEffectiveRatio); }
        }
        
        public const string ColumnNameG20 = "ac_g20_bit";
        private bool? _g20;
        [Column(ColumnNameG20)]
        public bool? G20
        {
            get { return _g20; }
            set { _g20 = value; MarkColumnModified(ColumnNameG20); }
        }
        
        public const string ColumnNameEndDate = "ac_end_date";
        private DateTime? _endDate;
        [Column(ColumnNameEndDate)]
        public DateTime? EndDate
        {
            get { return _endDate; }
            set { _endDate = value; MarkColumnModified(ColumnNameEndDate); }
        }
        
        public const string ColumnNameAutoGenerateJournalEntries = "ac_autogenerate_jes_bit";
        private bool? _autoGenerateJournalEntries;
        [Column(ColumnNameAutoGenerateJournalEntries)]
        public bool? AutoGenerateJournalEntries
        {
            get { return _autoGenerateJournalEntries; }
            set { _autoGenerateJournalEntries = value; MarkColumnModified(ColumnNameAutoGenerateJournalEntries); }
        }
        
        public const string ColumnNameJournalEntriesNotAutoGeneratedReason = "ac_jes_not_autogenerated_reason";
        private string _journalEntriesNotAutoGeneratedReason;
        [Column(ColumnNameJournalEntriesNotAutoGeneratedReason)]
        public string JournalEntriesNotAutoGeneratedReason
        {
            get { return _journalEntriesNotAutoGeneratedReason; }
            set { _journalEntriesNotAutoGeneratedReason = value; MarkColumnModified(ColumnNameJournalEntriesNotAutoGeneratedReason); }
        }
        
        public const string ColumnNameGoverningAccountingStandardRefId = "ac_rv_governing_acctg_standard";
        private int? _governingAccountingStandardRefId;
        [Column(ColumnNameGoverningAccountingStandardRefId)]
        public int? GoverningAccountingStandardRefId
        {
            get { return _governingAccountingStandardRefId; }
            set { _governingAccountingStandardRefId = value; MarkColumnModified(ColumnNameGoverningAccountingStandardRefId); }
        }
        
        public const string ColumnNameDescription = "ac_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameG20LeakedThroughDate = "ac_g20_leaked_thru_dt";
        private DateTime? _g20LeakedThroughDate;
        [Column(ColumnNameG20LeakedThroughDate)]
        public DateTime? G20LeakedThroughDate
        {
            get { return _g20LeakedThroughDate; }
            set { _g20LeakedThroughDate = value; MarkColumnModified(ColumnNameG20LeakedThroughDate); }
        }
        
        public const string ColumnNameRegressionNumberOfDataPoints = "ac_data_points";
        private int? _regressionNumberOfDataPoints;
        [Column(ColumnNameRegressionNumberOfDataPoints)]
        public int? RegressionNumberOfDataPoints
        {
            get { return _regressionNumberOfDataPoints; }
            set { _regressionNumberOfDataPoints = value; MarkColumnModified(ColumnNameRegressionNumberOfDataPoints); }
        }
        
        public const string ColumnNameRegressionFrequencyOfDataPointsRefId = "ac_rv_data_point_frequency";
        private int? _regressionFrequencyOfDataPointsRefId;
        [Column(ColumnNameRegressionFrequencyOfDataPointsRefId)]
        public int? RegressionFrequencyOfDataPointsRefId
        {
            get { return _regressionFrequencyOfDataPointsRefId; }
            set { _regressionFrequencyOfDataPointsRefId = value; MarkColumnModified(ColumnNameRegressionFrequencyOfDataPointsRefId); }
        }
        
        public const string ColumnNameOciReleaseDate = "ac_oci_release_dt";
        private DateTime? _ociReleaseDate;
        [Column(ColumnNameOciReleaseDate)]
        public DateTime? OciReleaseDate
        {
            get { return _ociReleaseDate; }
            set { _ociReleaseDate = value; MarkColumnModified(ColumnNameOciReleaseDate); }
        }
        
        public const string ColumnNameEntryAccountPaymentsAccrualsRefId = "ac_rv_entry_account_payments_accruals";
        private int? _entryAccountPaymentsAccrualsRefId;
        [Column(ColumnNameEntryAccountPaymentsAccrualsRefId)]
        public int? EntryAccountPaymentsAccrualsRefId
        {
            get { return _entryAccountPaymentsAccrualsRefId; }
            set { _entryAccountPaymentsAccrualsRefId = value; MarkColumnModified(ColumnNameEntryAccountPaymentsAccrualsRefId); }
        }
        
        public const string ColumnNameEntryAccountAmortizationRefId = "ac_rv_entry_account_amortization";
        private int? _entryAccountAmortizationRefId;
        [Column(ColumnNameEntryAccountAmortizationRefId)]
        public int? EntryAccountAmortizationRefId
        {
            get { return _entryAccountAmortizationRefId; }
            set { _entryAccountAmortizationRefId = value; MarkColumnModified(ColumnNameEntryAccountAmortizationRefId); }
        }
        
        public const string ColumnNameEntryAccountIneffectivenessRefId = "ac_rv_entry_account_ineffectiveness";
        private int? _entryAccountIneffectivenessRefId;
        [Column(ColumnNameEntryAccountIneffectivenessRefId)]
        public int? EntryAccountIneffectivenessRefId
        {
            get { return _entryAccountIneffectivenessRefId; }
            set { _entryAccountIneffectivenessRefId = value; MarkColumnModified(ColumnNameEntryAccountIneffectivenessRefId); }
        }
        
        public const string ColumnNameEntryAccountHedgedItemRefId = "ac_rv_entry_account_hedged_item";
        private int? _entryAccountHedgedItemRefId;
        [Column(ColumnNameEntryAccountHedgedItemRefId)]
        public int? EntryAccountHedgedItemRefId
        {
            get { return _entryAccountHedgedItemRefId; }
            set { _entryAccountHedgedItemRefId = value; MarkColumnModified(ColumnNameEntryAccountHedgedItemRefId); }
        }
        
        public const string ColumnNameCapitalExpenditure = "ac_capital_expenditure_bit";
        private bool? _capitalExpenditure;
        [Column(ColumnNameCapitalExpenditure)]
        public bool? CapitalExpenditure
        {
            get { return _capitalExpenditure; }
            set { _capitalExpenditure = value; MarkColumnModified(ColumnNameCapitalExpenditure); }
        }
        
        public const string ColumnNameCapitalExpenditureAmortStartDate = "ac_capex_amort_start_date";
        private DateTime? _capitalExpenditureAmortStartDate;
        [Column(ColumnNameCapitalExpenditureAmortStartDate)]
        public DateTime? CapitalExpenditureAmortStartDate
        {
            get { return _capitalExpenditureAmortStartDate; }
            set { _capitalExpenditureAmortStartDate = value; MarkColumnModified(ColumnNameCapitalExpenditureAmortStartDate); }
        }
        
        public const string ColumnNameCapitalExpenditureAmortEndDate = "ac_capex_amort_end_date";
        private DateTime? _capitalExpenditureAmortEndDate;
        [Column(ColumnNameCapitalExpenditureAmortEndDate)]
        public DateTime? CapitalExpenditureAmortEndDate
        {
            get { return _capitalExpenditureAmortEndDate; }
            set { _capitalExpenditureAmortEndDate = value; MarkColumnModified(ColumnNameCapitalExpenditureAmortEndDate); }
        }
        
        public const string ColumnNameCapitalExpenditureAmortResidualPercent = "ac_capex_residual_percent";
        private decimal? _capitalExpenditureAmortResidualPercent;
        [Column(ColumnNameCapitalExpenditureAmortResidualPercent)]
        public decimal? CapitalExpenditureAmortResidualPercent
        {
            get { return _capitalExpenditureAmortResidualPercent; }
            set { _capitalExpenditureAmortResidualPercent = value; MarkColumnModified(ColumnNameCapitalExpenditureAmortResidualPercent); }
        }
        
        public const string ColumnNameCapitalExpenditureAmortTypeRefId = "ac_rv_capex_amort_type";
        private int? _capitalExpenditureAmortTypeRefId;
        [Column(ColumnNameCapitalExpenditureAmortTypeRefId)]
        public int? CapitalExpenditureAmortTypeRefId
        {
            get { return _capitalExpenditureAmortTypeRefId; }
            set { _capitalExpenditureAmortTypeRefId = value; MarkColumnModified(ColumnNameCapitalExpenditureAmortTypeRefId); }
        }
        
        public const string ColumnNameCapitalExpenditureAmortFrequencyRefId = "ac_rv_capex_amort_freq";
        private int? _capitalExpenditureAmortFrequencyRefId;
        [Column(ColumnNameCapitalExpenditureAmortFrequencyRefId)]
        public int? CapitalExpenditureAmortFrequencyRefId
        {
            get { return _capitalExpenditureAmortFrequencyRefId; }
            set { _capitalExpenditureAmortFrequencyRefId = value; MarkColumnModified(ColumnNameCapitalExpenditureAmortFrequencyRefId); }
        }
        
        public const string ColumnNameAccruedInterestJournalEntriesRequiredRefId = "ac_rv_acc_int_jes_reqd";
        private int? _accruedInterestJournalEntriesRequiredRefId;
        [Column(ColumnNameAccruedInterestJournalEntriesRequiredRefId)]
        public int? AccruedInterestJournalEntriesRequiredRefId
        {
            get { return _accruedInterestJournalEntriesRequiredRefId; }
            set { _accruedInterestJournalEntriesRequiredRefId = value; MarkColumnModified(ColumnNameAccruedInterestJournalEntriesRequiredRefId); }
        }
        
        public const string ColumnNameAccruedInterestExpenseEntriesRefId = "ac_rv_accrdint_expense_entries";
        private int? _accruedInterestExpenseEntriesRefId;
        [Column(ColumnNameAccruedInterestExpenseEntriesRefId)]
        public int? AccruedInterestExpenseEntriesRefId
        {
            get { return _accruedInterestExpenseEntriesRefId; }
            set { _accruedInterestExpenseEntriesRefId = value; MarkColumnModified(ColumnNameAccruedInterestExpenseEntriesRefId); }
        }
        
        public const string ColumnNameCapitalExpenditureScrapDate = "ac_capital_expenditure_scrap_dt";
        private DateTime? _capitalExpenditureScrapDate;
        [Column(ColumnNameCapitalExpenditureScrapDate)]
        public DateTime? CapitalExpenditureScrapDate
        {
            get { return _capitalExpenditureScrapDate; }
            set { _capitalExpenditureScrapDate = value; MarkColumnModified(ColumnNameCapitalExpenditureScrapDate); }
        }
        
        public const string ColumnNameOffMarketOciReclassBasedOnRefId = "ac_rv_off_market_oci_reclass_based_on";
        private int? _offMarketOciReclassBasedOnRefId;
        [Column(ColumnNameOffMarketOciReclassBasedOnRefId)]
        public int? OffMarketOciReclassBasedOnRefId
        {
            get { return _offMarketOciReclassBasedOnRefId; }
            set { _offMarketOciReclassBasedOnRefId = value; MarkColumnModified(ColumnNameOffMarketOciReclassBasedOnRefId); }
        }
        
        public const string ColumnNameRunPaymentSummaryEntriesRefId = "ac_rv_run_payment_summary_entries";
        private int? _runPaymentSummaryEntriesRefId;
        [Column(ColumnNameRunPaymentSummaryEntriesRefId)]
        public int? RunPaymentSummaryEntriesRefId
        {
            get { return _runPaymentSummaryEntriesRefId; }
            set { _runPaymentSummaryEntriesRefId = value; MarkColumnModified(ColumnNameRunPaymentSummaryEntriesRefId); }
        }
        
        public const string ColumnNameConfidenceInterval = "ac_confidence_interval";
        private decimal? _confidenceInterval;
        [Column(ColumnNameConfidenceInterval)]
        public decimal? ConfidenceInterval
        {
            get { return _confidenceInterval; }
            set { _confidenceInterval = value; MarkColumnModified(ColumnNameConfidenceInterval); }
        }
        
        public const string ColumnNameOffMarketMethodRefId = "ac_rv_off_market_logic";
        private int? _offMarketMethodRefId;
        [Column(ColumnNameOffMarketMethodRefId)]
        public int? OffMarketMethodRefId
        {
            get { return _offMarketMethodRefId; }
            set { _offMarketMethodRefId = value; MarkColumnModified(ColumnNameOffMarketMethodRefId); }
        }
        
        public const string ColumnNameTenorMax = "ac_tenor_max";
        private int? _tenorMax;
        [Column(ColumnNameTenorMax)]
        public int? TenorMax
        {
            get { return _tenorMax; }
            set { _tenorMax = value; MarkColumnModified(ColumnNameTenorMax); }
        }
        
        public const string ColumnNameTenorMin = "ac_tenor_min";
        private int? _tenorMin;
        [Column(ColumnNameTenorMin)]
        public int? TenorMin
        {
            get { return _tenorMin; }
            set { _tenorMin = value; MarkColumnModified(ColumnNameTenorMin); }
        }
        
        public const string ColumnNameCurveRecycleDate = "ac_curve_recycle_date";
        private DateTime? _curveRecycleDate;
        [Column(ColumnNameCurveRecycleDate)]
        public DateTime? CurveRecycleDate
        {
            get { return _curveRecycleDate; }
            set { _curveRecycleDate = value; MarkColumnModified(ColumnNameCurveRecycleDate); }
        }
        
        public const string ColumnNameInceptionDataPointFrequency = "ac_rv_inception_data_point_frequency";
        private int? _inceptionDataPointFrequency;
        [Column(ColumnNameInceptionDataPointFrequency)]
        public int? InceptionDataPointFrequency
        {
            get { return _inceptionDataPointFrequency; }
            set { _inceptionDataPointFrequency = value; MarkColumnModified(ColumnNameInceptionDataPointFrequency); }
        }
        
        public const string ColumnNameInceptionDataPointCount = "ac_inception_data_point_count";
        private int? _inceptionDataPointCount;
        [Column(ColumnNameInceptionDataPointCount)]
        public int? InceptionDataPointCount
        {
            get { return _inceptionDataPointCount; }
            set { _inceptionDataPointCount = value; MarkColumnModified(ColumnNameInceptionDataPointCount); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_accounting_batch_process_date")]
    [PrimaryKey("abpd_accounting_batch_process_date_id")]
    [ExplicitColumns]
    public class AccountingProcessDateTableModel : TableModel
    {
        
        public const string ColumnNameId = "abpd_accounting_batch_process_date_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameAccountingProcessTransactionId = "abpd_abpt_accounting_batch_process_transaction_id";
        private int _accountingProcessTransactionId;
        [Column(ColumnNameAccountingProcessTransactionId)]
        public int AccountingProcessTransactionId
        {
            get { return _accountingProcessTransactionId; }
            set { _accountingProcessTransactionId = value; MarkColumnModified(ColumnNameAccountingProcessTransactionId); }
        }
        
        public const string ColumnNameGroupGuid = "abpd_group_guid";
        private Guid _groupGuid;
        [Column(ColumnNameGroupGuid)]
        public Guid GroupGuid
        {
            get { return _groupGuid; }
            set { _groupGuid = value; MarkColumnModified(ColumnNameGroupGuid); }
        }
        
        public const string ColumnNameCategory = "abpd_rv_category";
        private int _category;
        [Column(ColumnNameCategory)]
        public int Category
        {
            get { return _category; }
            set { _category = value; MarkColumnModified(ColumnNameCategory); }
        }
        
        public const string ColumnNameValueDate = "abpd_value_dt";
        private DateTime _valueDate;
        [Column(ColumnNameValueDate)]
        public DateTime ValueDate
        {
            get { return _valueDate; }
            set { _valueDate = value; MarkColumnModified(ColumnNameValueDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_accounting_batch_process_run")]
    [PrimaryKey("abpr_accounting_batch_process_run_id")]
    [ExplicitColumns]
    public class AccountingProcessRunTableModel : TableModel
    {
        
        public const string ColumnNameId = "abpr_accounting_batch_process_run_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameStatus = "abpr_rv_status";
        private int _status;
        [Column(ColumnNameStatus)]
        public int Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
        
        public const string ColumnNameRunDate = "abpr_run_dt";
        private DateTime _runDate;
        [Column(ColumnNameRunDate)]
        public DateTime RunDate
        {
            get { return _runDate; }
            set { _runDate = value; MarkColumnModified(ColumnNameRunDate); }
        }
        
        public const string ColumnNameProcessType = "abpr_rv_process_type";
        private int _processType;
        [Column(ColumnNameProcessType)]
        public int ProcessType
        {
            get { return _processType; }
            set { _processType = value; MarkColumnModified(ColumnNameProcessType); }
        }
        
        public const string ColumnNameCreatedOn = "abpr_create_utc";
        [ResultColumn(ColumnNameCreatedOn)]
        public DateTime? CreatedOn { get; set; }
        
        public const string ColumnNameContactId = "abpr_rc_contact_id";
        private int? _contactId;
        [Column(ColumnNameContactId)]
        public int? ContactId
        {
            get { return _contactId; }
            set { _contactId = value; MarkColumnModified(ColumnNameContactId); }
        }
        
        public const string ColumnNameEntityId = "abpr_re_entity_id";
        private int? _entityId;
        [Column(ColumnNameEntityId)]
        public int? EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameStartDateUtc = "abpr_start_dt_utc";
        private DateTime? _startDateUtc;
        [Column(ColumnNameStartDateUtc)]
        public DateTime? StartDateUtc
        {
            get { return _startDateUtc; }
            set { _startDateUtc = value; MarkColumnModified(ColumnNameStartDateUtc); }
        }
        
        public const string ColumnNameEndDateUtc = "abpr_end_dt_utc";
        private DateTime? _endDateUtc;
        [Column(ColumnNameEndDateUtc)]
        public DateTime? EndDateUtc
        {
            get { return _endDateUtc; }
            set { _endDateUtc = value; MarkColumnModified(ColumnNameEndDateUtc); }
        }
        
        public const string ColumnNameNoteId = "abpr_nt_note_id";
        private int? _noteId;
        [Column(ColumnNameNoteId)]
        public int? NoteId
        {
            get { return _noteId; }
            set { _noteId = value; MarkColumnModified(ColumnNameNoteId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_accounting_batch_process_transaction")]
    [PrimaryKey("abpt_accounting_batch_process_transaction_id")]
    [ExplicitColumns]
    public class AccountingProcessTransactionTableModel : TableModel
    {
        
        public const string ColumnNameId = "abpt_accounting_batch_process_transaction_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameAccountingProcessRunId = "abpt_abpr_accounting_batch_process_run_id";
        private int _accountingProcessRunId;
        [Column(ColumnNameAccountingProcessRunId)]
        public int AccountingProcessRunId
        {
            get { return _accountingProcessRunId; }
            set { _accountingProcessRunId = value; MarkColumnModified(ColumnNameAccountingProcessRunId); }
        }
        
        public const string ColumnNameTransactionId = "abpt_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameStatus = "abpt_rv_status";
        private int _status;
        [Column(ColumnNameStatus)]
        public int Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
        
        public const string ColumnNameRunDate = "abpt_run_dt";
        private DateTime _runDate;
        [Column(ColumnNameRunDate)]
        public DateTime RunDate
        {
            get { return _runDate; }
            set { _runDate = value; MarkColumnModified(ColumnNameRunDate); }
        }
        
        public const string ColumnNameDeleteExistingEntries = "abpt_delete_existing_entries_bit";
        private bool? _deleteExistingEntries;
        [Column(ColumnNameDeleteExistingEntries)]
        public bool? DeleteExistingEntries
        {
            get { return _deleteExistingEntries; }
            set { _deleteExistingEntries = value; MarkColumnModified(ColumnNameDeleteExistingEntries); }
        }
        
        public const string ColumnNameRunAsPerfectlyEffective = "abpt_run_as_perfectly_effective";
        private bool _runAsPerfectlyEffective;
        [Column(ColumnNameRunAsPerfectlyEffective)]
        public bool RunAsPerfectlyEffective
        {
            get { return _runAsPerfectlyEffective; }
            set { _runAsPerfectlyEffective = value; MarkColumnModified(ColumnNameRunAsPerfectlyEffective); }
        }
        
        public const string ColumnNameRunAutolinkRegressionReport = "abpt_run_autolink_regression_report";
        private bool _runAutolinkRegressionReport;
        [Column(ColumnNameRunAutolinkRegressionReport)]
        public bool RunAutolinkRegressionReport
        {
            get { return _runAutolinkRegressionReport; }
            set { _runAutolinkRegressionReport = value; MarkColumnModified(ColumnNameRunAutolinkRegressionReport); }
        }
        
        public const string ColumnNameUseTerminationValue = "abpt_use_termination_value";
        private bool _useTerminationValue;
        [Column(ColumnNameUseTerminationValue)]
        public bool UseTerminationValue
        {
            get { return _useTerminationValue; }
            set { _useTerminationValue = value; MarkColumnModified(ColumnNameUseTerminationValue); }
        }
        
        public const string ColumnNameUseExistingRegressionDatapoints = "abpt_use_existing_regression_datapoints";
        private bool _useExistingRegressionDatapoints;
        [Column(ColumnNameUseExistingRegressionDatapoints)]
        public bool UseExistingRegressionDatapoints
        {
            get { return _useExistingRegressionDatapoints; }
            set { _useExistingRegressionDatapoints = value; MarkColumnModified(ColumnNameUseExistingRegressionDatapoints); }
        }
        
        public const string ColumnNameStartDateUtc = "abpt_start_dt_utc";
        private DateTime? _startDateUtc;
        [Column(ColumnNameStartDateUtc)]
        public DateTime? StartDateUtc
        {
            get { return _startDateUtc; }
            set { _startDateUtc = value; MarkColumnModified(ColumnNameStartDateUtc); }
        }
        
        public const string ColumnNameEndDateUtc = "abpt_end_dt_utc";
        private DateTime? _endDateUtc;
        [Column(ColumnNameEndDateUtc)]
        public DateTime? EndDateUtc
        {
            get { return _endDateUtc; }
            set { _endDateUtc = value; MarkColumnModified(ColumnNameEndDateUtc); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_accounting_batch_process_transaction_error")]
    [PrimaryKey("abpte_accounting_batch_process_transaction_error_id")]
    [ExplicitColumns]
    public class AccountingProcessTransactionErrorTableModel : TableModel
    {
        
        public const string ColumnNameId = "abpte_accounting_batch_process_transaction_error_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameAccountingProcessTransactionId = "abpte_abpt_accounting_batch_process_transaction_id";
        private int _accountingProcessTransactionId;
        [Column(ColumnNameAccountingProcessTransactionId)]
        public int AccountingProcessTransactionId
        {
            get { return _accountingProcessTransactionId; }
            set { _accountingProcessTransactionId = value; MarkColumnModified(ColumnNameAccountingProcessTransactionId); }
        }
        
        public const string ColumnNameErrorDetail = "abpte_error_detail";
        private string _errorDetail;
        [Column(ColumnNameErrorDetail)]
        public string ErrorDetail
        {
            get { return _errorDetail; }
            set { _errorDetail = value; MarkColumnModified(ColumnNameErrorDetail); }
        }
        
        public const string ColumnNameTreatmentId = "abpte_ac_accounting_id";
        private int? _treatmentId;
        [Column(ColumnNameTreatmentId)]
        public int? TreatmentId
        {
            get { return _treatmentId; }
            set { _treatmentId = value; MarkColumnModified(ColumnNameTreatmentId); }
        }
        
        public const string ColumnNameBatchItemStatus = "abpte_rv_status";
        private int? _batchItemStatus;
        [Column(ColumnNameBatchItemStatus)]
        public int? BatchItemStatus
        {
            get { return _batchItemStatus; }
            set { _batchItemStatus = value; MarkColumnModified(ColumnNameBatchItemStatus); }
        }
        
        public const string ColumnNameStartDateUtc = "abpte_start_dt_utc";
        private DateTime? _startDateUtc;
        [Column(ColumnNameStartDateUtc)]
        public DateTime? StartDateUtc
        {
            get { return _startDateUtc; }
            set { _startDateUtc = value; MarkColumnModified(ColumnNameStartDateUtc); }
        }
        
        public const string ColumnNameEndDateUtc = "abpte_end_dt_utc";
        private DateTime? _endDateUtc;
        [Column(ColumnNameEndDateUtc)]
        public DateTime? EndDateUtc
        {
            get { return _endDateUtc; }
            set { _endDateUtc = value; MarkColumnModified(ColumnNameEndDateUtc); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_accounting_default")]
    [PrimaryKey("aad_accounting_default_id")]
    [ExplicitColumns]
    public class TreatmentTemplateTableModel : TableModel
    {
        
        public const string ColumnNameId = "aad_accounting_default_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameName = "aad_treatment_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
        
        public const string ColumnNameUsesInceptionRegression = "aad_inception_regression_bit";
        private bool _usesInceptionRegression;
        [Column(ColumnNameUsesInceptionRegression)]
        public bool UsesInceptionRegression
        {
            get { return _usesInceptionRegression; }
            set { _usesInceptionRegression = value; MarkColumnModified(ColumnNameUsesInceptionRegression); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_accounting_period")]
    [PrimaryKey("acp_accounting_period_id")]
    [ExplicitColumns]
    public class TreatmentPeriodEndDateTableModel : TableModel
    {
        
        public const string ColumnNameId = "acp_accounting_period_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTreatmentId = "acp_ac_accounting_id";
        private int _treatmentId;
        [Column(ColumnNameTreatmentId)]
        public int TreatmentId
        {
            get { return _treatmentId; }
            set { _treatmentId = value; MarkColumnModified(ColumnNameTreatmentId); }
        }
        
        public const string ColumnNamePeriodEndDate = "acp_period_end_date";
        private DateTime _periodEndDate;
        [Column(ColumnNamePeriodEndDate)]
        public DateTime PeriodEndDate
        {
            get { return _periodEndDate; }
            set { _periodEndDate = value; MarkColumnModified(ColumnNamePeriodEndDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_accounting_poc")]
    [PrimaryKey("acpoc_accounting_poc_id")]
    [ExplicitColumns]
    public class TreatmentPocTableModel : TableModel
    {
        
        public const string ColumnNameId = "acpoc_accounting_poc_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTreatmentId = "acpoc_ac_accounting_id";
        private int _treatmentId;
        [Column(ColumnNameTreatmentId)]
        public int TreatmentId
        {
            get { return _treatmentId; }
            set { _treatmentId = value; MarkColumnModified(ColumnNameTreatmentId); }
        }
        
        public const string ColumnNameRemeasurementOfDeferred = "acpoc_rv_remeasurement_deferred";
        private int? _remeasurementOfDeferred;
        [Column(ColumnNameRemeasurementOfDeferred)]
        public int? RemeasurementOfDeferred
        {
            get { return _remeasurementOfDeferred; }
            set { _remeasurementOfDeferred = value; MarkColumnModified(ColumnNameRemeasurementOfDeferred); }
        }
        
        public const string ColumnNameRateForRecognition = "acpoc_rv_rate_for_recognition";
        private int? _rateForRecognition;
        [Column(ColumnNameRateForRecognition)]
        public int? RateForRecognition
        {
            get { return _rateForRecognition; }
            set { _rateForRecognition = value; MarkColumnModified(ColumnNameRateForRecognition); }
        }
        
        public const string ColumnNameRateForCash = "acpoc_rv_rate_for_cash";
        private int? _rateForCash;
        [Column(ColumnNameRateForCash)]
        public int? RateForCash
        {
            get { return _rateForCash; }
            set { _rateForCash = value; MarkColumnModified(ColumnNameRateForCash); }
        }
        
        public const string ColumnNameRateForRemeasurement = "acpoc_rv_rate_for_remeasurement";
        private int? _rateForRemeasurement;
        [Column(ColumnNameRateForRemeasurement)]
        public int? RateForRemeasurement
        {
            get { return _rateForRemeasurement; }
            set { _rateForRemeasurement = value; MarkColumnModified(ColumnNameRateForRemeasurement); }
        }
        
        public const string ColumnNameRateForFinalSettlement = "acpoc_rv_rate_for_final_settlement";
        private int? _rateForFinalSettlement;
        [Column(ColumnNameRateForFinalSettlement)]
        public int? RateForFinalSettlement
        {
            get { return _rateForFinalSettlement; }
            set { _rateForFinalSettlement = value; MarkColumnModified(ColumnNameRateForFinalSettlement); }
        }
        
        public const string ColumnNameRateForDedesignation = "acpoc_rv_rate_for_dedesignation";
        private int? _rateForDedesignation;
        [Column(ColumnNameRateForDedesignation)]
        public int? RateForDedesignation
        {
            get { return _rateForDedesignation; }
            set { _rateForDedesignation = value; MarkColumnModified(ColumnNameRateForDedesignation); }
        }
        
        public const string ColumnNameRateForFxDerivativeOci = "acpoc_rv_rate_for_fx_derivative_oci";
        private int? _rateForFxDerivativeOci;
        [Column(ColumnNameRateForFxDerivativeOci)]
        public int? RateForFxDerivativeOci
        {
            get { return _rateForFxDerivativeOci; }
            set { _rateForFxDerivativeOci = value; MarkColumnModified(ColumnNameRateForFxDerivativeOci); }
        }
        
        public const string ColumnNameRateForInvoice = "acpoc_rv_rate_for_invoice";
        private int? _rateForInvoice;
        [Column(ColumnNameRateForInvoice)]
        public int? RateForInvoice
        {
            get { return _rateForInvoice; }
            set { _rateForInvoice = value; MarkColumnModified(ColumnNameRateForInvoice); }
        }
        
        public const string ColumnNameRemeasureUnbilled = "acpoc_rv_remeasure_unbilled";
        private int? _remeasureUnbilled;
        [Column(ColumnNameRemeasureUnbilled)]
        public int? RemeasureUnbilled
        {
            get { return _remeasureUnbilled; }
            set { _remeasureUnbilled = value; MarkColumnModified(ColumnNameRemeasureUnbilled); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_acctg_quote_link")]
    [PrimaryKey("at_acctg_quote_link_id")]
    [ExplicitColumns]
    public class TreatmentLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "at_acctg_quote_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTreatmentId = "at_ac_accounting_id";
        private int _treatmentId;
        [Column(ColumnNameTreatmentId)]
        public int TreatmentId
        {
            get { return _treatmentId; }
            set { _treatmentId = value; MarkColumnModified(ColumnNameTreatmentId); }
        }
        
        public const string ColumnNameTransactionQuoteId = "at_tq_tran_quote_id";
        private int _transactionQuoteId;
        [Column(ColumnNameTransactionQuoteId)]
        public int TransactionQuoteId
        {
            get { return _transactionQuoteId; }
            set { _transactionQuoteId = value; MarkColumnModified(ColumnNameTransactionQuoteId); }
        }
        
        public const string ColumnNameLinkType = "at_link_type";
        private string _linkType;
        [Column(ColumnNameLinkType)]
        public string LinkType
        {
            get { return _linkType; }
            set { _linkType = value; MarkColumnModified(ColumnNameLinkType); }
        }
        
        public const string ColumnNameTreatmentStatus = "at_treatment_status";
        private string _treatmentStatus;
        [Column(ColumnNameTreatmentStatus)]
        public string TreatmentStatus
        {
            get { return _treatmentStatus; }
            set { _treatmentStatus = value; MarkColumnModified(ColumnNameTreatmentStatus); }
        }
        
        public const string ColumnNamePercentAllocated = "at_percent_notional_allocated";
        private decimal? _percentAllocated;
        [Column(ColumnNamePercentAllocated)]
        public decimal? PercentAllocated
        {
            get { return _percentAllocated; }
            set { _percentAllocated = value; MarkColumnModified(ColumnNamePercentAllocated); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_allocation")]
    [PrimaryKey("alc_allocation_id")]
    [ExplicitColumns]
    public class DebtAllocationTableModel : TableModel
    {
        
        public const string ColumnNameId = "alc_allocation_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameAssetLinkId = "alc_al_asset_link_id";
        private int? _assetLinkId;
        [Column(ColumnNameAssetLinkId)]
        public int? AssetLinkId
        {
            get { return _assetLinkId; }
            set { _assetLinkId = value; MarkColumnModified(ColumnNameAssetLinkId); }
        }
        
        public const string ColumnNameTransRelationId = "alc_te_trans_relation_id";
        private int? _transRelationId;
        [Column(ColumnNameTransRelationId)]
        public int? TransRelationId
        {
            get { return _transRelationId; }
            set { _transRelationId = value; MarkColumnModified(ColumnNameTransRelationId); }
        }
        
        public const string ColumnNameAllocationPercent = "alc_allocation_percent";
        private decimal? _allocationPercent;
        [Column(ColumnNameAllocationPercent)]
        public decimal? AllocationPercent
        {
            get { return _allocationPercent; }
            set { _allocationPercent = value; MarkColumnModified(ColumnNameAllocationPercent); }
        }
        
        public const string ColumnNameStartDate = "alc_start_dt";
        private DateTime _startDate;
        [Column(ColumnNameStartDate)]
        public DateTime StartDate
        {
            get { return _startDate; }
            set { _startDate = value; MarkColumnModified(ColumnNameStartDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_bank_pay_grid")]
    [PrimaryKey("bp_bnk_pmnt_grid_id")]
    [ExplicitColumns]
    public class WiringInformationTableModel : TableModel
    {
        
        public const string ColumnNameId = "bp_bnk_pmnt_grid_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameHeldForCompanyID = "bp_sponsor_re_entity_id";
        private int _heldForCompanyID;
        [Column(ColumnNameHeldForCompanyID)]
        public int HeldForCompanyID
        {
            get { return _heldForCompanyID; }
            set { _heldForCompanyID = value; MarkColumnModified(ColumnNameHeldForCompanyID); }
        }
        
        public const string ColumnNameNickName = "bp_nickname";
        private string _nickName;
        [Column(ColumnNameNickName)]
        public string NickName
        {
            get { return _nickName; }
            set { _nickName = value; MarkColumnModified(ColumnNameNickName); }
        }
        
        public const string ColumnNameSponsorOrBankLegalEntityID = "bp_re_entity_id";
        private int? _sponsorOrBankLegalEntityID;
        [Column(ColumnNameSponsorOrBankLegalEntityID)]
        public int? SponsorOrBankLegalEntityID
        {
            get { return _sponsorOrBankLegalEntityID; }
            set { _sponsorOrBankLegalEntityID = value; MarkColumnModified(ColumnNameSponsorOrBankLegalEntityID); }
        }
        
        public const string ColumnNameProductType = "bp_dd_product";
        private string _productType;
        [Column(ColumnNameProductType)]
        public string ProductType
        {
            get { return _productType; }
            set { _productType = value; MarkColumnModified(ColumnNameProductType); }
        }
        
        public const string ColumnNameCurrencyID = "bp_rv_currency_id";
        private int? _currencyID;
        [Column(ColumnNameCurrencyID)]
        public int? CurrencyID
        {
            get { return _currencyID; }
            set { _currencyID = value; MarkColumnModified(ColumnNameCurrencyID); }
        }
        
        public const string ColumnNameBankAccountNumber = "bp_bank_acct_nbr";
        private string _bankAccountNumber;
        [Column(ColumnNameBankAccountNumber)]
        public string BankAccountNumber
        {
            get { return _bankAccountNumber; }
            set { _bankAccountNumber = value; MarkColumnModified(ColumnNameBankAccountNumber); }
        }
        
        public const string ColumnNameForBenefitOf = "bp_bnk_fbo_nbr";
        private string _forBenefitOf;
        [Column(ColumnNameForBenefitOf)]
        public string ForBenefitOf
        {
            get { return _forBenefitOf; }
            set { _forBenefitOf = value; MarkColumnModified(ColumnNameForBenefitOf); }
        }
        
        public const string ColumnNameWireAttention = "bp_wire_attn";
        private string _wireAttention;
        [Column(ColumnNameWireAttention)]
        public string WireAttention
        {
            get { return _wireAttention; }
            set { _wireAttention = value; MarkColumnModified(ColumnNameWireAttention); }
        }
        
        public const string ColumnNameAccountDescription = "bp_acct_description";
        private string _accountDescription;
        [Column(ColumnNameAccountDescription)]
        public string AccountDescription
        {
            get { return _accountDescription; }
            set { _accountDescription = value; MarkColumnModified(ColumnNameAccountDescription); }
        }
        
        public const string ColumnNameReceivingAgent = "bp_receiving_agent";
        private string _receivingAgent;
        [Column(ColumnNameReceivingAgent)]
        public string ReceivingAgent
        {
            get { return _receivingAgent; }
            set { _receivingAgent = value; MarkColumnModified(ColumnNameReceivingAgent); }
        }
        
        public const string ColumnNameGlobalUse = "bp_global_use_bit";
        private bool _globalUse;
        [Column(ColumnNameGlobalUse)]
        public bool GlobalUse
        {
            get { return _globalUse; }
            set { _globalUse = value; MarkColumnModified(ColumnNameGlobalUse); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_batch_process")]
    [PrimaryKey("ps_batch_process_id")]
    [ExplicitColumns]
    public class ProcessTableModel : TableModel
    {
        
        public const string ColumnNameId = "ps_batch_process_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTypeName = "ps_process_type_name";
        private string _typeName;
        [Column(ColumnNameTypeName)]
        public string TypeName
        {
            get { return _typeName; }
            set { _typeName = value; MarkColumnModified(ColumnNameTypeName); }
        }
        
        public const string ColumnNameAdminEmail = "ps_admin_email";
        private string _adminEmail;
        [Column(ColumnNameAdminEmail)]
        public string AdminEmail
        {
            get { return _adminEmail; }
            set { _adminEmail = value; MarkColumnModified(ColumnNameAdminEmail); }
        }
        
        public const string ColumnNameResetFrequency = "ps_rv_batch_periodicity";
        private int? _resetFrequency;
        [Column(ColumnNameResetFrequency)]
        public int? ResetFrequency
        {
            get { return _resetFrequency; }
            set { _resetFrequency = value; MarkColumnModified(ColumnNameResetFrequency); }
        }
        
        public const string ColumnNameBusinessDayConvention = "ps_rv_business_day_conv";
        private int? _businessDayConvention;
        [Column(ColumnNameBusinessDayConvention)]
        public int? BusinessDayConvention
        {
            get { return _businessDayConvention; }
            set { _businessDayConvention = value; MarkColumnModified(ColumnNameBusinessDayConvention); }
        }
        
        public const string ColumnNameIsBusinessDay = "ps_business_day_bit";
        private bool? _isBusinessDay;
        [Column(ColumnNameIsBusinessDay)]
        public bool? IsBusinessDay
        {
            get { return _isBusinessDay; }
            set { _isBusinessDay = value; MarkColumnModified(ColumnNameIsBusinessDay); }
        }
        
        public const string ColumnNameAssemblyPath = "ps_assembly_path";
        private string _assemblyPath;
        [Column(ColumnNameAssemblyPath)]
        public string AssemblyPath
        {
            get { return _assemblyPath; }
            set { _assemblyPath = value; MarkColumnModified(ColumnNameAssemblyPath); }
        }
        
        public const string ColumnNameTimeOut = "ps_process_timeout";
        private int? _timeOut;
        [Column(ColumnNameTimeOut)]
        public int? TimeOut
        {
            get { return _timeOut; }
            set { _timeOut = value; MarkColumnModified(ColumnNameTimeOut); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_batch_process_arg")]
    [PrimaryKey("pa_batch_process_arg_id")]
    [ExplicitColumns]
    public class ProcessArgTableModel : TableModel
    {
        
        public const string ColumnNameId = "pa_batch_process_arg_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameProcessRunId = "pa_pr_batch_process_run_id";
        private int _processRunId;
        [Column(ColumnNameProcessRunId)]
        public int ProcessRunId
        {
            get { return _processRunId; }
            set { _processRunId = value; MarkColumnModified(ColumnNameProcessRunId); }
        }
        
        public const string ColumnNameProcessArgDefinitionId = "pa_pd_arg_def_id";
        private int _processArgDefinitionId;
        [Column(ColumnNameProcessArgDefinitionId)]
        public int ProcessArgDefinitionId
        {
            get { return _processArgDefinitionId; }
            set { _processArgDefinitionId = value; MarkColumnModified(ColumnNameProcessArgDefinitionId); }
        }
        
        public const string ColumnNameValue = "pa_arg_value";
        private string _value;
        [Column(ColumnNameValue)]
        public string Value
        {
            get { return _value; }
            set { _value = value; MarkColumnModified(ColumnNameValue); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_batch_process_arg_def")]
    [PrimaryKey("pd_batch_process_arg_def_id")]
    [ExplicitColumns]
    public class ProcessArgDefinitionTableModel : TableModel
    {
        
        public const string ColumnNameId = "pd_batch_process_arg_def_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameProcessId = "pd_ps_batch_process_id";
        private int _processId;
        [Column(ColumnNameProcessId)]
        public int ProcessId
        {
            get { return _processId; }
            set { _processId = value; MarkColumnModified(ColumnNameProcessId); }
        }
        
        public const string ColumnNameName = "pd_arg_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
        
        public const string ColumnNameType = "pd_rv_arg_type";
        private int _type;
        [Column(ColumnNameType)]
        public int Type
        {
            get { return _type; }
            set { _type = value; MarkColumnModified(ColumnNameType); }
        }
        
        public const string ColumnNameIsRequired = "pd_required_bit";
        private bool? _isRequired;
        [Column(ColumnNameIsRequired)]
        public bool? IsRequired
        {
            get { return _isRequired; }
            set { _isRequired = value; MarkColumnModified(ColumnNameIsRequired); }
        }
        
        public const string ColumnNameMultipleAllowed = "pd_multiple_allowed_bit";
        private bool? _multipleAllowed;
        [Column(ColumnNameMultipleAllowed)]
        public bool? MultipleAllowed
        {
            get { return _multipleAllowed; }
            set { _multipleAllowed = value; MarkColumnModified(ColumnNameMultipleAllowed); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_batch_process_depend")]
    [PrimaryKey("pd_process_dep_id")]
    [ExplicitColumns]
    public class ProcessDependencyTableModel : TableModel
    {
        
        public const string ColumnNameId = "pd_process_dep_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameParentProcessRunId = "pd_parent_pr_batch_process_run_id";
        private int _parentProcessRunId;
        [Column(ColumnNameParentProcessRunId)]
        public int ParentProcessRunId
        {
            get { return _parentProcessRunId; }
            set { _parentProcessRunId = value; MarkColumnModified(ColumnNameParentProcessRunId); }
        }
        
        public const string ColumnNameChildProcessRunId = "pd_child_pr_batch_process_run_id";
        private int _childProcessRunId;
        [Column(ColumnNameChildProcessRunId)]
        public int ChildProcessRunId
        {
            get { return _childProcessRunId; }
            set { _childProcessRunId = value; MarkColumnModified(ColumnNameChildProcessRunId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_batch_process_run")]
    [PrimaryKey("pr_batch_process_run_id")]
    [ExplicitColumns]
    public class ProcessRunTableModel : TableModel
    {
        
        public const string ColumnNameId = "pr_batch_process_run_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameProcessId = "pr_ps_batch_process_id";
        private int _processId;
        [Column(ColumnNameProcessId)]
        public int ProcessId
        {
            get { return _processId; }
            set { _processId = value; MarkColumnModified(ColumnNameProcessId); }
        }
        
        public const string ColumnNameIsBatch = "pr_batch_bit";
        private bool? _isBatch;
        [Column(ColumnNameIsBatch)]
        public bool? IsBatch
        {
            get { return _isBatch; }
            set { _isBatch = value; MarkColumnModified(ColumnNameIsBatch); }
        }
        
        public const string ColumnNameRunTime = "pr_run_time_dt";
        private DateTime _runTime;
        [Column(ColumnNameRunTime)]
        public DateTime RunTime
        {
            get { return _runTime; }
            set { _runTime = value; MarkColumnModified(ColumnNameRunTime); }
        }
        
        public const string ColumnNameFriendlyName = "pr_friendly_name";
        private string _friendlyName;
        [Column(ColumnNameFriendlyName)]
        public string FriendlyName
        {
            get { return _friendlyName; }
            set { _friendlyName = value; MarkColumnModified(ColumnNameFriendlyName); }
        }
        
        public const string ColumnNameIsConstant = "pr_constant_bit";
        private bool? _isConstant;
        [Column(ColumnNameIsConstant)]
        public bool? IsConstant
        {
            get { return _isConstant; }
            set { _isConstant = value; MarkColumnModified(ColumnNameIsConstant); }
        }
        
        public const string ColumnNameIsConstantSensitive = "pr_cost_sensitive_bit";
        private bool _isConstantSensitive;
        [Column(ColumnNameIsConstantSensitive)]
        public bool IsConstantSensitive
        {
            get { return _isConstantSensitive; }
            set { _isConstantSensitive = value; MarkColumnModified(ColumnNameIsConstantSensitive); }
        }
        
        public const string ColumnNameCloseMinute = "pr_close_minute";
        private int? _closeMinute;
        [Column(ColumnNameCloseMinute)]
        public int? CloseMinute
        {
            get { return _closeMinute; }
            set { _closeMinute = value; MarkColumnModified(ColumnNameCloseMinute); }
        }
        
        public const string ColumnNameRunOnNonBusinessDays = "pr_run_on_non_business_days";
        private bool? _runOnNonBusinessDays;
        [Column(ColumnNameRunOnNonBusinessDays)]
        public bool? RunOnNonBusinessDays
        {
            get { return _runOnNonBusinessDays; }
            set { _runOnNonBusinessDays = value; MarkColumnModified(ColumnNameRunOnNonBusinessDays); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_bond_detail")]
    [PrimaryKey("bd_bond_det_id")]
    [ExplicitColumns]
    public class BondDetailTableModel : TableModel
    {
        
        public const string ColumnNameId = "bd_bond_det_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameName = "bd_bond_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
        
        public const string ColumnNameCoupon = "bd_bond_coupon";
        private decimal? _coupon;
        [Column(ColumnNameCoupon)]
        public decimal? Coupon
        {
            get { return _coupon; }
            set { _coupon = value; MarkColumnModified(ColumnNameCoupon); }
        }
        
        public const string ColumnNameMaturity = "bd_maturity_dt";
        private DateTime? _maturity;
        [Column(ColumnNameMaturity)]
        public DateTime? Maturity
        {
            get { return _maturity; }
            set { _maturity = value; MarkColumnModified(ColumnNameMaturity); }
        }
        
        public const string ColumnNameCallable = "bd_dd_callable";
        private string _callable;
        [Column(ColumnNameCallable)]
        public string Callable
        {
            get { return _callable; }
            set { _callable = value; MarkColumnModified(ColumnNameCallable); }
        }
        
        public const string ColumnNameCallPrice = "bd_call_price";
        private decimal? _callPrice;
        [Column(ColumnNameCallPrice)]
        public decimal? CallPrice
        {
            get { return _callPrice; }
            set { _callPrice = value; MarkColumnModified(ColumnNameCallPrice); }
        }
        
        public const string ColumnNameEarliestCallDate = "bd_earliest_call_dt";
        private DateTime? _earliestCallDate;
        [Column(ColumnNameEarliestCallDate)]
        public DateTime? EarliestCallDate
        {
            get { return _earliestCallDate; }
            set { _earliestCallDate = value; MarkColumnModified(ColumnNameEarliestCallDate); }
        }
        
        public const string ColumnNameBondIssuer = "bd_bond_issuer";
        private string _bondIssuer;
        [Column(ColumnNameBondIssuer)]
        public string BondIssuer
        {
            get { return _bondIssuer; }
            set { _bondIssuer = value; MarkColumnModified(ColumnNameBondIssuer); }
        }
        
        public const string ColumnNameValueAtPar = "bd_value_at_par";
        private decimal? _valueAtPar;
        [Column(ColumnNameValueAtPar)]
        public decimal? ValueAtPar
        {
            get { return _valueAtPar; }
            set { _valueAtPar = value; MarkColumnModified(ColumnNameValueAtPar); }
        }
        
        public const string ColumnNameCouponFrequency = "bd_dd_coupon_freq";
        private string _couponFrequency;
        [Column(ColumnNameCouponFrequency)]
        public string CouponFrequency
        {
            get { return _couponFrequency; }
            set { _couponFrequency = value; MarkColumnModified(ColumnNameCouponFrequency); }
        }
        
        public const string ColumnNameDayCountFraction = "bd_dd_day_fraction";
        private string _dayCountFraction;
        [Column(ColumnNameDayCountFraction)]
        public string DayCountFraction
        {
            get { return _dayCountFraction; }
            set { _dayCountFraction = value; MarkColumnModified(ColumnNameDayCountFraction); }
        }
        
        public const string ColumnNameCurrency = "bd_rv_currency_id";
        private int? _currency;
        [Column(ColumnNameCurrency)]
        public int? Currency
        {
            get { return _currency; }
            set { _currency = value; MarkColumnModified(ColumnNameCurrency); }
        }
        
        public const string ColumnNameIssueDate = "bd_issue_dt";
        private DateTime? _issueDate;
        [Column(ColumnNameIssueDate)]
        public DateTime? IssueDate
        {
            get { return _issueDate; }
            set { _issueDate = value; MarkColumnModified(ColumnNameIssueDate); }
        }
        
        public const string ColumnNameTenor = "bd_tenor";
        private decimal? _tenor;
        [Column(ColumnNameTenor)]
        public decimal? Tenor
        {
            get { return _tenor; }
            set { _tenor = value; MarkColumnModified(ColumnNameTenor); }
        }
        
        public const string ColumnNameCusip = "bd_cusip";
        private string _cusip;
        [Column(ColumnNameCusip)]
        public string Cusip
        {
            get { return _cusip; }
            set { _cusip = value; MarkColumnModified(ColumnNameCusip); }
        }
        
        public const string ColumnNameIssuanceNumber = "bd_isin_nbr";
        private string _issuanceNumber;
        [Column(ColumnNameIssuanceNumber)]
        public string IssuanceNumber
        {
            get { return _issuanceNumber; }
            set { _issuanceNumber = value; MarkColumnModified(ColumnNameIssuanceNumber); }
        }
        
        public const string ColumnNameIssuanceAmount = "bd_issue_amt";
        private decimal? _issuanceAmount;
        [Column(ColumnNameIssuanceAmount)]
        public decimal? IssuanceAmount
        {
            get { return _issuanceAmount; }
            set { _issuanceAmount = value; MarkColumnModified(ColumnNameIssuanceAmount); }
        }
        
        public const string ColumnNameNominalSpread = "bd_nominal_spread";
        private string _nominalSpread;
        [Column(ColumnNameNominalSpread)]
        public string NominalSpread
        {
            get { return _nominalSpread; }
            set { _nominalSpread = value; MarkColumnModified(ColumnNameNominalSpread); }
        }
        
        public const string ColumnNameNominalCoupon = "bd_nominal_coupon";
        private string _nominalCoupon;
        [Column(ColumnNameNominalCoupon)]
        public string NominalCoupon
        {
            get { return _nominalCoupon; }
            set { _nominalCoupon = value; MarkColumnModified(ColumnNameNominalCoupon); }
        }
        
        public const string ColumnNameSpread = "bd_spread";
        private decimal? _spread;
        [Column(ColumnNameSpread)]
        public decimal? Spread
        {
            get { return _spread; }
            set { _spread = value; MarkColumnModified(ColumnNameSpread); }
        }
        
        public const string ColumnNameSpreadIsConstant = "bd_dd_spread_const_yn";
        private string _spreadIsConstant;
        [Column(ColumnNameSpreadIsConstant)]
        public string SpreadIsConstant
        {
            get { return _spreadIsConstant; }
            set { _spreadIsConstant = value; MarkColumnModified(ColumnNameSpreadIsConstant); }
        }
        
        public const string ColumnNameCouponIsConstant = "bd_dd_coupon_const_yn";
        private string _couponIsConstant;
        [Column(ColumnNameCouponIsConstant)]
        public string CouponIsConstant
        {
            get { return _couponIsConstant; }
            set { _couponIsConstant = value; MarkColumnModified(ColumnNameCouponIsConstant); }
        }
        
        public const string ColumnNameIndexId = "bd_ix_index_id";
        private int? _indexId;
        [Column(ColumnNameIndexId)]
        public int? IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
        
        public const string ColumnNameCouponType = "bd_coupon_type";
        private string _couponType;
        [Column(ColumnNameCouponType)]
        public string CouponType
        {
            get { return _couponType; }
            set { _couponType = value; MarkColumnModified(ColumnNameCouponType); }
        }
        
        public const string ColumnNameSecured = "bd_secured";
        private string _secured;
        [Column(ColumnNameSecured)]
        public string Secured
        {
            get { return _secured; }
            set { _secured = value; MarkColumnModified(ColumnNameSecured); }
        }
        
        public const string ColumnNameBloombergCode = "bd_bbg_code";
        private string _bloombergCode;
        [Column(ColumnNameBloombergCode)]
        public string BloombergCode
        {
            get { return _bloombergCode; }
            set { _bloombergCode = value; MarkColumnModified(ColumnNameBloombergCode); }
        }
        
        public const string ColumnNameEffectiveDate = "bd_eff_dt";
        private DateTime? _effectiveDate;
        [Column(ColumnNameEffectiveDate)]
        public DateTime? EffectiveDate
        {
            get { return _effectiveDate; }
            set { _effectiveDate = value; MarkColumnModified(ColumnNameEffectiveDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_bootstrap_methodology")]
    [PrimaryKey("bm_bootstrap_methodology_id")]
    [ExplicitColumns]
    public class BootstrapMethodologyTableModel : TableModel
    {
        
        public const string ColumnNameId = "bm_bootstrap_methodology_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameCurrency = "bm_rv_currency";
        private int _currency;
        [Column(ColumnNameCurrency)]
        public int Currency
        {
            get { return _currency; }
            set { _currency = value; MarkColumnModified(ColumnNameCurrency); }
        }
        
        public const string ColumnNameBootstrappingMethodology = "bm_rv_bootstrap_methodology";
        private int _bootstrappingMethodology;
        [Column(ColumnNameBootstrappingMethodology)]
        public int BootstrappingMethodology
        {
            get { return _bootstrappingMethodology; }
            set { _bootstrappingMethodology = value; MarkColumnModified(ColumnNameBootstrappingMethodology); }
        }
        
        public const string ColumnNameStartDate = "bm_start_utc";
        private DateTime? _startDate;
        [Column(ColumnNameStartDate)]
        public DateTime? StartDate
        {
            get { return _startDate; }
            set { _startDate = value; MarkColumnModified(ColumnNameStartDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_borrower_report")]
    [PrimaryKey("br_borrower_report_id")]
    [ExplicitColumns]
    public class BorrowerReportTableModel : TableModel
    {
        
        public const string ColumnNameId = "br_borrower_report_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameGenerationDate = "br_generation_dt";
        private DateTime? _generationDate;
        [Column(ColumnNameGenerationDate)]
        public DateTime? GenerationDate
        {
            get { return _generationDate; }
            set { _generationDate = value; MarkColumnModified(ColumnNameGenerationDate); }
        }
        
        public const string ColumnNameAuthorizationContactId = "br_authorized_by_rc_contact_id";
        private int? _authorizationContactId;
        [Column(ColumnNameAuthorizationContactId)]
        public int? AuthorizationContactId
        {
            get { return _authorizationContactId; }
            set { _authorizationContactId = value; MarkColumnModified(ColumnNameAuthorizationContactId); }
        }
        
        public const string ColumnNameAuthorizationDate = "br_authorization_dt";
        private DateTime? _authorizationDate;
        [Column(ColumnNameAuthorizationDate)]
        public DateTime? AuthorizationDate
        {
            get { return _authorizationDate; }
            set { _authorizationDate = value; MarkColumnModified(ColumnNameAuthorizationDate); }
        }
        
        public const string ColumnNameCreatedBy = "br_create_nm_id";
        [ResultColumn(ColumnNameCreatedBy)]
        public int? CreatedBy { get; set; }
        
        public const string ColumnNameStatus = "br_rv_status";
        private int? _status;
        [Column(ColumnNameStatus)]
        public int? Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
        
        public const string ColumnNameStatusDate = "br_status_dt";
        private DateTime? _statusDate;
        [Column(ColumnNameStatusDate)]
        public DateTime? StatusDate
        {
            get { return _statusDate; }
            set { _statusDate = value; MarkColumnModified(ColumnNameStatusDate); }
        }
        
        public const string ColumnNameSponsorId = "br_sponsor_re_entity_id";
        private int? _sponsorId;
        [Column(ColumnNameSponsorId)]
        public int? SponsorId
        {
            get { return _sponsorId; }
            set { _sponsorId = value; MarkColumnModified(ColumnNameSponsorId); }
        }
        
        public const string ColumnNameTransactionId = "br_tr_transaction_id";
        private int? _transactionId;
        [Column(ColumnNameTransactionId)]
        public int? TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameDocumentId = "br_do_document_id";
        private int? _documentId;
        [Column(ColumnNameDocumentId)]
        public int? DocumentId
        {
            get { return _documentId; }
            set { _documentId = value; MarkColumnModified(ColumnNameDocumentId); }
        }
        
        public const string ColumnNameSubject = "br_subject";
        private string _subject;
        [Column(ColumnNameSubject)]
        public string Subject
        {
            get { return _subject; }
            set { _subject = value; MarkColumnModified(ColumnNameSubject); }
        }
        
        public const string ColumnNameFirstNoticeForTransaction = "br_first_notice_for_transaction";
        private bool? _firstNoticeForTransaction;
        [Column(ColumnNameFirstNoticeForTransaction)]
        public bool? FirstNoticeForTransaction
        {
            get { return _firstNoticeForTransaction; }
            set { _firstNoticeForTransaction = value; MarkColumnModified(ColumnNameFirstNoticeForTransaction); }
        }
        
        public const string ColumnNameBody = "br_addl_text";
        private string _body;
        [Column(ColumnNameBody)]
        public string Body
        {
            get { return _body; }
            set { _body = value; MarkColumnModified(ColumnNameBody); }
        }
        
        public const string ColumnNameIsDeleted = "br_deleted_bit";
        private bool _isDeleted;
        [Column(ColumnNameIsDeleted)]
        public bool IsDeleted
        {
            get { return _isDeleted; }
            set { _isDeleted = value; MarkColumnModified(ColumnNameIsDeleted); }
        }
        
        public const string ColumnNameIsBatch = "br_is_batch_bit";
        private bool _isBatch;
        [Column(ColumnNameIsBatch)]
        public bool IsBatch
        {
            get { return _isBatch; }
            set { _isBatch = value; MarkColumnModified(ColumnNameIsBatch); }
        }
        
        public const string ColumnNameReportType = "br_rv_report_type";
        private int? _reportType;
        [Column(ColumnNameReportType)]
        public int? ReportType
        {
            get { return _reportType; }
            set { _reportType = value; MarkColumnModified(ColumnNameReportType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_borrower_report_valuation")]
    [PrimaryKey("brv_borrower_report_valuation_id")]
    [ExplicitColumns]
    public class BorrowerReportValuationTableModel : TableModel
    {
        
        public const string ColumnNameId = "brv_borrower_report_valuation_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameBorrowerReportId = "brv_br_borrower_report_id";
        private int _borrowerReportId;
        [Column(ColumnNameBorrowerReportId)]
        public int BorrowerReportId
        {
            get { return _borrowerReportId; }
            set { _borrowerReportId = value; MarkColumnModified(ColumnNameBorrowerReportId); }
        }
        
        public const string ColumnNameTotalValue = "brv_total_value";
        private decimal? _totalValue;
        [Column(ColumnNameTotalValue)]
        public decimal? TotalValue
        {
            get { return _totalValue; }
            set { _totalValue = value; MarkColumnModified(ColumnNameTotalValue); }
        }
        
        public const string ColumnNameValuationDate = "brv_valuation_dt";
        private DateTime? _valuationDate;
        [Column(ColumnNameValuationDate)]
        public DateTime? ValuationDate
        {
            get { return _valuationDate; }
            set { _valuationDate = value; MarkColumnModified(ColumnNameValuationDate); }
        }
        
        public const string ColumnNameIsDeleted = "brv_deleted_bit";
        private bool _isDeleted;
        [Column(ColumnNameIsDeleted)]
        public bool IsDeleted
        {
            get { return _isDeleted; }
            set { _isDeleted = value; MarkColumnModified(ColumnNameIsDeleted); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_calc_settle")]
    [PrimaryKey("cs_calc_settle_id")]
    [ExplicitColumns]
    public class CashSettlementTableModel : TableModel
    {
        
        public const string ColumnNameId = "cs_calc_settle_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameComponentId = "cs_cm_component_id";
        private int _componentId;
        [Column(ColumnNameComponentId)]
        public int ComponentId
        {
            get { return _componentId; }
            set { _componentId = value; MarkColumnModified(ColumnNameComponentId); }
        }
        
        public const string ColumnNameSettlementType = "cs_dd_settlement_type";
        private string _settlementType;
        [Column(ColumnNameSettlementType)]
        public string SettlementType
        {
            get { return _settlementType; }
            set { _settlementType = value; MarkColumnModified(ColumnNameSettlementType); }
        }
        
        public const string ColumnNameSettlementAmount = "cs_settlement_amt";
        private decimal? _settlementAmount;
        [Column(ColumnNameSettlementAmount)]
        public decimal? SettlementAmount
        {
            get { return _settlementAmount; }
            set { _settlementAmount = value; MarkColumnModified(ColumnNameSettlementAmount); }
        }
        
        public const string ColumnNameChathamSettlementAmount = "cs_chtm_settl_amt";
        private decimal? _chathamSettlementAmount;
        [Column(ColumnNameChathamSettlementAmount)]
        public decimal? ChathamSettlementAmount
        {
            get { return _chathamSettlementAmount; }
            set { _chathamSettlementAmount = value; MarkColumnModified(ColumnNameChathamSettlementAmount); }
        }
        
        public const string ColumnNameDeterminationDate = "cs_determination_dt";
        private DateTime? _determinationDate;
        [Column(ColumnNameDeterminationDate)]
        public DateTime? DeterminationDate
        {
            get { return _determinationDate; }
            set { _determinationDate = value; MarkColumnModified(ColumnNameDeterminationDate); }
        }
        
        public const string ColumnNameSettlementMethod = "cs_dd_settl_mthd";
        private string _settlementMethod;
        [Column(ColumnNameSettlementMethod)]
        public string SettlementMethod
        {
            get { return _settlementMethod; }
            set { _settlementMethod = value; MarkColumnModified(ColumnNameSettlementMethod); }
        }
        
        public const string ColumnNameCashSettlementPaymentDate = "cs_cash_settl_pmnt_dt";
        private DateTime? _cashSettlementPaymentDate;
        [Column(ColumnNameCashSettlementPaymentDate)]
        public DateTime? CashSettlementPaymentDate
        {
            get { return _cashSettlementPaymentDate; }
            set { _cashSettlementPaymentDate = value; MarkColumnModified(ColumnNameCashSettlementPaymentDate); }
        }
        
        public const string ColumnNameSettlementRate = "cs_settlement_rate";
        private decimal? _settlementRate;
        [Column(ColumnNameSettlementRate)]
        public decimal? SettlementRate
        {
            get { return _settlementRate; }
            set { _settlementRate = value; MarkColumnModified(ColumnNameSettlementRate); }
        }
        
        public const string ColumnNameTreasureySettlementRate = "cs_treas_settl_rate";
        private decimal? _treasureySettlementRate;
        [Column(ColumnNameTreasureySettlementRate)]
        public decimal? TreasureySettlementRate
        {
            get { return _treasureySettlementRate; }
            set { _treasureySettlementRate = value; MarkColumnModified(ColumnNameTreasureySettlementRate); }
        }
        
        public const string ColumnNameSwapSettlementRate = "cs_swap_settl_rate";
        private decimal? _swapSettlementRate;
        [Column(ColumnNameSwapSettlementRate)]
        public decimal? SwapSettlementRate
        {
            get { return _swapSettlementRate; }
            set { _swapSettlementRate = value; MarkColumnModified(ColumnNameSwapSettlementRate); }
        }
        
        public const string ColumnNameSwapSpreadSettlementRate = "cs_swp_sprd_settl_rate";
        private decimal? _swapSpreadSettlementRate;
        [Column(ColumnNameSwapSpreadSettlementRate)]
        public decimal? SwapSpreadSettlementRate
        {
            get { return _swapSpreadSettlementRate; }
            set { _swapSpreadSettlementRate = value; MarkColumnModified(ColumnNameSwapSpreadSettlementRate); }
        }
        
        public const string ColumnNameOptionStyle = "cs_dd_opt_style";
        private string _optionStyle;
        [Column(ColumnNameOptionStyle)]
        public string OptionStyle
        {
            get { return _optionStyle; }
            set { _optionStyle = value; MarkColumnModified(ColumnNameOptionStyle); }
        }
        
        public const string ColumnNameLockedTreasuryRate = "cs_locked_treas_rate";
        private decimal? _lockedTreasuryRate;
        [Column(ColumnNameLockedTreasuryRate)]
        public decimal? LockedTreasuryRate
        {
            get { return _lockedTreasuryRate; }
            set { _lockedTreasuryRate = value; MarkColumnModified(ColumnNameLockedTreasuryRate); }
        }
        
        public const string ColumnNameBuyCurrency = "cs_rv_buy_curr_id";
        private int? _buyCurrency;
        [Column(ColumnNameBuyCurrency)]
        public int? BuyCurrency
        {
            get { return _buyCurrency; }
            set { _buyCurrency = value; MarkColumnModified(ColumnNameBuyCurrency); }
        }
        
        public const string ColumnNameNotionalBuy = "cs_buy_currency";
        private decimal? _notionalBuy;
        [Column(ColumnNameNotionalBuy)]
        public decimal? NotionalBuy
        {
            get { return _notionalBuy; }
            set { _notionalBuy = value; MarkColumnModified(ColumnNameNotionalBuy); }
        }
        
        public const string ColumnNameSellCurrency = "cs_rv_sell_curr_id";
        private int? _sellCurrency;
        [Column(ColumnNameSellCurrency)]
        public int? SellCurrency
        {
            get { return _sellCurrency; }
            set { _sellCurrency = value; MarkColumnModified(ColumnNameSellCurrency); }
        }
        
        public const string ColumnNameNotionalSell = "cs_sell_currency";
        private decimal? _notionalSell;
        [Column(ColumnNameNotionalSell)]
        public decimal? NotionalSell
        {
            get { return _notionalSell; }
            set { _notionalSell = value; MarkColumnModified(ColumnNameNotionalSell); }
        }
        
        public const string ColumnNameCashSettled = "cs_dd_cash_settle";
        private string _cashSettled;
        [Column(ColumnNameCashSettled)]
        public string CashSettled
        {
            get { return _cashSettled; }
            set { _cashSettled = value; MarkColumnModified(ColumnNameCashSettled); }
        }
        
        public const string ColumnNameFloatDeterminationDay = "cs_float_determ_day";
        private int? _floatDeterminationDay;
        [Column(ColumnNameFloatDeterminationDay)]
        public int? FloatDeterminationDay
        {
            get { return _floatDeterminationDay; }
            set { _floatDeterminationDay = value; MarkColumnModified(ColumnNameFloatDeterminationDay); }
        }
        
        public const string ColumnNameSettlementDate = "cs_settlement_dt";
        private DateTime? _settlementDate;
        [Column(ColumnNameSettlementDate)]
        public DateTime? SettlementDate
        {
            get { return _settlementDate; }
            set { _settlementDate = value; MarkColumnModified(ColumnNameSettlementDate); }
        }
        
        public const string ColumnNameFutureHomeCurrencyAmount = "cs_future_home_currency_amt";
        private decimal? _futureHomeCurrencyAmount;
        [Column(ColumnNameFutureHomeCurrencyAmount)]
        public decimal? FutureHomeCurrencyAmount
        {
            get { return _futureHomeCurrencyAmount; }
            set { _futureHomeCurrencyAmount = value; MarkColumnModified(ColumnNameFutureHomeCurrencyAmount); }
        }
        
        public const string ColumnNameFutureForeignCurrencyAmount = "cs_future_foreign_currency_amt";
        private decimal? _futureForeignCurrencyAmount;
        [Column(ColumnNameFutureForeignCurrencyAmount)]
        public decimal? FutureForeignCurrencyAmount
        {
            get { return _futureForeignCurrencyAmount; }
            set { _futureForeignCurrencyAmount = value; MarkColumnModified(ColumnNameFutureForeignCurrencyAmount); }
        }
        
        public const string ColumnNameFutureHomeCurrency = "cs_rv_future_home_currency";
        private int? _futureHomeCurrency;
        [Column(ColumnNameFutureHomeCurrency)]
        public int? FutureHomeCurrency
        {
            get { return _futureHomeCurrency; }
            set { _futureHomeCurrency = value; MarkColumnModified(ColumnNameFutureHomeCurrency); }
        }
        
        public const string ColumnNameFutureForeignCurrency = "cs_rv_future_foreign_currency";
        private int? _futureForeignCurrency;
        [Column(ColumnNameFutureForeignCurrency)]
        public int? FutureForeignCurrency
        {
            get { return _futureForeignCurrency; }
            set { _futureForeignCurrency = value; MarkColumnModified(ColumnNameFutureForeignCurrency); }
        }
        
        public const string ColumnNamePresentDiscountFactor = "cs_present_discount_factor";
        private decimal? _presentDiscountFactor;
        [Column(ColumnNamePresentDiscountFactor)]
        public decimal? PresentDiscountFactor
        {
            get { return _presentDiscountFactor; }
            set { _presentDiscountFactor = value; MarkColumnModified(ColumnNamePresentDiscountFactor); }
        }
        
        public const string ColumnNamePresentCurrencyAmount = "cs_present_currency_amt";
        private decimal? _presentCurrencyAmount;
        [Column(ColumnNamePresentCurrencyAmount)]
        public decimal? PresentCurrencyAmount
        {
            get { return _presentCurrencyAmount; }
            set { _presentCurrencyAmount = value; MarkColumnModified(ColumnNamePresentCurrencyAmount); }
        }
        
        public const string ColumnNamePresentSettlementDate = "cs_present_settlement_dt";
        private DateTime? _presentSettlementDate;
        [Column(ColumnNamePresentSettlementDate)]
        public DateTime? PresentSettlementDate
        {
            get { return _presentSettlementDate; }
            set { _presentSettlementDate = value; MarkColumnModified(ColumnNamePresentSettlementDate); }
        }
        
        public const string ColumnNamePresentCurrency = "cs_rv_present_currency";
        private int? _presentCurrency;
        [Column(ColumnNamePresentCurrency)]
        public int? PresentCurrency
        {
            get { return _presentCurrency; }
            set { _presentCurrency = value; MarkColumnModified(ColumnNamePresentCurrency); }
        }
        
        public const string ColumnNameDesignationSpotRate = "cs_designation_spot_rate";
        private decimal? _designationSpotRate;
        [Column(ColumnNameDesignationSpotRate)]
        public decimal? DesignationSpotRate
        {
            get { return _designationSpotRate; }
            set { _designationSpotRate = value; MarkColumnModified(ColumnNameDesignationSpotRate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_calc_settle_FX")]
    [PrimaryKey("csfx_calc_settle_FX_id")]
    [ExplicitColumns]
    public class CashSettlementFxTableModel : TableModel
    {
        
        public const string ColumnNameId = "csfx_calc_settle_FX_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameCashSettlementId = "csfx_cs_calc_settle_id";
        private int _cashSettlementId;
        [Column(ColumnNameCashSettlementId)]
        public int CashSettlementId
        {
            get { return _cashSettlementId; }
            set { _cashSettlementId = value; MarkColumnModified(ColumnNameCashSettlementId); }
        }
        
        public const string ColumnNameSpotRate = "csfx_near_rate";
        private decimal? _spotRate;
        [Column(ColumnNameSpotRate)]
        public decimal? SpotRate
        {
            get { return _spotRate; }
            set { _spotRate = value; MarkColumnModified(ColumnNameSpotRate); }
        }
        
        public const string ColumnNameMarketPoints = "csfx_market_points";
        private decimal? _marketPoints;
        [Column(ColumnNameMarketPoints)]
        public decimal? MarketPoints
        {
            get { return _marketPoints; }
            set { _marketPoints = value; MarkColumnModified(ColumnNameMarketPoints); }
        }
        
        public const string ColumnNameCreditChargePoints = "csfx_credit_points";
        private decimal? _creditChargePoints;
        [Column(ColumnNameCreditChargePoints)]
        public decimal? CreditChargePoints
        {
            get { return _creditChargePoints; }
            set { _creditChargePoints = value; MarkColumnModified(ColumnNameCreditChargePoints); }
        }
        
        public const string ColumnNameFixingDate = "csfx_fixing_dt";
        private DateTime? _fixingDate;
        [Column(ColumnNameFixingDate)]
        public DateTime? FixingDate
        {
            get { return _fixingDate; }
            set { _fixingDate = value; MarkColumnModified(ColumnNameFixingDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_capvol_currency_switchover")]
    [PrimaryKey("cvcs_capvol_currency_switchover_id")]
    [ExplicitColumns]
    public class CapVolCurrencySwitchoverTableModel : TableModel
    {
        
        public const string ColumnNameId = "cvcs_capvol_currency_switchover_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameCurrency = "cvcs_rv_currency";
        private int _currency;
        [Column(ColumnNameCurrency)]
        public int Currency
        {
            get { return _currency; }
            set { _currency = value; MarkColumnModified(ColumnNameCurrency); }
        }
        
        public const string ColumnNameSwitchoverDate = "cvcs_capvol_switchover_dt";
        private DateTime _switchoverDate;
        [Column(ColumnNameSwitchoverDate)]
        public DateTime SwitchoverDate
        {
            get { return _switchoverDate; }
            set { _switchoverDate = value; MarkColumnModified(ColumnNameSwitchoverDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_change_in_principal")]
    [PrimaryKey("cip_change_in_principal_id")]
    [ExplicitColumns]
    public class ChangeInPrincipalTableModel : TableModel
    {
        
        public const string ColumnNameId = "cip_change_in_principal_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameComponentId = "cip_cm_component_id";
        private int _componentId;
        [Column(ColumnNameComponentId)]
        public int ComponentId
        {
            get { return _componentId; }
            set { _componentId = value; MarkColumnModified(ColumnNameComponentId); }
        }
        
        public const string ColumnNamePrincipalAmount = "cip_principal_amount";
        private decimal _principalAmount;
        [Column(ColumnNamePrincipalAmount)]
        public decimal PrincipalAmount
        {
            get { return _principalAmount; }
            set { _principalAmount = value; MarkColumnModified(ColumnNamePrincipalAmount); }
        }
        
        public const string ColumnNameEffectiveDate = "cip_effective_dt";
        private DateTime _effectiveDate;
        [Column(ColumnNameEffectiveDate)]
        public DateTime EffectiveDate
        {
            get { return _effectiveDate; }
            set { _effectiveDate = value; MarkColumnModified(ColumnNameEffectiveDate); }
        }
        
        public const string ColumnNameRate = "cip_rate";
        private decimal? _rate;
        [Column(ColumnNameRate)]
        public decimal? Rate
        {
            get { return _rate; }
            set { _rate = value; MarkColumnModified(ColumnNameRate); }
        }
        
        public const string ColumnNameSpread = "cip_spread";
        private decimal? _spread;
        [Column(ColumnNameSpread)]
        public decimal? Spread
        {
            get { return _spread; }
            set { _spread = value; MarkColumnModified(ColumnNameSpread); }
        }
        
        public const string ColumnNameDescription = "cip_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameChangeType = "cip_rv_change_type";
        private int _changeType;
        [Column(ColumnNameChangeType)]
        public int ChangeType
        {
            get { return _changeType; }
            set { _changeType = value; MarkColumnModified(ColumnNameChangeType); }
        }
        
        public const string ColumnNameDeleted = "cip_deleted_bit";
        private bool _deleted;
        [Column(ColumnNameDeleted)]
        public bool Deleted
        {
            get { return _deleted; }
            set { _deleted = value; MarkColumnModified(ColumnNameDeleted); }
        }
        
        public const string ColumnNameResetDate = "cip_reset_dt";
        private DateTime? _resetDate;
        [Column(ColumnNameResetDate)]
        public DateTime? ResetDate
        {
            get { return _resetDate; }
            set { _resetDate = value; MarkColumnModified(ColumnNameResetDate); }
        }
        
        public const string ColumnNameFixingDate = "cip_fixing_dt";
        private DateTime? _fixingDate;
        [Column(ColumnNameFixingDate)]
        public DateTime? FixingDate
        {
            get { return _fixingDate; }
            set { _fixingDate = value; MarkColumnModified(ColumnNameFixingDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_collateral_posting")]
    [PrimaryKey("clp_collateral_posting_id")]
    [ExplicitColumns]
    public class PostingTableModel : TableModel
    {
        
        public const string ColumnNameId = "clp_collateral_posting_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameMarriageId = "clp_mar_marriage_id";
        private int _marriageId;
        [Column(ColumnNameMarriageId)]
        public int MarriageId
        {
            get { return _marriageId; }
            set { _marriageId = value; MarkColumnModified(ColumnNameMarriageId); }
        }
        
        public const string ColumnNameIcadDescriptionId = "clp_icd_icad_description_id";
        private int _icadDescriptionId;
        [Column(ColumnNameIcadDescriptionId)]
        public int IcadDescriptionId
        {
            get { return _icadDescriptionId; }
            set { _icadDescriptionId = value; MarkColumnModified(ColumnNameIcadDescriptionId); }
        }
        
        public const string ColumnNameValue = "clp_value";
        private decimal _value;
        [Column(ColumnNameValue)]
        public decimal Value
        {
            get { return _value; }
            set { _value = value; MarkColumnModified(ColumnNameValue); }
        }
        
        public const string ColumnNamePostDate = "clp_post_dt";
        private DateTime _postDate;
        [Column(ColumnNamePostDate)]
        public DateTime PostDate
        {
            get { return _postDate; }
            set { _postDate = value; MarkColumnModified(ColumnNamePostDate); }
        }
        
        public const string ColumnNameType = "clp_rv_post_type";
        private int _type;
        [Column(ColumnNameType)]
        public int Type
        {
            get { return _type; }
            set { _type = value; MarkColumnModified(ColumnNameType); }
        }
        
        public const string ColumnNameInitialPost = "clp_initial_post";
        private bool? _initialPost;
        [Column(ColumnNameInitialPost)]
        public bool? InitialPost
        {
            get { return _initialPost; }
            set { _initialPost = value; MarkColumnModified(ColumnNameInitialPost); }
        }
        
        public const string ColumnNameCusip = "clp_cusip";
        private string _cusip;
        [Column(ColumnNameCusip)]
        public string Cusip
        {
            get { return _cusip; }
            set { _cusip = value; MarkColumnModified(ColumnNameCusip); }
        }
        
        public const string ColumnNamePending = "clp_pending_bit";
        private bool? _pending;
        [Column(ColumnNamePending)]
        public bool? Pending
        {
            get { return _pending; }
            set { _pending = value; MarkColumnModified(ColumnNamePending); }
        }
        
        public const string ColumnNameDirection = "clp_rv_posting_direction";
        private int? _direction;
        [Column(ColumnNameDirection)]
        public int? Direction
        {
            get { return _direction; }
            set { _direction = value; MarkColumnModified(ColumnNameDirection); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_collateral_security")]
    [PrimaryKey("clsc_collateral_security_id")]
    [ExplicitColumns]
    public class SecurityTableModel : TableModel
    {
        
        public const string ColumnNameId = "clsc_collateral_security_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameIndexId = "clsc_ix_index_id";
        private int? _indexId;
        [Column(ColumnNameIndexId)]
        public int? IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
        
        public const string ColumnNameCusip = "clsc_cusip";
        private string _cusip;
        [Column(ColumnNameCusip)]
        public string Cusip
        {
            get { return _cusip; }
            set { _cusip = value; MarkColumnModified(ColumnNameCusip); }
        }
        
        public const string ColumnNameMarketSector = "clsc_rv_market_sector";
        private int _marketSector;
        [Column(ColumnNameMarketSector)]
        public int MarketSector
        {
            get { return _marketSector; }
            set { _marketSector = value; MarkColumnModified(ColumnNameMarketSector); }
        }
        
        public const string ColumnNameIssuer = "clsc_issuer";
        private string _issuer;
        [Column(ColumnNameIssuer)]
        public string Issuer
        {
            get { return _issuer; }
            set { _issuer = value; MarkColumnModified(ColumnNameIssuer); }
        }
        
        public const string ColumnNameFactorable = "clsc_security_factorable_bit";
        private bool? _factorable;
        [Column(ColumnNameFactorable)]
        public bool? Factorable
        {
            get { return _factorable; }
            set { _factorable = value; MarkColumnModified(ColumnNameFactorable); }
        }
        
        public const string ColumnNameFactor = "clsc_latest_factor";
        private decimal? _factor;
        [Column(ColumnNameFactor)]
        public decimal? Factor
        {
            get { return _factor; }
            set { _factor = value; MarkColumnModified(ColumnNameFactor); }
        }
        
        public const string ColumnNameMaturityDate = "clsc_maturity_dt";
        private DateTime? _maturityDate;
        [Column(ColumnNameMaturityDate)]
        public DateTime? MaturityDate
        {
            get { return _maturityDate; }
            set { _maturityDate = value; MarkColumnModified(ColumnNameMaturityDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_component")]
    [PrimaryKey("cm_component_id")]
    [ExplicitColumns]
    public class ComponentTableModel : TableModel
    {
        
        public const string ColumnNameId = "cm_component_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionQuoteId = "cm_tq_tran_quote_id";
        private int _transactionQuoteId;
        [Column(ColumnNameTransactionQuoteId)]
        public int TransactionQuoteId
        {
            get { return _transactionQuoteId; }
            set { _transactionQuoteId = value; MarkColumnModified(ColumnNameTransactionQuoteId); }
        }
        
        public const string ColumnNameComponentType = "cm_dd_compnt_type";
        private string _componentType;
        [Column(ColumnNameComponentType)]
        public string ComponentType
        {
            get { return _componentType; }
            set { _componentType = value; MarkColumnModified(ColumnNameComponentType); }
        }
        
        public const string ColumnNameApplicable = "cm_dd_applicable_yn";
        private bool? _applicable;
        [Column(ColumnNameApplicable)]
        public bool? Applicable
        {
            get { return _applicable; }
            set { _applicable = value; MarkColumnModified(ColumnNameApplicable); }
        }
        
        public const string ColumnNamePaymentFrequency = "cm_dd_pmt_frequency";
        private string _paymentFrequency;
        [Column(ColumnNamePaymentFrequency)]
        public string PaymentFrequency
        {
            get { return _paymentFrequency; }
            set { _paymentFrequency = value; MarkColumnModified(ColumnNamePaymentFrequency); }
        }
        
        public const string ColumnNameInterestAccrualMethod = "cm_dd_interest_accrual_method";
        private string _interestAccrualMethod;
        [Column(ColumnNameInterestAccrualMethod)]
        public string InterestAccrualMethod
        {
            get { return _interestAccrualMethod; }
            set { _interestAccrualMethod = value; MarkColumnModified(ColumnNameInterestAccrualMethod); }
        }
        
        public const string ColumnNameNotionalCurrency = "cm_rv_currency_id";
        private int? _notionalCurrency;
        [Column(ColumnNameNotionalCurrency)]
        public int? NotionalCurrency
        {
            get { return _notionalCurrency; }
            set { _notionalCurrency = value; MarkColumnModified(ColumnNameNotionalCurrency); }
        }
        
        public const string ColumnNameEffectiveDate = "cm_effective_dt";
        private DateTime? _effectiveDate;
        [Column(ColumnNameEffectiveDate)]
        public DateTime? EffectiveDate
        {
            get { return _effectiveDate; }
            set { _effectiveDate = value; MarkColumnModified(ColumnNameEffectiveDate); }
        }
        
        public const string ColumnNameMaturityDate = "cm_maturity_dt";
        private DateTime? _maturityDate;
        [Column(ColumnNameMaturityDate)]
        public DateTime? MaturityDate
        {
            get { return _maturityDate; }
            set { _maturityDate = value; MarkColumnModified(ColumnNameMaturityDate); }
        }
        
        public const string ColumnNamePayReceive = "cm_dd_pay_receive";
        private string _payReceive;
        [Column(ColumnNamePayReceive)]
        public string PayReceive
        {
            get { return _payReceive; }
            set { _payReceive = value; MarkColumnModified(ColumnNamePayReceive); }
        }
        
        public const string ColumnNameBuySell = "cm_dd_buy_sell_id";
        private string _buySell;
        [Column(ColumnNameBuySell)]
        public string BuySell
        {
            get { return _buySell; }
            set { _buySell = value; MarkColumnModified(ColumnNameBuySell); }
        }
        
        public const string ColumnNameNotional = "cm_notional";
        private decimal? _notional;
        [Column(ColumnNameNotional)]
        public decimal? Notional
        {
            get { return _notional; }
            set { _notional = value; MarkColumnModified(ColumnNameNotional); }
        }
        
        public const string ColumnNameScheduleType = "cm_dd_bullet_amort_accrete";
        private string _scheduleType;
        [Column(ColumnNameScheduleType)]
        public string ScheduleType
        {
            get { return _scheduleType; }
            set { _scheduleType = value; MarkColumnModified(ColumnNameScheduleType); }
        }
        
        public const string ColumnNameAmortizationMethod = "cm_dd_amort_method";
        private string _amortizationMethod;
        [Column(ColumnNameAmortizationMethod)]
        public string AmortizationMethod
        {
            get { return _amortizationMethod; }
            set { _amortizationMethod = value; MarkColumnModified(ColumnNameAmortizationMethod); }
        }
        
        public const string ColumnNameRollDay = "cm_dd_roll_day";
        private int? _rollDay;
        [Column(ColumnNameRollDay)]
        public int? RollDay
        {
            get { return _rollDay; }
            set { _rollDay = value; MarkColumnModified(ColumnNameRollDay); }
        }
        
        public const string ColumnNamePaymentDay = "cm_dd_payment_day";
        private int? _paymentDay;
        [Column(ColumnNamePaymentDay)]
        public int? PaymentDay
        {
            get { return _paymentDay; }
            set { _paymentDay = value; MarkColumnModified(ColumnNamePaymentDay); }
        }
        
        public const string ColumnNamePaymentDayFloating = "cm_float_pmnt_day";
        private int? _paymentDayFloating;
        [Column(ColumnNamePaymentDayFloating)]
        public int? PaymentDayFloating
        {
            get { return _paymentDayFloating; }
            set { _paymentDayFloating = value; MarkColumnModified(ColumnNamePaymentDayFloating); }
        }
        
        public const string ColumnNameRateResetDay = "cm_rate_reset_day";
        private int? _rateResetDay;
        [Column(ColumnNameRateResetDay)]
        public int? RateResetDay
        {
            get { return _rateResetDay; }
            set { _rateResetDay = value; MarkColumnModified(ColumnNameRateResetDay); }
        }
        
        public const string ColumnNameRateFloatResetDay = "cm_rate_float_reset_day";
        private int? _rateFloatResetDay;
        [Column(ColumnNameRateFloatResetDay)]
        public int? RateFloatResetDay
        {
            get { return _rateFloatResetDay; }
            set { _rateFloatResetDay = value; MarkColumnModified(ColumnNameRateFloatResetDay); }
        }
        
        public const string ColumnNameResetSpecMethod = "cm_dd_reset_spec_method";
        private int? _resetSpecMethod;
        [Column(ColumnNameResetSpecMethod)]
        public int? ResetSpecMethod
        {
            get { return _resetSpecMethod; }
            set { _resetSpecMethod = value; MarkColumnModified(ColumnNameResetSpecMethod); }
        }
        
        public const string ColumnNamePaymentSpecMethod = "cm_dd_pmt_spec_method";
        private int? _paymentSpecMethod;
        [Column(ColumnNamePaymentSpecMethod)]
        public int? PaymentSpecMethod
        {
            get { return _paymentSpecMethod; }
            set { _paymentSpecMethod = value; MarkColumnModified(ColumnNamePaymentSpecMethod); }
        }
        
        public const string ColumnNameResetPosRelativeToRoll = "cm_reset_pos_relative_to_roll";
        private string _resetPosRelativeToRoll;
        [Column(ColumnNameResetPosRelativeToRoll)]
        public string ResetPosRelativeToRoll
        {
            get { return _resetPosRelativeToRoll; }
            set { _resetPosRelativeToRoll = value; MarkColumnModified(ColumnNameResetPosRelativeToRoll); }
        }
        
        public const string ColumnNameResetRelativeTo = "cm_reset_relative_to";
        private string _resetRelativeTo;
        [Column(ColumnNameResetRelativeTo)]
        public string ResetRelativeTo
        {
            get { return _resetRelativeTo; }
            set { _resetRelativeTo = value; MarkColumnModified(ColumnNameResetRelativeTo); }
        }
        
        public const string ColumnNamePaymentPositionRelativeToRoll = "cm_pmt_pos_relative_to_roll";
        private string _paymentPositionRelativeToRoll;
        [Column(ColumnNamePaymentPositionRelativeToRoll)]
        public string PaymentPositionRelativeToRoll
        {
            get { return _paymentPositionRelativeToRoll; }
            set { _paymentPositionRelativeToRoll = value; MarkColumnModified(ColumnNamePaymentPositionRelativeToRoll); }
        }
        
        public const string ColumnNamePaymentRelativeToRoll = "cm_pmt_relative_to";
        private string _paymentRelativeToRoll;
        [Column(ColumnNamePaymentRelativeToRoll)]
        public string PaymentRelativeToRoll
        {
            get { return _paymentRelativeToRoll; }
            set { _paymentRelativeToRoll = value; MarkColumnModified(ColumnNamePaymentRelativeToRoll); }
        }
        
        public const string ColumnNameRollBusinessDayConvention = "cm_dd_roll_b_day_conv";
        private string _rollBusinessDayConvention;
        [Column(ColumnNameRollBusinessDayConvention)]
        public string RollBusinessDayConvention
        {
            get { return _rollBusinessDayConvention; }
            set { _rollBusinessDayConvention = value; MarkColumnModified(ColumnNameRollBusinessDayConvention); }
        }
        
        public const string ColumnNamePaymentBusinessDayConvention = "cm_dd_pmt_b_day_conv";
        private string _paymentBusinessDayConvention;
        [Column(ColumnNamePaymentBusinessDayConvention)]
        public string PaymentBusinessDayConvention
        {
            get { return _paymentBusinessDayConvention; }
            set { _paymentBusinessDayConvention = value; MarkColumnModified(ColumnNamePaymentBusinessDayConvention); }
        }
        
        public const string ColumnNameResetBusinessDayConvention = "cm_dd_reset_b_day_conv";
        private string _resetBusinessDayConvention;
        [Column(ColumnNameResetBusinessDayConvention)]
        public string ResetBusinessDayConvention
        {
            get { return _resetBusinessDayConvention; }
            set { _resetBusinessDayConvention = value; MarkColumnModified(ColumnNameResetBusinessDayConvention); }
        }
        
        public const string ColumnNameLongFirstPeriod = "cm_dd_long_first_prd";
        private string _longFirstPeriod;
        [Column(ColumnNameLongFirstPeriod)]
        public string LongFirstPeriod
        {
            get { return _longFirstPeriod; }
            set { _longFirstPeriod = value; MarkColumnModified(ColumnNameLongFirstPeriod); }
        }
        
        public const string ColumnNameFirstRollDate = "cm_first_roll_dt";
        private DateTime? _firstRollDate;
        [Column(ColumnNameFirstRollDate)]
        public DateTime? FirstRollDate
        {
            get { return _firstRollDate; }
            set { _firstRollDate = value; MarkColumnModified(ColumnNameFirstRollDate); }
        }
        
        public const string ColumnNameLongLastPeriod = "cm_dd_long_last_prd";
        private string _longLastPeriod;
        [Column(ColumnNameLongLastPeriod)]
        public string LongLastPeriod
        {
            get { return _longLastPeriod; }
            set { _longLastPeriod = value; MarkColumnModified(ColumnNameLongLastPeriod); }
        }
        
        public const string ColumnNameAmortizationPaymentAmount = "cm_amort_pmnt_amt";
        private decimal? _amortizationPaymentAmount;
        [Column(ColumnNameAmortizationPaymentAmount)]
        public decimal? AmortizationPaymentAmount
        {
            get { return _amortizationPaymentAmount; }
            set { _amortizationPaymentAmount = value; MarkColumnModified(ColumnNameAmortizationPaymentAmount); }
        }
        
        public const string ColumnNameInitialNotional = "cm_initial_notional";
        private decimal? _initialNotional;
        [Column(ColumnNameInitialNotional)]
        public decimal? InitialNotional
        {
            get { return _initialNotional; }
            set { _initialNotional = value; MarkColumnModified(ColumnNameInitialNotional); }
        }
        
        public const string ColumnNameMultipleReset = "cm_dd_multiple_resets_yn";
        private bool? _multipleReset;
        [Column(ColumnNameMultipleReset)]
        public bool? MultipleReset
        {
            get { return _multipleReset; }
            set { _multipleReset = value; MarkColumnModified(ColumnNameMultipleReset); }
        }
        
        public const string ColumnNameWeightedAveragingMthod = "cm_rv_wght_ave_mthd_id";
        private int? _weightedAveragingMthod;
        [Column(ColumnNameWeightedAveragingMthod)]
        public int? WeightedAveragingMthod
        {
            get { return _weightedAveragingMthod; }
            set { _weightedAveragingMthod = value; MarkColumnModified(ColumnNameWeightedAveragingMthod); }
        }
        
        public const string ColumnNameRateResetFrequency = "cm_dd_rate_reset_freq";
        private string _rateResetFrequency;
        [Column(ColumnNameRateResetFrequency)]
        public string RateResetFrequency
        {
            get { return _rateResetFrequency; }
            set { _rateResetFrequency = value; MarkColumnModified(ColumnNameRateResetFrequency); }
        }
        
        public const string ColumnNameResetDayOfWeek = "cm_dd_reset_day_of_week";
        private string _resetDayOfWeek;
        [Column(ColumnNameResetDayOfWeek)]
        public string ResetDayOfWeek
        {
            get { return _resetDayOfWeek; }
            set { _resetDayOfWeek = value; MarkColumnModified(ColumnNameResetDayOfWeek); }
        }
        
        public const string ColumnNameResetPatternStartDate = "cm_dd_reset_pattern_start_dt";
        private DateTime? _resetPatternStartDate;
        [Column(ColumnNameResetPatternStartDate)]
        public DateTime? ResetPatternStartDate
        {
            get { return _resetPatternStartDate; }
            set { _resetPatternStartDate = value; MarkColumnModified(ColumnNameResetPatternStartDate); }
        }
        
        public const string ColumnNameRateResetCutoffDays = "cm_rate_reset_cutoff_days";
        private int? _rateResetCutoffDays;
        [Column(ColumnNameRateResetCutoffDays)]
        public int? RateResetCutoffDays
        {
            get { return _rateResetCutoffDays; }
            set { _rateResetCutoffDays = value; MarkColumnModified(ColumnNameRateResetCutoffDays); }
        }
        
        public const string ColumnNameStrike = "cm_strike";
        private decimal? _strike;
        [Column(ColumnNameStrike)]
        public decimal? Strike
        {
            get { return _strike; }
            set { _strike = value; MarkColumnModified(ColumnNameStrike); }
        }
        
        public const string ColumnNameIsConstantStrike = "cm_dd_strike_constant_yn";
        private bool? _isConstantStrike;
        [Column(ColumnNameIsConstantStrike)]
        public bool? IsConstantStrike
        {
            get { return _isConstantStrike; }
            set { _isConstantStrike = value; MarkColumnModified(ColumnNameIsConstantStrike); }
        }
        
        public const string ColumnNameSpread = "cm_spread";
        private decimal? _spread;
        [Column(ColumnNameSpread)]
        public decimal? Spread
        {
            get { return _spread; }
            set { _spread = value; MarkColumnModified(ColumnNameSpread); }
        }
        
        public const string ColumnNameIsConstantSpread = "cm_dd_spread_constant_yn";
        private bool? _isConstantSpread;
        [Column(ColumnNameIsConstantSpread)]
        public bool? IsConstantSpread
        {
            get { return _isConstantSpread; }
            set { _isConstantSpread = value; MarkColumnModified(ColumnNameIsConstantSpread); }
        }
        
        public const string ColumnNameIndexId = "cm_ix_index_id";
        private int? _indexId;
        [Column(ColumnNameIndexId)]
        public int? IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
        
        public const string ColumnNameRoundingConvention = "cm_rv_rnd_conv_id";
        private int? _roundingConvention;
        [Column(ColumnNameRoundingConvention)]
        public int? RoundingConvention
        {
            get { return _roundingConvention; }
            set { _roundingConvention = value; MarkColumnModified(ColumnNameRoundingConvention); }
        }
        
        public const string ColumnNameIsCompounding = "cm_dd_compound_yn";
        private string _isCompounding;
        [Column(ColumnNameIsCompounding)]
        public string IsCompounding
        {
            get { return _isCompounding; }
            set { _isCompounding = value; MarkColumnModified(ColumnNameIsCompounding); }
        }
        
        public const string ColumnNameStartDate = "cm_start_dt";
        private DateTime? _startDate;
        [Column(ColumnNameStartDate)]
        public DateTime? StartDate
        {
            get { return _startDate; }
            set { _startDate = value; MarkColumnModified(ColumnNameStartDate); }
        }
        
        public const string ColumnNameEndDate = "cm_end_dt";
        private DateTime? _endDate;
        [Column(ColumnNameEndDate)]
        public DateTime? EndDate
        {
            get { return _endDate; }
            set { _endDate = value; MarkColumnModified(ColumnNameEndDate); }
        }
        
        public const string ColumnNameCostAmortizationStartDate = "cm_cost_amortization_start_dt";
        private DateTime? _costAmortizationStartDate;
        [Column(ColumnNameCostAmortizationStartDate)]
        public DateTime? CostAmortizationStartDate
        {
            get { return _costAmortizationStartDate; }
            set { _costAmortizationStartDate = value; MarkColumnModified(ColumnNameCostAmortizationStartDate); }
        }
        
        public const string ColumnNameMaturityDateBusinessDayConvention = "cm_dd_maturity_b_day_conv";
        private string _maturityDateBusinessDayConvention;
        [Column(ColumnNameMaturityDateBusinessDayConvention)]
        public string MaturityDateBusinessDayConvention
        {
            get { return _maturityDateBusinessDayConvention; }
            set { _maturityDateBusinessDayConvention = value; MarkColumnModified(ColumnNameMaturityDateBusinessDayConvention); }
        }
        
        public const string ColumnNameResetDayReferenceDayAdjusted = "cm_reset_day_reference_day_adjusted";
        private bool? _resetDayReferenceDayAdjusted;
        [Column(ColumnNameResetDayReferenceDayAdjusted)]
        public bool? ResetDayReferenceDayAdjusted
        {
            get { return _resetDayReferenceDayAdjusted; }
            set { _resetDayReferenceDayAdjusted = value; MarkColumnModified(ColumnNameResetDayReferenceDayAdjusted); }
        }
        
        public const string ColumnNamePaymentDayReferenceDayAdjusted = "cm_payment_day_reference_day_adjusted";
        private bool? _paymentDayReferenceDayAdjusted;
        [Column(ColumnNamePaymentDayReferenceDayAdjusted)]
        public bool? PaymentDayReferenceDayAdjusted
        {
            get { return _paymentDayReferenceDayAdjusted; }
            set { _paymentDayReferenceDayAdjusted = value; MarkColumnModified(ColumnNamePaymentDayReferenceDayAdjusted); }
        }
        
        public const string ColumnNameDiscountCurveIndexId = "cm_discount_curve_ix_index_id";
        private int? _discountCurveIndexId;
        [Column(ColumnNameDiscountCurveIndexId)]
        public int? DiscountCurveIndexId
        {
            get { return _discountCurveIndexId; }
            set { _discountCurveIndexId = value; MarkColumnModified(ColumnNameDiscountCurveIndexId); }
        }
        
        public const string ColumnNameSecondaryRoundingConvention = "cm_rv_secondary_rnd_conv";
        private int? _secondaryRoundingConvention;
        [Column(ColumnNameSecondaryRoundingConvention)]
        public int? SecondaryRoundingConvention
        {
            get { return _secondaryRoundingConvention; }
            set { _secondaryRoundingConvention = value; MarkColumnModified(ColumnNameSecondaryRoundingConvention); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_component_commodity")]
    [PrimaryKey("ccm_component_commodity_id")]
    [ExplicitColumns]
    public class CommodityMetaTableModel : TableModel
    {
        
        public const string ColumnNameId = "ccm_component_commodity_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameComponentId = "ccm_cm_component_id";
        private int _componentId;
        [Column(ColumnNameComponentId)]
        public int ComponentId
        {
            get { return _componentId; }
            set { _componentId = value; MarkColumnModified(ColumnNameComponentId); }
        }
        
        public const string ColumnNameSettlementDays = "ccm_settlement_days";
        private int? _settlementDays;
        [Column(ColumnNameSettlementDays)]
        public int? SettlementDays
        {
            get { return _settlementDays; }
            set { _settlementDays = value; MarkColumnModified(ColumnNameSettlementDays); }
        }
        
        public const string ColumnNameVolumeAmount = "ccm_volume_amt";
        private decimal? _volumeAmount;
        [Column(ColumnNameVolumeAmount)]
        public decimal? VolumeAmount
        {
            get { return _volumeAmount; }
            set { _volumeAmount = value; MarkColumnModified(ColumnNameVolumeAmount); }
        }
        
        public const string ColumnNameVolumeUnit = "ccm_rv_volume_unit";
        private int? _volumeUnit;
        [Column(ColumnNameVolumeUnit)]
        public int? VolumeUnit
        {
            get { return _volumeUnit; }
            set { _volumeUnit = value; MarkColumnModified(ColumnNameVolumeUnit); }
        }
        
        public const string ColumnNameCommodityType = "ccm_rv_commodity_type";
        private int? _commodityType;
        [Column(ColumnNameCommodityType)]
        public int? CommodityType
        {
            get { return _commodityType; }
            set { _commodityType = value; MarkColumnModified(ColumnNameCommodityType); }
        }
        
        public const string ColumnNameAveragingPeriod = "ccm_rv_averaging_period";
        private int? _averagingPeriod;
        [Column(ColumnNameAveragingPeriod)]
        public int? AveragingPeriod
        {
            get { return _averagingPeriod; }
            set { _averagingPeriod = value; MarkColumnModified(ColumnNameAveragingPeriod); }
        }
        
        public const string ColumnNameCommodityResetType = "ccm_rv_commodity_reset_type";
        private int? _commodityResetType;
        [Column(ColumnNameCommodityResetType)]
        public int? CommodityResetType
        {
            get { return _commodityResetType; }
            set { _commodityResetType = value; MarkColumnModified(ColumnNameCommodityResetType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_component_credit_spread")]
    [PrimaryKey("ccs_component_credit_spread_id")]
    [ExplicitColumns]
    public class ComponentCreditSpreadTableModel : TableModel
    {
        
        public const string ColumnNameId = "ccs_component_credit_spread_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameComponentId = "ccs_cm_component_id";
        private int? _componentId;
        [Column(ColumnNameComponentId)]
        public int? ComponentId
        {
            get { return _componentId; }
            set { _componentId = value; MarkColumnModified(ColumnNameComponentId); }
        }
        
        public const string ColumnNameCreditSpread = "ccs_credit_spread";
        private decimal? _creditSpread;
        [Column(ColumnNameCreditSpread)]
        public decimal? CreditSpread
        {
            get { return _creditSpread; }
            set { _creditSpread = value; MarkColumnModified(ColumnNameCreditSpread); }
        }
        
        public const string ColumnNameEffectiveDate = "ccs_effective_dt";
        private DateTime? _effectiveDate;
        [Column(ColumnNameEffectiveDate)]
        public DateTime? EffectiveDate
        {
            get { return _effectiveDate; }
            set { _effectiveDate = value; MarkColumnModified(ColumnNameEffectiveDate); }
        }
        
        public const string ColumnNameCreateDate = "ccs_create_dt";
        private DateTime? _createDate;
        [Column(ColumnNameCreateDate)]
        public DateTime? CreateDate
        {
            get { return _createDate; }
            set { _createDate = value; MarkColumnModified(ColumnNameCreateDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_contact_rel_default")]
    [PrimaryKey("crd_contact_rel_default_id")]
    [ExplicitColumns]
    public class ContactRelationshipTableModel : TableModel
    {
        
        public const string ColumnNameId = "crd_contact_rel_default_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "crd_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameRelationshipType = "crd_rv_relationship_type";
        private int _relationshipType;
        [Column(ColumnNameRelationshipType)]
        public int RelationshipType
        {
            get { return _relationshipType; }
            set { _relationshipType = value; MarkColumnModified(ColumnNameRelationshipType); }
        }
        
        public const string ColumnNameContactId = "crd_rc_contact_id";
        private int? _contactId;
        [Column(ColumnNameContactId)]
        public int? ContactId
        {
            get { return _contactId; }
            set { _contactId = value; MarkColumnModified(ColumnNameContactId); }
        }
        
        public const string ColumnNameRoleType = "crd_rv_role_type";
        private int? _roleType;
        [Column(ColumnNameRoleType)]
        public int? RoleType
        {
            get { return _roleType; }
            set { _roleType = value; MarkColumnModified(ColumnNameRoleType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_control_report")]
    [PrimaryKey("crpt_control_report_id")]
    [ExplicitColumns]
    public class ControlReportTableModel : TableModel
    {
        
        public const string ColumnNameId = "crpt_control_report_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameType = "crpt_rv_control_report_detail";
        private int _type;
        [Column(ColumnNameType)]
        public int Type
        {
            get { return _type; }
            set { _type = value; MarkColumnModified(ColumnNameType); }
        }
        
        public const string ColumnNameTimestamp = "crpt_run_utc";
        private DateTime _timestamp;
        [Column(ColumnNameTimestamp)]
        public DateTime Timestamp
        {
            get { return _timestamp; }
            set { _timestamp = value; MarkColumnModified(ColumnNameTimestamp); }
        }
        
        public const string ColumnNameErrorType = "crpt_rvs_control_report_error";
        private int _errorType;
        [Column(ColumnNameErrorType)]
        public int ErrorType
        {
            get { return _errorType; }
            set { _errorType = value; MarkColumnModified(ColumnNameErrorType); }
        }
        
        public const string ColumnNameErrorDetail = "crpt_error_detail";
        private string _errorDetail;
        [Column(ColumnNameErrorDetail)]
        public string ErrorDetail
        {
            get { return _errorDetail; }
            set { _errorDetail = value; MarkColumnModified(ColumnNameErrorDetail); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_control_report_approval")]
    [PrimaryKey("crpa_control_report_approval_id")]
    [ExplicitColumns]
    public class ControlReportApprovalTableModel : TableModel
    {
        
        public const string ColumnNameId = "crpa_control_report_approval_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameControlReportId = "crpa_crpt_control_report_id";
        private int _controlReportId;
        [Column(ColumnNameControlReportId)]
        public int ControlReportId
        {
            get { return _controlReportId; }
            set { _controlReportId = value; MarkColumnModified(ColumnNameControlReportId); }
        }
        
        public const string ColumnNameUtcTimestamp = "crpa_resolved_utc";
        private DateTime _utcTimestamp;
        [Column(ColumnNameUtcTimestamp)]
        public DateTime UtcTimestamp
        {
            get { return _utcTimestamp; }
            set { _utcTimestamp = value; MarkColumnModified(ColumnNameUtcTimestamp); }
        }
        
        public const string ColumnNameResolvedByContactId = "crpa_resolved_rc_contact_id";
        private int _resolvedByContactId;
        [Column(ColumnNameResolvedByContactId)]
        public int ResolvedByContactId
        {
            get { return _resolvedByContactId; }
            set { _resolvedByContactId = value; MarkColumnModified(ColumnNameResolvedByContactId); }
        }
        
        public const string ColumnNameDetail = "crpa_approval_detail";
        private string _detail;
        [Column(ColumnNameDetail)]
        public string Detail
        {
            get { return _detail; }
            set { _detail = value; MarkColumnModified(ColumnNameDetail); }
        }
        
        public const string ColumnNameType = "crpa_rv_approval_type";
        private int? _type;
        [Column(ColumnNameType)]
        public int? Type
        {
            get { return _type; }
            set { _type = value; MarkColumnModified(ColumnNameType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_control_report_approval_signoff")]
    [PrimaryKey("cras_control_report_approval_signoff_id")]
    [ExplicitColumns]
    public class ControlReportApprovalSignoffTableModel : TableModel
    {
        
        public const string ColumnNameId = "cras_control_report_approval_signoff_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameSignoffContactId = "cras_signoff_nm_id";
        private int _signoffContactId;
        [Column(ColumnNameSignoffContactId)]
        public int SignoffContactId
        {
            get { return _signoffContactId; }
            set { _signoffContactId = value; MarkColumnModified(ColumnNameSignoffContactId); }
        }
        
        public const string ColumnNameUtcTimestamp = "cras_signoff_utc";
        private DateTime _utcTimestamp;
        [Column(ColumnNameUtcTimestamp)]
        public DateTime UtcTimestamp
        {
            get { return _utcTimestamp; }
            set { _utcTimestamp = value; MarkColumnModified(ColumnNameUtcTimestamp); }
        }
        
        public const string ColumnNameNotes = "cras_notes";
        private string _notes;
        [Column(ColumnNameNotes)]
        public string Notes
        {
            get { return _notes; }
            set { _notes = value; MarkColumnModified(ColumnNameNotes); }
        }
        
        public const string ColumnNameControlReportApprovalId = "cras_crpa_control_report_approval_id";
        private int _controlReportApprovalId;
        [Column(ColumnNameControlReportApprovalId)]
        public int ControlReportApprovalId
        {
            get { return _controlReportApprovalId; }
            set { _controlReportApprovalId = value; MarkColumnModified(ColumnNameControlReportApprovalId); }
        }
        
        public const string ColumnNameType = "cras_rv_signoff_type";
        private int? _type;
        [Column(ColumnNameType)]
        public int? Type
        {
            get { return _type; }
            set { _type = value; MarkColumnModified(ColumnNameType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_control_report_index_detail")]
    [PrimaryKey("crid_control_report_index_detail_id")]
    [ExplicitColumns]
    public class IndexControlReportDetailTableModel : TableModel
    {
        
        public const string ColumnNameId = "crid_control_report_index_detail_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameControlReportId = "crid_crpt_control_report_id";
        private int _controlReportId;
        [Column(ColumnNameControlReportId)]
        public int ControlReportId
        {
            get { return _controlReportId; }
            set { _controlReportId = value; MarkColumnModified(ColumnNameControlReportId); }
        }
        
        public const string ColumnNameIndexId = "crid_ix_index_id";
        private int _indexId;
        [Column(ColumnNameIndexId)]
        public int IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_control_report_rate_detail")]
    [PrimaryKey("crrd_control_report_rate_detail_id")]
    [ExplicitColumns]
    public class RateControlReportDetailTableModel : TableModel
    {
        
        public const string ColumnNameId = "crrd_control_report_rate_detail_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameControlReportId = "crrd_crpt_control_report_id";
        private int _controlReportId;
        [Column(ColumnNameControlReportId)]
        public int ControlReportId
        {
            get { return _controlReportId; }
            set { _controlReportId = value; MarkColumnModified(ColumnNameControlReportId); }
        }
        
        public const string ColumnNameRateId = "crrd_rb_rate_id";
        private int _rateId;
        [Column(ColumnNameRateId)]
        public int RateId
        {
            get { return _rateId; }
            set { _rateId = value; MarkColumnModified(ColumnNameRateId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_control_report_valuation_detail")]
    [PrimaryKey("crpv_control_report_valuation_detail_id")]
    [ExplicitColumns]
    public class ValuationControlReportDetailTableModel : TableModel
    {
        
        public const string ColumnNameId = "crpv_control_report_valuation_detail_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameControlReportId = "crpv_crpt_control_report_id";
        private int _controlReportId;
        [Column(ColumnNameControlReportId)]
        public int ControlReportId
        {
            get { return _controlReportId; }
            set { _controlReportId = value; MarkColumnModified(ColumnNameControlReportId); }
        }
        
        public const string ColumnNameDailyTransactionHistoryId = "crpv_dh_daily_trans_hist_id";
        private int? _dailyTransactionHistoryId;
        [Column(ColumnNameDailyTransactionHistoryId)]
        public int? DailyTransactionHistoryId
        {
            get { return _dailyTransactionHistoryId; }
            set { _dailyTransactionHistoryId = value; MarkColumnModified(ColumnNameDailyTransactionHistoryId); }
        }
        
        public const string ColumnNameTransactionQuoteId = "crpv_tq_tran_quote_id";
        private int? _transactionQuoteId;
        [Column(ColumnNameTransactionQuoteId)]
        public int? TransactionQuoteId
        {
            get { return _transactionQuoteId; }
            set { _transactionQuoteId = value; MarkColumnModified(ColumnNameTransactionQuoteId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_credit_point_entity_vendor_map")]
    [PrimaryKey("cpm_credit_point_mapping_id")]
    [ExplicitColumns]
    public class CreditPointEntityVendorMapTableModel : TableModel
    {
        
        public const string ColumnNameId = "cpm_credit_point_mapping_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "cpm_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameVendor = "cpm_rv_vendor";
        private int _vendor;
        [Column(ColumnNameVendor)]
        public int Vendor
        {
            get { return _vendor; }
            set { _vendor = value; MarkColumnModified(ColumnNameVendor); }
        }
        
        public const string ColumnNameVendorCode = "cpm_vendor_code";
        private string _vendorCode;
        [Column(ColumnNameVendorCode)]
        public string VendorCode
        {
            get { return _vendorCode; }
            set { _vendorCode = value; MarkColumnModified(ColumnNameVendorCode); }
        }
        
        public const string ColumnNameValidUpToButNotIncluding = "cpm_valid_to_dt";
        private DateTime? _validUpToButNotIncluding;
        [Column(ColumnNameValidUpToButNotIncluding)]
        public DateTime? ValidUpToButNotIncluding
        {
            get { return _validUpToButNotIncluding; }
            set { _validUpToButNotIncluding = value; MarkColumnModified(ColumnNameValidUpToButNotIncluding); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_curve")]
    [PrimaryKey("crv_curve_id")]
    [ExplicitColumns]
    public class DiscountCurveTableModel : TableModel
    {
        
        public const string ColumnNameId = "crv_curve_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameIndexId = "crv_ix_index_id";
        private int _indexId;
        [Column(ColumnNameIndexId)]
        public int IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
        
        public const string ColumnNameName = "crv_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_daily_component_hist")]
    [PrimaryKey("ch_component_hist_id")]
    [ExplicitColumns]
    public class ComponentValuationTableModel : TableModel
    {
        
        public const string ColumnNameId = "ch_component_hist_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameComponentId = "ch_cm_component_id";
        private int _componentId;
        [Column(ColumnNameComponentId)]
        public int ComponentId
        {
            get { return _componentId; }
            set { _componentId = value; MarkColumnModified(ColumnNameComponentId); }
        }
        
        public const string ColumnNameTypeId = "ch_dd_type_id";
        private string _typeId;
        [Column(ColumnNameTypeId)]
        public string TypeId
        {
            get { return _typeId; }
            set { _typeId = value; MarkColumnModified(ColumnNameTypeId); }
        }
        
        public const string ColumnNameKeyRate = "ch_key_rate";
        private decimal? _keyRate;
        [Column(ColumnNameKeyRate)]
        public decimal? KeyRate
        {
            get { return _keyRate; }
            set { _keyRate = value; MarkColumnModified(ColumnNameKeyRate); }
        }
        
        public const string ColumnNameKeySwap = "ch_key_swap";
        private decimal? _keySwap;
        [Column(ColumnNameKeySwap)]
        public decimal? KeySwap
        {
            get { return _keySwap; }
            set { _keySwap = value; MarkColumnModified(ColumnNameKeySwap); }
        }
        
        public const string ColumnNameKeyFxRate = "ch_key_fx_rate";
        private decimal? _keyFxRate;
        [Column(ColumnNameKeyFxRate)]
        public decimal? KeyFxRate
        {
            get { return _keyFxRate; }
            set { _keyFxRate = value; MarkColumnModified(ColumnNameKeyFxRate); }
        }
        
        public const string ColumnNameKeySwpSprd = "ch_key_swp_sprd";
        private decimal? _keySwpSprd;
        [Column(ColumnNameKeySwpSprd)]
        public decimal? KeySwpSprd
        {
            get { return _keySwpSprd; }
            set { _keySwpSprd = value; MarkColumnModified(ColumnNameKeySwpSprd); }
        }
        
        public const string ColumnNameImplFwrdPrem = "ch_impl_fwrd_prem";
        private decimal? _implFwrdPrem;
        [Column(ColumnNameImplFwrdPrem)]
        public decimal? ImplFwrdPrem
        {
            get { return _implFwrdPrem; }
            set { _implFwrdPrem = value; MarkColumnModified(ColumnNameImplFwrdPrem); }
        }
        
        public const string ColumnNameDv01DvTick = "ch_dv01_dvtick";
        private decimal? _dv01DvTick;
        [Column(ColumnNameDv01DvTick)]
        public decimal? Dv01DvTick
        {
            get { return _dv01DvTick; }
            set { _dv01DvTick = value; MarkColumnModified(ColumnNameDv01DvTick); }
        }
        
        public const string ColumnNameImplRepo = "ch_impl_repo";
        private decimal? _implRepo;
        [Column(ColumnNameImplRepo)]
        public decimal? ImplRepo
        {
            get { return _implRepo; }
            set { _implRepo = value; MarkColumnModified(ColumnNameImplRepo); }
        }
        
        public const string ColumnNameModifyDuration = "ch_modify_duration";
        private decimal? _modifyDuration;
        [Column(ColumnNameModifyDuration)]
        public decimal? ModifyDuration
        {
            get { return _modifyDuration; }
            set { _modifyDuration = value; MarkColumnModified(ColumnNameModifyDuration); }
        }
        
        public const string ColumnNameImpliedVol = "ch_implied_vol";
        private decimal? _impliedVol;
        [Column(ColumnNameImpliedVol)]
        public decimal? ImpliedVol
        {
            get { return _impliedVol; }
            set { _impliedVol = value; MarkColumnModified(ColumnNameImpliedVol); }
        }
        
        public const string ColumnNameValuationTotal = "ch_valuation_total";
        private decimal? _valuationTotal;
        [Column(ColumnNameValuationTotal)]
        public decimal? ValuationTotal
        {
            get { return _valuationTotal; }
            set { _valuationTotal = value; MarkColumnModified(ColumnNameValuationTotal); }
        }
        
        public const string ColumnNameValOpenAmt = "ch_val_open_amt";
        private decimal? _valOpenAmt;
        [Column(ColumnNameValOpenAmt)]
        public decimal? ValOpenAmt
        {
            get { return _valOpenAmt; }
            set { _valOpenAmt = value; MarkColumnModified(ColumnNameValOpenAmt); }
        }
        
        public const string ColumnNameValOpenRate = "ch_val_open_rate";
        private decimal? _valOpenRate;
        [Column(ColumnNameValOpenRate)]
        public decimal? ValOpenRate
        {
            get { return _valOpenRate; }
            set { _valOpenRate = value; MarkColumnModified(ColumnNameValOpenRate); }
        }
        
        public const string ColumnNameQuoteAmt = "ch_quote_amt";
        private decimal? _quoteAmt;
        [Column(ColumnNameQuoteAmt)]
        public decimal? QuoteAmt
        {
            get { return _quoteAmt; }
            set { _quoteAmt = value; MarkColumnModified(ColumnNameQuoteAmt); }
        }
        
        public const string ColumnNameQuoteRate = "ch_quote_rate";
        private decimal? _quoteRate;
        [Column(ColumnNameQuoteRate)]
        public decimal? QuoteRate
        {
            get { return _quoteRate; }
            set { _quoteRate = value; MarkColumnModified(ColumnNameQuoteRate); }
        }
        
        public const string ColumnNameValuationIntrinsic = "ch_valuation_intrinsic";
        private decimal? _valuationIntrinsic;
        [Column(ColumnNameValuationIntrinsic)]
        public decimal? ValuationIntrinsic
        {
            get { return _valuationIntrinsic; }
            set { _valuationIntrinsic = value; MarkColumnModified(ColumnNameValuationIntrinsic); }
        }
        
        public const string ColumnNameValTimeVal = "ch_val_time_val";
        private decimal? _valTimeVal;
        [Column(ColumnNameValTimeVal)]
        public decimal? ValTimeVal
        {
            get { return _valTimeVal; }
            set { _valTimeVal = value; MarkColumnModified(ColumnNameValTimeVal); }
        }
        
        public const string ColumnNameValTimestamp = "ch_val_time_stamp";
        private DateTime? _valTimestamp;
        [Column(ColumnNameValTimestamp)]
        public DateTime? ValTimestamp
        {
            get { return _valTimestamp; }
            set { _valTimestamp = value; MarkColumnModified(ColumnNameValTimestamp); }
        }
        
        public const string ColumnNameSpot = "ch_spot";
        private decimal? _spot;
        [Column(ColumnNameSpot)]
        public decimal? Spot
        {
            get { return _spot; }
            set { _spot = value; MarkColumnModified(ColumnNameSpot); }
        }
        
        public const string ColumnNameDelta = "ch_delta";
        private decimal? _delta;
        [Column(ColumnNameDelta)]
        public decimal? Delta
        {
            get { return _delta; }
            set { _delta = value; MarkColumnModified(ColumnNameDelta); }
        }
        
        public const string ColumnNameGamma = "ch_gamma";
        private decimal? _gamma;
        [Column(ColumnNameGamma)]
        public decimal? Gamma
        {
            get { return _gamma; }
            set { _gamma = value; MarkColumnModified(ColumnNameGamma); }
        }
        
        public const string ColumnNameTheta = "ch_theta";
        private decimal? _theta;
        [Column(ColumnNameTheta)]
        public decimal? Theta
        {
            get { return _theta; }
            set { _theta = value; MarkColumnModified(ColumnNameTheta); }
        }
        
        public const string ColumnNameVega = "ch_vega";
        private decimal? _vega;
        [Column(ColumnNameVega)]
        public decimal? Vega
        {
            get { return _vega; }
            set { _vega = value; MarkColumnModified(ColumnNameVega); }
        }
        
        public const string ColumnNameQuoteTime = "ch_quote_time";
        private DateTime? _quoteTime;
        [Column(ColumnNameQuoteTime)]
        public DateTime? QuoteTime
        {
            get { return _quoteTime; }
            set { _quoteTime = value; MarkColumnModified(ColumnNameQuoteTime); }
        }
        
        public const string ColumnNameModifyDt = "ch_modify_dt";
        private DateTime? _modifyDt;
        [Column(ColumnNameModifyDt)]
        public DateTime? ModifyDt
        {
            get { return _modifyDt; }
            set { _modifyDt = value; MarkColumnModified(ColumnNameModifyDt); }
        }
        
        public const string ColumnNameModifyNmId = "ch_modify_nm_id";
        private int? _modifyNmId;
        [Column(ColumnNameModifyNmId)]
        public int? ModifyNmId
        {
            get { return _modifyNmId; }
            set { _modifyNmId = value; MarkColumnModified(ColumnNameModifyNmId); }
        }
        
        public const string ColumnNameCreateDt = "ch_create_dt";
        private DateTime? _createDt;
        [Column(ColumnNameCreateDt)]
        public DateTime? CreateDt
        {
            get { return _createDt; }
            set { _createDt = value; MarkColumnModified(ColumnNameCreateDt); }
        }
        
        public const string ColumnNameCreateNmId = "ch_create_nm_id";
        private int? _createNmId;
        [Column(ColumnNameCreateNmId)]
        public int? CreateNmId
        {
            get { return _createNmId; }
            set { _createNmId = value; MarkColumnModified(ColumnNameCreateNmId); }
        }
        
        public const string ColumnNameScenarioId = "ch_sn_scenario_id";
        private int? _scenarioId;
        [Column(ColumnNameScenarioId)]
        public int? ScenarioId
        {
            get { return _scenarioId; }
            set { _scenarioId = value; MarkColumnModified(ColumnNameScenarioId); }
        }
        
        public const string ColumnNameValueSource = "ch_dd_value_source";
        private string _valueSource;
        [Column(ColumnNameValueSource)]
        public string ValueSource
        {
            get { return _valueSource; }
            set { _valueSource = value; MarkColumnModified(ColumnNameValueSource); }
        }
        
        public const string ColumnNameValueCurr = "ch_value_curr";
        private string _valueCurr;
        [Column(ColumnNameValueCurr)]
        public string ValueCurr
        {
            get { return _valueCurr; }
            set { _valueCurr = value; MarkColumnModified(ColumnNameValueCurr); }
        }
        
        public const string ColumnNameSpreadOverBenchmark = "ch_spread_over_benchmark";
        private decimal? _spreadOverBenchmark;
        [Column(ColumnNameSpreadOverBenchmark)]
        public decimal? SpreadOverBenchmark
        {
            get { return _spreadOverBenchmark; }
            set { _spreadOverBenchmark = value; MarkColumnModified(ColumnNameSpreadOverBenchmark); }
        }
        
        public const string ColumnNameAccruedInterest = "ch_accrued_interest";
        private decimal? _accruedInterest;
        [Column(ColumnNameAccruedInterest)]
        public decimal? AccruedInterest
        {
            get { return _accruedInterest; }
            set { _accruedInterest = value; MarkColumnModified(ColumnNameAccruedInterest); }
        }
        
        public const string ColumnNameYield = "ch_yield";
        private decimal? _yield;
        [Column(ColumnNameYield)]
        public decimal? Yield
        {
            get { return _yield; }
            set { _yield = value; MarkColumnModified(ColumnNameYield); }
        }
        
        public const string ColumnNameExplanation = "ch_explanation";
        private string _explanation;
        [Column(ColumnNameExplanation)]
        public string Explanation
        {
            get { return _explanation; }
            set { _explanation = value; MarkColumnModified(ColumnNameExplanation); }
        }
        
        public const string ColumnNameApplication = "ch_rv_application";
        private int? _application;
        [Column(ColumnNameApplication)]
        public int? Application
        {
            get { return _application; }
            set { _application = value; MarkColumnModified(ColumnNameApplication); }
        }
        
        public const string ColumnNameMidMarketTotalVal = "ch_mid_market_total_val";
        private decimal? _midMarketTotalVal;
        [Column(ColumnNameMidMarketTotalVal)]
        public decimal? MidMarketTotalVal
        {
            get { return _midMarketTotalVal; }
            set { _midMarketTotalVal = value; MarkColumnModified(ColumnNameMidMarketTotalVal); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_daily_trans_hist")]
    [PrimaryKey("dh_daily_trans_hist_id")]
    [ExplicitColumns]
    public class ProductValuationTableModel : TableModel
    {
        
        public const string ColumnNameId = "dh_daily_trans_hist_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionQuoteId = "dh_tq_tran_quote_id";
        private int _transactionQuoteId;
        [Column(ColumnNameTransactionQuoteId)]
        public int TransactionQuoteId
        {
            get { return _transactionQuoteId; }
            set { _transactionQuoteId = value; MarkColumnModified(ColumnNameTransactionQuoteId); }
        }
        
        public const string ColumnNameProductValuationType = "dh_dd_type_id";
        private string _productValuationType;
        [Column(ColumnNameProductValuationType)]
        public string ProductValuationType
        {
            get { return _productValuationType; }
            set { _productValuationType = value; MarkColumnModified(ColumnNameProductValuationType); }
        }
        
        public const string ColumnNameKeyRate = "dh_key_rate";
        private decimal? _keyRate;
        [Column(ColumnNameKeyRate)]
        public decimal? KeyRate
        {
            get { return _keyRate; }
            set { _keyRate = value; MarkColumnModified(ColumnNameKeyRate); }
        }
        
        public const string ColumnNameKeySwap = "dh_key_swap";
        private decimal? _keySwap;
        [Column(ColumnNameKeySwap)]
        public decimal? KeySwap
        {
            get { return _keySwap; }
            set { _keySwap = value; MarkColumnModified(ColumnNameKeySwap); }
        }
        
        public const string ColumnNameKeyFxRate = "dh_key_fx_rate";
        private decimal? _keyFxRate;
        [Column(ColumnNameKeyFxRate)]
        public decimal? KeyFxRate
        {
            get { return _keyFxRate; }
            set { _keyFxRate = value; MarkColumnModified(ColumnNameKeyFxRate); }
        }
        
        public const string ColumnNameKeySwapSpread = "dh_key_swp_sprd";
        private decimal? _keySwapSpread;
        [Column(ColumnNameKeySwapSpread)]
        public decimal? KeySwapSpread
        {
            get { return _keySwapSpread; }
            set { _keySwapSpread = value; MarkColumnModified(ColumnNameKeySwapSpread); }
        }
        
        public const string ColumnNameImpliedForwardPremium = "dh_impl_fwrd_prem";
        private decimal? _impliedForwardPremium;
        [Column(ColumnNameImpliedForwardPremium)]
        public decimal? ImpliedForwardPremium
        {
            get { return _impliedForwardPremium; }
            set { _impliedForwardPremium = value; MarkColumnModified(ColumnNameImpliedForwardPremium); }
        }
        
        public const string ColumnNameDV01DVTick = "dh_dv01_dvtick";
        private decimal? _dV01DVTick;
        [Column(ColumnNameDV01DVTick)]
        public decimal? DV01DVTick
        {
            get { return _dV01DVTick; }
            set { _dV01DVTick = value; MarkColumnModified(ColumnNameDV01DVTick); }
        }
        
        public const string ColumnNameImpliedReposition = "dh_impl_repo";
        private decimal? _impliedReposition;
        [Column(ColumnNameImpliedReposition)]
        public decimal? ImpliedReposition
        {
            get { return _impliedReposition; }
            set { _impliedReposition = value; MarkColumnModified(ColumnNameImpliedReposition); }
        }
        
        public const string ColumnNameModifyDuration = "dh_modify_duration";
        private decimal? _modifyDuration;
        [Column(ColumnNameModifyDuration)]
        public decimal? ModifyDuration
        {
            get { return _modifyDuration; }
            set { _modifyDuration = value; MarkColumnModified(ColumnNameModifyDuration); }
        }
        
        public const string ColumnNameImpliedVolatility = "dh_implied_vol";
        private decimal? _impliedVolatility;
        [Column(ColumnNameImpliedVolatility)]
        public decimal? ImpliedVolatility
        {
            get { return _impliedVolatility; }
            set { _impliedVolatility = value; MarkColumnModified(ColumnNameImpliedVolatility); }
        }
        
        public const string ColumnNameValuationTotal = "dh_valuation_total";
        private decimal? _valuationTotal;
        [Column(ColumnNameValuationTotal)]
        public decimal? ValuationTotal
        {
            get { return _valuationTotal; }
            set { _valuationTotal = value; MarkColumnModified(ColumnNameValuationTotal); }
        }
        
        public const string ColumnNameValuationOpenAmount = "dh_val_open_amt";
        private decimal? _valuationOpenAmount;
        [Column(ColumnNameValuationOpenAmount)]
        public decimal? ValuationOpenAmount
        {
            get { return _valuationOpenAmount; }
            set { _valuationOpenAmount = value; MarkColumnModified(ColumnNameValuationOpenAmount); }
        }
        
        public const string ColumnNameValuationOpenRate = "dh_val_open_rate";
        private decimal? _valuationOpenRate;
        [Column(ColumnNameValuationOpenRate)]
        public decimal? ValuationOpenRate
        {
            get { return _valuationOpenRate; }
            set { _valuationOpenRate = value; MarkColumnModified(ColumnNameValuationOpenRate); }
        }
        
        public const string ColumnNameQuoteAmount = "dh_quote_amt";
        private decimal? _quoteAmount;
        [Column(ColumnNameQuoteAmount)]
        public decimal? QuoteAmount
        {
            get { return _quoteAmount; }
            set { _quoteAmount = value; MarkColumnModified(ColumnNameQuoteAmount); }
        }
        
        public const string ColumnNameQuoteRate = "dh_quote_rate";
        private decimal? _quoteRate;
        [Column(ColumnNameQuoteRate)]
        public decimal? QuoteRate
        {
            get { return _quoteRate; }
            set { _quoteRate = value; MarkColumnModified(ColumnNameQuoteRate); }
        }
        
        public const string ColumnNameValuationIntrinsic = "dh_valuation_intrinsic";
        private decimal? _valuationIntrinsic;
        [Column(ColumnNameValuationIntrinsic)]
        public decimal? ValuationIntrinsic
        {
            get { return _valuationIntrinsic; }
            set { _valuationIntrinsic = value; MarkColumnModified(ColumnNameValuationIntrinsic); }
        }
        
        public const string ColumnNameValuationTimeValue = "dh_val_time_val";
        private decimal? _valuationTimeValue;
        [Column(ColumnNameValuationTimeValue)]
        public decimal? ValuationTimeValue
        {
            get { return _valuationTimeValue; }
            set { _valuationTimeValue = value; MarkColumnModified(ColumnNameValuationTimeValue); }
        }
        
        public const string ColumnNameValuationTimeStamp = "dh_val_time_stamp";
        private DateTime? _valuationTimeStamp;
        [Column(ColumnNameValuationTimeStamp)]
        public DateTime? ValuationTimeStamp
        {
            get { return _valuationTimeStamp; }
            set { _valuationTimeStamp = value; MarkColumnModified(ColumnNameValuationTimeStamp); }
        }
        
        public const string ColumnNameSpot = "dh_spot";
        private decimal? _spot;
        [Column(ColumnNameSpot)]
        public decimal? Spot
        {
            get { return _spot; }
            set { _spot = value; MarkColumnModified(ColumnNameSpot); }
        }
        
        public const string ColumnNameDelta = "dh_delta";
        private decimal? _delta;
        [Column(ColumnNameDelta)]
        public decimal? Delta
        {
            get { return _delta; }
            set { _delta = value; MarkColumnModified(ColumnNameDelta); }
        }
        
        public const string ColumnNameGamma = "dh_gamma";
        private decimal? _gamma;
        [Column(ColumnNameGamma)]
        public decimal? Gamma
        {
            get { return _gamma; }
            set { _gamma = value; MarkColumnModified(ColumnNameGamma); }
        }
        
        public const string ColumnNameTheta = "dh_theta";
        private decimal? _theta;
        [Column(ColumnNameTheta)]
        public decimal? Theta
        {
            get { return _theta; }
            set { _theta = value; MarkColumnModified(ColumnNameTheta); }
        }
        
        public const string ColumnNameVega = "dh_vega";
        private decimal? _vega;
        [Column(ColumnNameVega)]
        public decimal? Vega
        {
            get { return _vega; }
            set { _vega = value; MarkColumnModified(ColumnNameVega); }
        }
        
        public const string ColumnNameQuoteTime = "dh_quote_time";
        private DateTime? _quoteTime;
        [Column(ColumnNameQuoteTime)]
        public DateTime? QuoteTime
        {
            get { return _quoteTime; }
            set { _quoteTime = value; MarkColumnModified(ColumnNameQuoteTime); }
        }
        
        public const string ColumnNameModifyDate = "dh_modify_dt";
        private DateTime? _modifyDate;
        [Column(ColumnNameModifyDate)]
        public DateTime? ModifyDate
        {
            get { return _modifyDate; }
            set { _modifyDate = value; MarkColumnModified(ColumnNameModifyDate); }
        }
        
        public const string ColumnNameModifyByID = "dh_modify_nm_id";
        private int? _modifyByID;
        [Column(ColumnNameModifyByID)]
        public int? ModifyByID
        {
            get { return _modifyByID; }
            set { _modifyByID = value; MarkColumnModified(ColumnNameModifyByID); }
        }
        
        public const string ColumnNameScenarioId = "dh_sn_scenario_id";
        private int? _scenarioId;
        [Column(ColumnNameScenarioId)]
        public int? ScenarioId
        {
            get { return _scenarioId; }
            set { _scenarioId = value; MarkColumnModified(ColumnNameScenarioId); }
        }
        
        public const string ColumnNameValueSource = "dh_dd_value_source";
        private string _valueSource;
        [Column(ColumnNameValueSource)]
        public string ValueSource
        {
            get { return _valueSource; }
            set { _valueSource = value; MarkColumnModified(ColumnNameValueSource); }
        }
        
        public const string ColumnNameValuationCurrency = "dh_value_curr";
        private string _valuationCurrency;
        [Column(ColumnNameValuationCurrency)]
        public string ValuationCurrency
        {
            get { return _valuationCurrency; }
            set { _valuationCurrency = value; MarkColumnModified(ColumnNameValuationCurrency); }
        }
        
        public const string ColumnNameSpreadOverBenchmark = "dh_spread_over_benchmark";
        private decimal? _spreadOverBenchmark;
        [Column(ColumnNameSpreadOverBenchmark)]
        public decimal? SpreadOverBenchmark
        {
            get { return _spreadOverBenchmark; }
            set { _spreadOverBenchmark = value; MarkColumnModified(ColumnNameSpreadOverBenchmark); }
        }
        
        public const string ColumnNameAccruedInterest = "dh_accrued_interest";
        private decimal? _accruedInterest;
        [Column(ColumnNameAccruedInterest)]
        public decimal? AccruedInterest
        {
            get { return _accruedInterest; }
            set { _accruedInterest = value; MarkColumnModified(ColumnNameAccruedInterest); }
        }
        
        public const string ColumnNameYield = "dh_yield";
        private decimal? _yield;
        [Column(ColumnNameYield)]
        public decimal? Yield
        {
            get { return _yield; }
            set { _yield = value; MarkColumnModified(ColumnNameYield); }
        }
        
        public const string ColumnNameExplanation = "dh_explanation";
        private string _explanation;
        [Column(ColumnNameExplanation)]
        public string Explanation
        {
            get { return _explanation; }
            set { _explanation = value; MarkColumnModified(ColumnNameExplanation); }
        }
        
        public const string ColumnNamePV01 = "dh_pv01";
        private decimal? _pV01;
        [Column(ColumnNamePV01)]
        public decimal? PV01
        {
            get { return _pV01; }
            set { _pV01 = value; MarkColumnModified(ColumnNamePV01); }
        }
        
        public const string ColumnNameValuationTimeStampUTC = "dh_valuation_utc";
        private DateTime? _valuationTimeStampUTC;
        [Column(ColumnNameValuationTimeStampUTC)]
        public DateTime? ValuationTimeStampUTC
        {
            get { return _valuationTimeStampUTC; }
            set { _valuationTimeStampUTC = value; MarkColumnModified(ColumnNameValuationTimeStampUTC); }
        }
        
        public const string ColumnNameEndOfDay = "dh_end_of_day_bit";
        private bool? _endOfDay;
        [Column(ColumnNameEndOfDay)]
        public bool? EndOfDay
        {
            get { return _endOfDay; }
            set { _endOfDay = value; MarkColumnModified(ColumnNameEndOfDay); }
        }
        
        public const string ColumnNameInceptionValue = "dh_inception_bit";
        private bool? _inceptionValue;
        [Column(ColumnNameInceptionValue)]
        public bool? InceptionValue
        {
            get { return _inceptionValue; }
            set { _inceptionValue = value; MarkColumnModified(ColumnNameInceptionValue); }
        }
        
        public const string ColumnNameValueTargetDate = "dh_value_target_dt";
        private DateTime? _valueTargetDate;
        [Column(ColumnNameValueTargetDate)]
        public DateTime? ValueTargetDate
        {
            get { return _valueTargetDate; }
            set { _valueTargetDate = value; MarkColumnModified(ColumnNameValueTargetDate); }
        }
        
        public const string ColumnNameControlReportRun = "dh_control_report_run_bit";
        private bool? _controlReportRun;
        [Column(ColumnNameControlReportRun)]
        public bool? ControlReportRun
        {
            get { return _controlReportRun; }
            set { _controlReportRun = value; MarkColumnModified(ColumnNameControlReportRun); }
        }
        
        public const string ColumnNameDiscountIndexId = "dh_discount_ix_index_id";
        private int? _discountIndexId;
        [Column(ColumnNameDiscountIndexId)]
        public int? DiscountIndexId
        {
            get { return _discountIndexId; }
            set { _discountIndexId = value; MarkColumnModified(ColumnNameDiscountIndexId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_deal_process")]
    [PrimaryKey("dp_process_task_id")]
    [ExplicitColumns]
    public class DealProcessTableModel : TableModel
    {
        
        public const string ColumnNameId = "dp_process_task_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "dp_tr_transaction_id";
        private int? _transactionId;
        [Column(ColumnNameTransactionId)]
        public int? TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameAction = "dp_rv_action";
        private int _action;
        [Column(ColumnNameAction)]
        public int Action
        {
            get { return _action; }
            set { _action = value; MarkColumnModified(ColumnNameAction); }
        }
        
        public const string ColumnNameContactId = "dp_rc_contact_id";
        private int? _contactId;
        [Column(ColumnNameContactId)]
        public int? ContactId
        {
            get { return _contactId; }
            set { _contactId = value; MarkColumnModified(ColumnNameContactId); }
        }
        
        public const string ColumnNameIsComplete = "dp_complete_bit";
        private bool? _isComplete;
        [Column(ColumnNameIsComplete)]
        public bool? IsComplete
        {
            get { return _isComplete; }
            set { _isComplete = value; MarkColumnModified(ColumnNameIsComplete); }
        }
        
        public const string ColumnNameCompletionDateUtc = "dp_completion_dt";
        private DateTime? _completionDateUtc;
        [Column(ColumnNameCompletionDateUtc)]
        public DateTime? CompletionDateUtc
        {
            get { return _completionDateUtc; }
            set { _completionDateUtc = value; MarkColumnModified(ColumnNameCompletionDateUtc); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_debt_covenant")]
    [PrimaryKey("dc_debt_covenant_id")]
    [ExplicitColumns]
    public class DebtCovenantTableModel : TableModel
    {
        
        public const string ColumnNameId = "dc_debt_covenant_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameDebtCovenantDefinitionId = "dc_dcd_debt_covenant_definition_id";
        private int? _debtCovenantDefinitionId;
        [Column(ColumnNameDebtCovenantDefinitionId)]
        public int? DebtCovenantDefinitionId
        {
            get { return _debtCovenantDefinitionId; }
            set { _debtCovenantDefinitionId = value; MarkColumnModified(ColumnNameDebtCovenantDefinitionId); }
        }
        
        public const string ColumnNameNoteId = "dc_nt_note_id";
        private int? _noteId;
        [Column(ColumnNameNoteId)]
        public int? NoteId
        {
            get { return _noteId; }
            set { _noteId = value; MarkColumnModified(ColumnNameNoteId); }
        }
        
        public const string ColumnNameEffectiveDate = "dc_effective_dt";
        private DateTime _effectiveDate;
        [Column(ColumnNameEffectiveDate)]
        public DateTime EffectiveDate
        {
            get { return _effectiveDate; }
            set { _effectiveDate = value; MarkColumnModified(ColumnNameEffectiveDate); }
        }
        
        public const string ColumnNameCurrency = "dc_rv_currency";
        private int? _currency;
        [Column(ColumnNameCurrency)]
        public int? Currency
        {
            get { return _currency; }
            set { _currency = value; MarkColumnModified(ColumnNameCurrency); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_debt_covenant_definition")]
    [PrimaryKey("dcd_debt_covenant_definition_id")]
    [ExplicitColumns]
    public class DebtCovenantDefinitionTableModel : TableModel
    {
        
        public const string ColumnNameId = "dcd_debt_covenant_definition_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "dcd_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameName = "dcd_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
        
        public const string ColumnNameFormatType = "dcd_rv_type";
        private int _formatType;
        [Column(ColumnNameFormatType)]
        public int FormatType
        {
            get { return _formatType; }
            set { _formatType = value; MarkColumnModified(ColumnNameFormatType); }
        }
        
        public const string ColumnNameDescription = "dcd_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameEffectiveDateNeeded = "dcd_effective_dt_needed_bit";
        private bool _effectiveDateNeeded;
        [Column(ColumnNameEffectiveDateNeeded)]
        public bool EffectiveDateNeeded
        {
            get { return _effectiveDateNeeded; }
            set { _effectiveDateNeeded = value; MarkColumnModified(ColumnNameEffectiveDateNeeded); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_debt_covenant_link")]
    [PrimaryKey("dcl_debt_covenant_link_id")]
    [ExplicitColumns]
    public class DebtCovenantLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "dcl_debt_covenant_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameQuoteDebtId = "dcl_qd_quote_debt_id";
        private int _quoteDebtId;
        [Column(ColumnNameQuoteDebtId)]
        public int QuoteDebtId
        {
            get { return _quoteDebtId; }
            set { _quoteDebtId = value; MarkColumnModified(ColumnNameQuoteDebtId); }
        }
        
        public const string ColumnNameDebtCovenantId = "dcl_dc_debt_covenant_id";
        private int _debtCovenantId;
        [Column(ColumnNameDebtCovenantId)]
        public int DebtCovenantId
        {
            get { return _debtCovenantId; }
            set { _debtCovenantId = value; MarkColumnModified(ColumnNameDebtCovenantId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_debt_descriptors")]
    [PrimaryKey("dds_debt_descriptors_id")]
    [ExplicitColumns]
    public class DebtDescriptorTableModel : TableModel
    {
        
        public const string ColumnNameId = "dds_debt_descriptors_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameQuoteDebtId = "dds_qd_quote_debt_id";
        private int _quoteDebtId;
        [Column(ColumnNameQuoteDebtId)]
        public int QuoteDebtId
        {
            get { return _quoteDebtId; }
            set { _quoteDebtId = value; MarkColumnModified(ColumnNameQuoteDebtId); }
        }
        
        public const string ColumnNameDebtType = "dds_rv_debt_type";
        private int? _debtType;
        [Column(ColumnNameDebtType)]
        public int? DebtType
        {
            get { return _debtType; }
            set { _debtType = value; MarkColumnModified(ColumnNameDebtType); }
        }
        
        public const string ColumnNameDebtDescription = "dds_debt_description";
        private string _debtDescription;
        [Column(ColumnNameDebtDescription)]
        public string DebtDescription
        {
            get { return _debtDescription; }
            set { _debtDescription = value; MarkColumnModified(ColumnNameDebtDescription); }
        }
        
        public const string ColumnNameDebtPurpose = "dds_rv_debt_purpose";
        private int? _debtPurpose;
        [Column(ColumnNameDebtPurpose)]
        public int? DebtPurpose
        {
            get { return _debtPurpose; }
            set { _debtPurpose = value; MarkColumnModified(ColumnNameDebtPurpose); }
        }
        
        public const string ColumnNameDebtSeniority = "dds_rv_debt_seniority";
        private int? _debtSeniority;
        [Column(ColumnNameDebtSeniority)]
        public int? DebtSeniority
        {
            get { return _debtSeniority; }
            set { _debtSeniority = value; MarkColumnModified(ColumnNameDebtSeniority); }
        }
        
        public const string ColumnNameDebtGroup = "dds_rv_debt_group";
        private int? _debtGroup;
        [Column(ColumnNameDebtGroup)]
        public int? DebtGroup
        {
            get { return _debtGroup; }
            set { _debtGroup = value; MarkColumnModified(ColumnNameDebtGroup); }
        }
        
        public const string ColumnNameEditDrawsAndPayDowns = "dds_editable_bit";
        private bool _editDrawsAndPayDowns;
        [Column(ColumnNameEditDrawsAndPayDowns)]
        public bool EditDrawsAndPayDowns
        {
            get { return _editDrawsAndPayDowns; }
            set { _editDrawsAndPayDowns = value; MarkColumnModified(ColumnNameEditDrawsAndPayDowns); }
        }
        
        public const string ColumnNameDebtStabilization = "dds_rv_debt_stabilization";
        private int? _debtStabilization;
        [Column(ColumnNameDebtStabilization)]
        public int? DebtStabilization
        {
            get { return _debtStabilization; }
            set { _debtStabilization = value; MarkColumnModified(ColumnNameDebtStabilization); }
        }
        
        public const string ColumnNameLeinPosition = "dds_lien_number";
        private int? _leinPosition;
        [Column(ColumnNameLeinPosition)]
        public int? LeinPosition
        {
            get { return _leinPosition; }
            set { _leinPosition = value; MarkColumnModified(ColumnNameLeinPosition); }
        }
        
        public const string ColumnNameLenderType = "dds_rv_debt_lender_type";
        private int? _lenderType;
        [Column(ColumnNameLenderType)]
        public int? LenderType
        {
            get { return _lenderType; }
            set { _lenderType = value; MarkColumnModified(ColumnNameLenderType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_debt_ownership")]
    [PrimaryKey("dop_debt_ownership")]
    [ExplicitColumns]
    public class DebtOwnershipTableModel : TableModel
    {
        
        public const string ColumnNameId = "dop_debt_ownership";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameDebtDescriptorsId = "dop_dds_debt_descriptors_id";
        private int _debtDescriptorsId;
        [Column(ColumnNameDebtDescriptorsId)]
        public int DebtDescriptorsId
        {
            get { return _debtDescriptorsId; }
            set { _debtDescriptorsId = value; MarkColumnModified(ColumnNameDebtDescriptorsId); }
        }
        
        public const string ColumnNameOwnershipPercent = "dop_ownership_prcnt";
        private decimal? _ownershipPercent;
        [Column(ColumnNameOwnershipPercent)]
        public decimal? OwnershipPercent
        {
            get { return _ownershipPercent; }
            set { _ownershipPercent = value; MarkColumnModified(ColumnNameOwnershipPercent); }
        }
        
        public const string ColumnNameOwnershipStructure = "dop_rv_ownership_structure";
        private int? _ownershipStructure;
        [Column(ColumnNameOwnershipStructure)]
        public int? OwnershipStructure
        {
            get { return _ownershipStructure; }
            set { _ownershipStructure = value; MarkColumnModified(ColumnNameOwnershipStructure); }
        }
        
        public const string ColumnNameStartDate = "dop_start_dt";
        private DateTime? _startDate;
        [Column(ColumnNameStartDate)]
        public DateTime? StartDate
        {
            get { return _startDate; }
            set { _startDate = value; MarkColumnModified(ColumnNameStartDate); }
        }
        
        public const string ColumnNameEndDate = "dop_end_dt";
        private DateTime? _endDate;
        [Column(ColumnNameEndDate)]
        public DateTime? EndDate
        {
            get { return _endDate; }
            set { _endDate = value; MarkColumnModified(ColumnNameEndDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_debt_terms")]
    [PrimaryKey("lts_debt_terms_id")]
    [ExplicitColumns]
    public class DebtTermsTableModel : TableModel
    {
        
        public const string ColumnNameId = "lts_debt_terms_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameQuoteDebtId = "lts_qd_quote_debt_id";
        private int _quoteDebtId;
        [Column(ColumnNameQuoteDebtId)]
        public int QuoteDebtId
        {
            get { return _quoteDebtId; }
            set { _quoteDebtId = value; MarkColumnModified(ColumnNameQuoteDebtId); }
        }
        
        public const string ColumnNameCommitmentFeePercent = "lts_commitment_fee_prcnt";
        private decimal? _commitmentFeePercent;
        [Column(ColumnNameCommitmentFeePercent)]
        public decimal? CommitmentFeePercent
        {
            get { return _commitmentFeePercent; }
            set { _commitmentFeePercent = value; MarkColumnModified(ColumnNameCommitmentFeePercent); }
        }
        
        public const string ColumnNamePooledLoan = "lts_pooled_loan";
        private bool? _pooledLoan;
        [Column(ColumnNamePooledLoan)]
        public bool? PooledLoan
        {
            get { return _pooledLoan; }
            set { _pooledLoan = value; MarkColumnModified(ColumnNamePooledLoan); }
        }
        
        public const string ColumnNameMultiplePricingOptions = "lts_mult_pricing_options";
        private bool? _multiplePricingOptions;
        [Column(ColumnNameMultiplePricingOptions)]
        public bool? MultiplePricingOptions
        {
            get { return _multiplePricingOptions; }
            set { _multiplePricingOptions = value; MarkColumnModified(ColumnNameMultiplePricingOptions); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_eff_test_det_hist")]
    [PrimaryKey("eh_eff_test_det_hist_id")]
    [ExplicitColumns]
    public class EffectivenessTestHistoryTableModel : TableModel
    {
        
        public const string ColumnNameId = "eh_eff_test_det_hist_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEffectivenessTestId = "eh_et_test_id";
        private int _effectivenessTestId;
        [Column(ColumnNameEffectivenessTestId)]
        public int EffectivenessTestId
        {
            get { return _effectivenessTestId; }
            set { _effectivenessTestId = value; MarkColumnModified(ColumnNameEffectivenessTestId); }
        }
        
        public const string ColumnNameScheduleDetailId = "eh_fl_ongoing_calc_id";
        private int? _scheduleDetailId;
        [Column(ColumnNameScheduleDetailId)]
        public int? ScheduleDetailId
        {
            get { return _scheduleDetailId; }
            set { _scheduleDetailId = value; MarkColumnModified(ColumnNameScheduleDetailId); }
        }
        
        public const string ColumnNameTrancheId = "eh_lt_tranche_id";
        private int? _trancheId;
        [Column(ColumnNameTrancheId)]
        public int? TrancheId
        {
            get { return _trancheId; }
            set { _trancheId = value; MarkColumnModified(ColumnNameTrancheId); }
        }
        
        public const string ColumnNameTransactionQuoteId = "eh_my_tq_tran_quote_id";
        private int? _transactionQuoteId;
        [Column(ColumnNameTransactionQuoteId)]
        public int? TransactionQuoteId
        {
            get { return _transactionQuoteId; }
            set { _transactionQuoteId = value; MarkColumnModified(ColumnNameTransactionQuoteId); }
        }
        
        public const string ColumnNameHedgeTransactionQuoteId = "eh_hedge_tq_tran_quote_id";
        private int? _hedgeTransactionQuoteId;
        [Column(ColumnNameHedgeTransactionQuoteId)]
        public int? HedgeTransactionQuoteId
        {
            get { return _hedgeTransactionQuoteId; }
            set { _hedgeTransactionQuoteId = value; MarkColumnModified(ColumnNameHedgeTransactionQuoteId); }
        }
        
        public const string ColumnNameLoanTransactionQuoteId = "eh_loan_tq_tran_quote_id";
        private int? _loanTransactionQuoteId;
        [Column(ColumnNameLoanTransactionQuoteId)]
        public int? LoanTransactionQuoteId
        {
            get { return _loanTransactionQuoteId; }
            set { _loanTransactionQuoteId = value; MarkColumnModified(ColumnNameLoanTransactionQuoteId); }
        }
        
        public const string ColumnNameHedgedNotional = "eh_hedged_notional";
        private decimal? _hedgedNotional;
        [Column(ColumnNameHedgedNotional)]
        public decimal? HedgedNotional
        {
            get { return _hedgedNotional; }
            set { _hedgedNotional = value; MarkColumnModified(ColumnNameHedgedNotional); }
        }
        
        public const string ColumnNameStartDate = "eh_start_date";
        private DateTime? _startDate;
        [Column(ColumnNameStartDate)]
        public DateTime? StartDate
        {
            get { return _startDate; }
            set { _startDate = value; MarkColumnModified(ColumnNameStartDate); }
        }
        
        public const string ColumnNameEndDate = "eh_end_date";
        private DateTime? _endDate;
        [Column(ColumnNameEndDate)]
        public DateTime? EndDate
        {
            get { return _endDate; }
            set { _endDate = value; MarkColumnModified(ColumnNameEndDate); }
        }
        
        public const string ColumnNameHedgedRateSetting = "eh_hedged_rate_setting";
        private decimal? _hedgedRateSetting;
        [Column(ColumnNameHedgedRateSetting)]
        public decimal? HedgedRateSetting
        {
            get { return _hedgedRateSetting; }
            set { _hedgedRateSetting = value; MarkColumnModified(ColumnNameHedgedRateSetting); }
        }
        
        public const string ColumnNameStrike1 = "eh_strike1";
        private decimal? _strike1;
        [Column(ColumnNameStrike1)]
        public decimal? Strike1
        {
            get { return _strike1; }
            set { _strike1 = value; MarkColumnModified(ColumnNameStrike1); }
        }
        
        public const string ColumnNameStrike2 = "eh_strike2";
        private decimal? _strike2;
        [Column(ColumnNameStrike2)]
        public decimal? Strike2
        {
            get { return _strike2; }
            set { _strike2 = value; MarkColumnModified(ColumnNameStrike2); }
        }
        
        public const string ColumnNamePaymentAmount = "eh_payment_amt";
        private decimal? _paymentAmount;
        [Column(ColumnNamePaymentAmount)]
        public decimal? PaymentAmount
        {
            get { return _paymentAmount; }
            set { _paymentAmount = value; MarkColumnModified(ColumnNamePaymentAmount); }
        }
        
        public const string ColumnNameRateFixingDate = "eh_rate_fixing_dt";
        private DateTime? _rateFixingDate;
        [Column(ColumnNameRateFixingDate)]
        public DateTime? RateFixingDate
        {
            get { return _rateFixingDate; }
            set { _rateFixingDate = value; MarkColumnModified(ColumnNameRateFixingDate); }
        }
        
        public const string ColumnNameHedgedRateSetting2 = "eh_hedged_rate_setting2";
        private decimal? _hedgedRateSetting2;
        [Column(ColumnNameHedgedRateSetting2)]
        public decimal? HedgedRateSetting2
        {
            get { return _hedgedRateSetting2; }
            set { _hedgedRateSetting2 = value; MarkColumnModified(ColumnNameHedgedRateSetting2); }
        }
        
        public const string ColumnNamePaymentAmount2 = "eh_payment_amt2";
        private decimal? _paymentAmount2;
        [Column(ColumnNamePaymentAmount2)]
        public decimal? PaymentAmount2
        {
            get { return _paymentAmount2; }
            set { _paymentAmount2 = value; MarkColumnModified(ColumnNamePaymentAmount2); }
        }
        
        public const string ColumnNameCreateUtc = "eh_create_utc";
        private DateTime? _createUtc;
        [Column(ColumnNameCreateUtc)]
        public DateTime? CreateUtc
        {
            get { return _createUtc; }
            set { _createUtc = value; MarkColumnModified(ColumnNameCreateUtc); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_eff_test_detail_regression")]
    [PrimaryKey("edr_eff_test_detail_regression_id")]
    [ExplicitColumns]
    public class EffectivenessTestDetailRegressionTableModel : TableModel
    {
        
        public const string ColumnNameId = "edr_eff_test_detail_regression_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEffectivenessTestId = "edr_et_test_id";
        private int _effectivenessTestId;
        [Column(ColumnNameEffectivenessTestId)]
        public int EffectivenessTestId
        {
            get { return _effectivenessTestId; }
            set { _effectivenessTestId = value; MarkColumnModified(ColumnNameEffectivenessTestId); }
        }
        
        public const string ColumnNameHedgeChange = "edr_hedge_change";
        private decimal? _hedgeChange;
        [Column(ColumnNameHedgeChange)]
        public decimal? HedgeChange
        {
            get { return _hedgeChange; }
            set { _hedgeChange = value; MarkColumnModified(ColumnNameHedgeChange); }
        }
        
        public const string ColumnNameHedgedItemChange = "edr_hedged_item_change";
        private decimal? _hedgedItemChange;
        [Column(ColumnNameHedgedItemChange)]
        public decimal? HedgedItemChange
        {
            get { return _hedgedItemChange; }
            set { _hedgedItemChange = value; MarkColumnModified(ColumnNameHedgedItemChange); }
        }
        
        public const string ColumnNameHedgeStartCaseValue = "edr_hedge_start_case_value";
        private decimal? _hedgeStartCaseValue;
        [Column(ColumnNameHedgeStartCaseValue)]
        public decimal? HedgeStartCaseValue
        {
            get { return _hedgeStartCaseValue; }
            set { _hedgeStartCaseValue = value; MarkColumnModified(ColumnNameHedgeStartCaseValue); }
        }
        
        public const string ColumnNameHedgeEndCaseValue = "edr_hedge_end_case_value";
        private decimal? _hedgeEndCaseValue;
        [Column(ColumnNameHedgeEndCaseValue)]
        public decimal? HedgeEndCaseValue
        {
            get { return _hedgeEndCaseValue; }
            set { _hedgeEndCaseValue = value; MarkColumnModified(ColumnNameHedgeEndCaseValue); }
        }
        
        public const string ColumnNameHedgedItemStartCaseValue = "edr_hedged_item_start_case_value";
        private decimal? _hedgedItemStartCaseValue;
        [Column(ColumnNameHedgedItemStartCaseValue)]
        public decimal? HedgedItemStartCaseValue
        {
            get { return _hedgedItemStartCaseValue; }
            set { _hedgedItemStartCaseValue = value; MarkColumnModified(ColumnNameHedgedItemStartCaseValue); }
        }
        
        public const string ColumnNameHedgedItemEndCaseValue = "edr_hedged_item_end_case_value";
        private decimal? _hedgedItemEndCaseValue;
        [Column(ColumnNameHedgedItemEndCaseValue)]
        public decimal? HedgedItemEndCaseValue
        {
            get { return _hedgedItemEndCaseValue; }
            set { _hedgedItemEndCaseValue = value; MarkColumnModified(ColumnNameHedgedItemEndCaseValue); }
        }
        
        public const string ColumnNameStartCaseValuationAsOfDate = "edr_start_case_valuation_as_of_dt";
        private DateTime? _startCaseValuationAsOfDate;
        [Column(ColumnNameStartCaseValuationAsOfDate)]
        public DateTime? StartCaseValuationAsOfDate
        {
            get { return _startCaseValuationAsOfDate; }
            set { _startCaseValuationAsOfDate = value; MarkColumnModified(ColumnNameStartCaseValuationAsOfDate); }
        }
        
        public const string ColumnNameStartCaseRatesAsOfDate = "edr_start_case_rates_as_of_dt";
        private DateTime? _startCaseRatesAsOfDate;
        [Column(ColumnNameStartCaseRatesAsOfDate)]
        public DateTime? StartCaseRatesAsOfDate
        {
            get { return _startCaseRatesAsOfDate; }
            set { _startCaseRatesAsOfDate = value; MarkColumnModified(ColumnNameStartCaseRatesAsOfDate); }
        }
        
        public const string ColumnNameStartCaseRatesShiftedToDate = "edr_start_case_rates_shifted_to_dt";
        private DateTime? _startCaseRatesShiftedToDate;
        [Column(ColumnNameStartCaseRatesShiftedToDate)]
        public DateTime? StartCaseRatesShiftedToDate
        {
            get { return _startCaseRatesShiftedToDate; }
            set { _startCaseRatesShiftedToDate = value; MarkColumnModified(ColumnNameStartCaseRatesShiftedToDate); }
        }
        
        public const string ColumnNameEndCaseValuationAsOfDate = "edr_end_case_valuation_as_of_dt";
        private DateTime? _endCaseValuationAsOfDate;
        [Column(ColumnNameEndCaseValuationAsOfDate)]
        public DateTime? EndCaseValuationAsOfDate
        {
            get { return _endCaseValuationAsOfDate; }
            set { _endCaseValuationAsOfDate = value; MarkColumnModified(ColumnNameEndCaseValuationAsOfDate); }
        }
        
        public const string ColumnNameEndCaseRatesAsOfDate = "edr_end_case_rates_as_of_dt";
        private DateTime? _endCaseRatesAsOfDate;
        [Column(ColumnNameEndCaseRatesAsOfDate)]
        public DateTime? EndCaseRatesAsOfDate
        {
            get { return _endCaseRatesAsOfDate; }
            set { _endCaseRatesAsOfDate = value; MarkColumnModified(ColumnNameEndCaseRatesAsOfDate); }
        }
        
        public const string ColumnNameEndCaseRatesShiftedToDate = "edr_end_case_rates_shifted_to_dt";
        private DateTime? _endCaseRatesShiftedToDate;
        [Column(ColumnNameEndCaseRatesShiftedToDate)]
        public DateTime? EndCaseRatesShiftedToDate
        {
            get { return _endCaseRatesShiftedToDate; }
            set { _endCaseRatesShiftedToDate = value; MarkColumnModified(ColumnNameEndCaseRatesShiftedToDate); }
        }
        
        public const string ColumnNameSpotOverride = "edr_spot_overrride_bit";
        private bool _spotOverride;
        [Column(ColumnNameSpotOverride)]
        public bool SpotOverride
        {
            get { return _spotOverride; }
            set { _spotOverride = value; MarkColumnModified(ColumnNameSpotOverride); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_eff_tests")]
    [PrimaryKey("et_test_id")]
    [ExplicitColumns]
    public class EffectivenessTestTableModel : TableModel
    {
        
        public const string ColumnNameId = "et_test_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameAccountingTreatmentId = "et_ac_accounting_id";
        private int _accountingTreatmentId;
        [Column(ColumnNameAccountingTreatmentId)]
        public int AccountingTreatmentId
        {
            get { return _accountingTreatmentId; }
            set { _accountingTreatmentId = value; MarkColumnModified(ColumnNameAccountingTreatmentId); }
        }
        
        public const string ColumnNameScenarioId = "et_sn_scenario_id";
        private int? _scenarioId;
        [Column(ColumnNameScenarioId)]
        public int? ScenarioId
        {
            get { return _scenarioId; }
            set { _scenarioId = value; MarkColumnModified(ColumnNameScenarioId); }
        }
        
        public const string ColumnNameTestDate = "et_test_date";
        private DateTime? _testDate;
        [Column(ColumnNameTestDate)]
        public DateTime? TestDate
        {
            get { return _testDate; }
            set { _testDate = value; MarkColumnModified(ColumnNameTestDate); }
        }
        
        public const string ColumnNameTestType = "et_dd_type";
        private string _testType;
        [Column(ColumnNameTestType)]
        public string TestType
        {
            get { return _testType; }
            set { _testType = value; MarkColumnModified(ColumnNameTestType); }
        }
        
        public const string ColumnNameWebDisplay = "et_dd_web_display_yn";
        private string _webDisplay;
        [Column(ColumnNameWebDisplay)]
        public string WebDisplay
        {
            get { return _webDisplay; }
            set { _webDisplay = value; MarkColumnModified(ColumnNameWebDisplay); }
        }
        
        public const string ColumnNameEffectivenessScore = "et_effectiveness_score";
        private decimal? _effectivenessScore;
        [Column(ColumnNameEffectivenessScore)]
        public decimal? EffectivenessScore
        {
            get { return _effectivenessScore; }
            set { _effectivenessScore = value; MarkColumnModified(ColumnNameEffectivenessScore); }
        }
        
        public const string ColumnNameComparisonAmountHedge = "et_comparison_amt_hedge";
        private decimal? _comparisonAmountHedge;
        [Column(ColumnNameComparisonAmountHedge)]
        public decimal? ComparisonAmountHedge
        {
            get { return _comparisonAmountHedge; }
            set { _comparisonAmountHedge = value; MarkColumnModified(ColumnNameComparisonAmountHedge); }
        }
        
        public const string ColumnNameComparisonAmountHedgeItem = "et_comparison_amt_hgditm";
        private decimal? _comparisonAmountHedgeItem;
        [Column(ColumnNameComparisonAmountHedgeItem)]
        public decimal? ComparisonAmountHedgeItem
        {
            get { return _comparisonAmountHedgeItem; }
            set { _comparisonAmountHedgeItem = value; MarkColumnModified(ColumnNameComparisonAmountHedgeItem); }
        }
        
        public const string ColumnNameCurrencyRefId = "et_rv_currency_id";
        private int? _currencyRefId;
        [Column(ColumnNameCurrencyRefId)]
        public int? CurrencyRefId
        {
            get { return _currencyRefId; }
            set { _currencyRefId = value; MarkColumnModified(ColumnNameCurrencyRefId); }
        }
        
        public const string ColumnNameTestNote = "et_note";
        private string _testNote;
        [Column(ColumnNameTestNote)]
        public string TestNote
        {
            get { return _testNote; }
            set { _testNote = value; MarkColumnModified(ColumnNameTestNote); }
        }
        
        public const string ColumnNameTestMethod = "et_test_method";
        private string _testMethod;
        [Column(ColumnNameTestMethod)]
        public string TestMethod
        {
            get { return _testMethod; }
            set { _testMethod = value; MarkColumnModified(ColumnNameTestMethod); }
        }
        
        public const string ColumnNameTestScope = "et_dd_eff_test_scope";
        private string _testScope;
        [Column(ColumnNameTestScope)]
        public string TestScope
        {
            get { return _testScope; }
            set { _testScope = value; MarkColumnModified(ColumnNameTestScope); }
        }
        
        public const string ColumnNameTestStartDate = "et_test_start_dt";
        private DateTime? _testStartDate;
        [Column(ColumnNameTestStartDate)]
        public DateTime? TestStartDate
        {
            get { return _testStartDate; }
            set { _testStartDate = value; MarkColumnModified(ColumnNameTestStartDate); }
        }
        
        public const string ColumnNameTestEndDate = "et_test_end_dt";
        private DateTime? _testEndDate;
        [Column(ColumnNameTestEndDate)]
        public DateTime? TestEndDate
        {
            get { return _testEndDate; }
            set { _testEndDate = value; MarkColumnModified(ColumnNameTestEndDate); }
        }
        
        public const string ColumnNameIneffectivenessReason = "et_ineffect_reason";
        private string _ineffectivenessReason;
        [Column(ColumnNameIneffectivenessReason)]
        public string IneffectivenessReason
        {
            get { return _ineffectivenessReason; }
            set { _ineffectivenessReason = value; MarkColumnModified(ColumnNameIneffectivenessReason); }
        }
        
        public const string ColumnNameCreatedById = "et_create_nm_id";
        [ResultColumn(ColumnNameCreatedById)]
        public int? CreatedById { get; set; }
        
        public const string ColumnNameCreatedDate = "et_create_dt";
        [ResultColumn(ColumnNameCreatedDate)]
        public DateTime? CreatedDate { get; set; }
        
        public const string ColumnNameTestPassed = "et_passed_eff_testing_bit";
        private bool? _testPassed;
        [Column(ColumnNameTestPassed)]
        public bool? TestPassed
        {
            get { return _testPassed; }
            set { _testPassed = value; MarkColumnModified(ColumnNameTestPassed); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_eff_tests_regression_stats")]
    [PrimaryKey("etr_eff_tests_regression_stats_id")]
    [ExplicitColumns]
    public class EffectivenessTestRegressionStatsTableModel : TableModel
    {
        
        public const string ColumnNameId = "etr_eff_tests_regression_stats_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEffectivenessTestId = "etr_et_test_id";
        private int _effectivenessTestId;
        [Column(ColumnNameEffectivenessTestId)]
        public int EffectivenessTestId
        {
            get { return _effectivenessTestId; }
            set { _effectivenessTestId = value; MarkColumnModified(ColumnNameEffectivenessTestId); }
        }
        
        public const string ColumnNameCountOfPoints = "etr_count_of_points";
        private int? _countOfPoints;
        [Column(ColumnNameCountOfPoints)]
        public int? CountOfPoints
        {
            get { return _countOfPoints; }
            set { _countOfPoints = value; MarkColumnModified(ColumnNameCountOfPoints); }
        }
        
        public const string ColumnNameSlope = "etr_slope";
        private decimal? _slope;
        [Column(ColumnNameSlope)]
        public decimal? Slope
        {
            get { return _slope; }
            set { _slope = value; MarkColumnModified(ColumnNameSlope); }
        }
        
        public const string ColumnNameIntercept = "etr_intercept";
        private decimal? _intercept;
        [Column(ColumnNameIntercept)]
        public decimal? Intercept
        {
            get { return _intercept; }
            set { _intercept = value; MarkColumnModified(ColumnNameIntercept); }
        }
        
        public const string ColumnNameRSquared = "etr_rsquared";
        private decimal? _rSquared;
        [Column(ColumnNameRSquared)]
        public decimal? RSquared
        {
            get { return _rSquared; }
            set { _rSquared = value; MarkColumnModified(ColumnNameRSquared); }
        }
        
        public const string ColumnNameRSquaredAdjusted = "etr_rsquared_adjusted";
        private decimal? _rSquaredAdjusted;
        [Column(ColumnNameRSquaredAdjusted)]
        public decimal? RSquaredAdjusted
        {
            get { return _rSquaredAdjusted; }
            set { _rSquaredAdjusted = value; MarkColumnModified(ColumnNameRSquaredAdjusted); }
        }
        
        public const string ColumnNameTScoreSlope = "etr_t_score_slope";
        private decimal? _tScoreSlope;
        [Column(ColumnNameTScoreSlope)]
        public decimal? TScoreSlope
        {
            get { return _tScoreSlope; }
            set { _tScoreSlope = value; MarkColumnModified(ColumnNameTScoreSlope); }
        }
        
        public const string ColumnNameTScoreIntercept = "etr_t_score_intercept";
        private decimal? _tScoreIntercept;
        [Column(ColumnNameTScoreIntercept)]
        public decimal? TScoreIntercept
        {
            get { return _tScoreIntercept; }
            set { _tScoreIntercept = value; MarkColumnModified(ColumnNameTScoreIntercept); }
        }
        
        public const string ColumnNameTScoreSlopeCritical = "etr_critical_t_score_slope";
        private decimal? _tScoreSlopeCritical;
        [Column(ColumnNameTScoreSlopeCritical)]
        public decimal? TScoreSlopeCritical
        {
            get { return _tScoreSlopeCritical; }
            set { _tScoreSlopeCritical = value; MarkColumnModified(ColumnNameTScoreSlopeCritical); }
        }
        
        public const string ColumnNameTScoreInterceptCritical = "etr_critical_t_score_intercept";
        private decimal? _tScoreInterceptCritical;
        [Column(ColumnNameTScoreInterceptCritical)]
        public decimal? TScoreInterceptCritical
        {
            get { return _tScoreInterceptCritical; }
            set { _tScoreInterceptCritical = value; MarkColumnModified(ColumnNameTScoreInterceptCritical); }
        }
        
        public const string ColumnNameDegreesOfFredom = "etr_degrees_of_freedom";
        private int? _degreesOfFredom;
        [Column(ColumnNameDegreesOfFredom)]
        public int? DegreesOfFredom
        {
            get { return _degreesOfFredom; }
            set { _degreesOfFredom = value; MarkColumnModified(ColumnNameDegreesOfFredom); }
        }
        
        public const string ColumnNameFScore = "etr_f_score";
        private decimal? _fScore;
        [Column(ColumnNameFScore)]
        public decimal? FScore
        {
            get { return _fScore; }
            set { _fScore = value; MarkColumnModified(ColumnNameFScore); }
        }
        
        public const string ColumnNameFScoreCritical = "etr_critical_f_score";
        private decimal? _fScoreCritical;
        [Column(ColumnNameFScoreCritical)]
        public decimal? FScoreCritical
        {
            get { return _fScoreCritical; }
            set { _fScoreCritical = value; MarkColumnModified(ColumnNameFScoreCritical); }
        }
        
        public const string ColumnNameFSignificance = "etr_Fsignificance";
        private decimal? _fSignificance;
        [Column(ColumnNameFSignificance)]
        public decimal? FSignificance
        {
            get { return _fSignificance; }
            set { _fSignificance = value; MarkColumnModified(ColumnNameFSignificance); }
        }
        
        public const string ColumnNamePValueSlope = "etr_Pvalue_slope";
        private decimal? _pValueSlope;
        [Column(ColumnNamePValueSlope)]
        public decimal? PValueSlope
        {
            get { return _pValueSlope; }
            set { _pValueSlope = value; MarkColumnModified(ColumnNamePValueSlope); }
        }
        
        public const string ColumnNamePValueIntercept = "etr_Pvalue_intercept";
        private decimal? _pValueIntercept;
        [Column(ColumnNamePValueIntercept)]
        public decimal? PValueIntercept
        {
            get { return _pValueIntercept; }
            set { _pValueIntercept = value; MarkColumnModified(ColumnNamePValueIntercept); }
        }
        
        public const string ColumnNameSumOfSquaresResiduals = "etr_sumofsquares_residuals";
        private decimal? _sumOfSquaresResiduals;
        [Column(ColumnNameSumOfSquaresResiduals)]
        public decimal? SumOfSquaresResiduals
        {
            get { return _sumOfSquaresResiduals; }
            set { _sumOfSquaresResiduals = value; MarkColumnModified(ColumnNameSumOfSquaresResiduals); }
        }
        
        public const string ColumnNameSumOfSquaresRegression = "etr_sumofsquares_regression";
        private decimal? _sumOfSquaresRegression;
        [Column(ColumnNameSumOfSquaresRegression)]
        public decimal? SumOfSquaresRegression
        {
            get { return _sumOfSquaresRegression; }
            set { _sumOfSquaresRegression = value; MarkColumnModified(ColumnNameSumOfSquaresRegression); }
        }
        
        public const string ColumnNameSumOfSquaresTotal = "etr_sumofsquares_total";
        [ResultColumn(ColumnNameSumOfSquaresTotal)]
        public decimal? SumOfSquaresTotal { get; set; }
        
        public const string ColumnNameStandardErrorSlope = "etr_stderror_slope";
        private decimal? _standardErrorSlope;
        [Column(ColumnNameStandardErrorSlope)]
        public decimal? StandardErrorSlope
        {
            get { return _standardErrorSlope; }
            set { _standardErrorSlope = value; MarkColumnModified(ColumnNameStandardErrorSlope); }
        }
        
        public const string ColumnNameStandardErrorIntercept = "etr_stderror_intercept";
        private decimal? _standardErrorIntercept;
        [Column(ColumnNameStandardErrorIntercept)]
        public decimal? StandardErrorIntercept
        {
            get { return _standardErrorIntercept; }
            set { _standardErrorIntercept = value; MarkColumnModified(ColumnNameStandardErrorIntercept); }
        }
        
        public const string ColumnNameStandardErrorOfTheEstimate = "etr_stderror_of_the_estimate";
        private decimal? _standardErrorOfTheEstimate;
        [Column(ColumnNameStandardErrorOfTheEstimate)]
        public decimal? StandardErrorOfTheEstimate
        {
            get { return _standardErrorOfTheEstimate; }
            set { _standardErrorOfTheEstimate = value; MarkColumnModified(ColumnNameStandardErrorOfTheEstimate); }
        }
        
        public const string ColumnNameMeanSquareRegression = "etr_mean_square_regression";
        private decimal? _meanSquareRegression;
        [Column(ColumnNameMeanSquareRegression)]
        public decimal? MeanSquareRegression
        {
            get { return _meanSquareRegression; }
            set { _meanSquareRegression = value; MarkColumnModified(ColumnNameMeanSquareRegression); }
        }
        
        public const string ColumnNameMeanSquareError = "etr_mean_square_error";
        private decimal? _meanSquareError;
        [Column(ColumnNameMeanSquareError)]
        public decimal? MeanSquareError
        {
            get { return _meanSquareError; }
            set { _meanSquareError = value; MarkColumnModified(ColumnNameMeanSquareError); }
        }
        
        public const string ColumnNameConfidenceLevel = "etr_confidence_level";
        private decimal? _confidenceLevel;
        [Column(ColumnNameConfidenceLevel)]
        public decimal? ConfidenceLevel
        {
            get { return _confidenceLevel; }
            set { _confidenceLevel = value; MarkColumnModified(ColumnNameConfidenceLevel); }
        }
        
        public const string ColumnNameDurbinWatsonScore = "etr_durbin_watson_score";
        private decimal? _durbinWatsonScore;
        [Column(ColumnNameDurbinWatsonScore)]
        public decimal? DurbinWatsonScore
        {
            get { return _durbinWatsonScore; }
            set { _durbinWatsonScore = value; MarkColumnModified(ColumnNameDurbinWatsonScore); }
        }
        
        public const string ColumnNameDurbinWatsonLowerBound = "etr_durbin_watson_lower_bound";
        private decimal? _durbinWatsonLowerBound;
        [Column(ColumnNameDurbinWatsonLowerBound)]
        public decimal? DurbinWatsonLowerBound
        {
            get { return _durbinWatsonLowerBound; }
            set { _durbinWatsonLowerBound = value; MarkColumnModified(ColumnNameDurbinWatsonLowerBound); }
        }
        
        public const string ColumnNameDurbinWatsonUpperBound = "etr_durbin_watson_upper_bound";
        private decimal? _durbinWatsonUpperBound;
        [Column(ColumnNameDurbinWatsonUpperBound)]
        public decimal? DurbinWatsonUpperBound
        {
            get { return _durbinWatsonUpperBound; }
            set { _durbinWatsonUpperBound = value; MarkColumnModified(ColumnNameDurbinWatsonUpperBound); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_end_user_exemption")]
    [PrimaryKey("eue_end_user_exemption_id")]
    [ExplicitColumns]
    public class EndUserExemptionTableModel : TableModel
    {
        
        public const string ColumnNameId = "eue_end_user_exemption_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "eue_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameRelationshipId = "eue_nr_relationship_id";
        private int? _relationshipId;
        [Column(ColumnNameRelationshipId)]
        public int? RelationshipId
        {
            get { return _relationshipId; }
            set { _relationshipId = value; MarkColumnModified(ColumnNameRelationshipId); }
        }
        
        public const string ColumnNameName = "eue_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
        
        public const string ColumnNameHasCreditSupportAgreement = "eue_has_credit_support_agreement";
        private bool? _hasCreditSupportAgreement;
        [Column(ColumnNameHasCreditSupportAgreement)]
        public bool? HasCreditSupportAgreement
        {
            get { return _hasCreditSupportAgreement; }
            set { _hasCreditSupportAgreement = value; MarkColumnModified(ColumnNameHasCreditSupportAgreement); }
        }
        
        public const string ColumnNamePaymentsSecuredByCollateral = "eue_payments_secured_by_collateral";
        private bool? _paymentsSecuredByCollateral;
        [Column(ColumnNamePaymentsSecuredByCollateral)]
        public bool? PaymentsSecuredByCollateral
        {
            get { return _paymentsSecuredByCollateral; }
            set { _paymentsSecuredByCollateral = value; MarkColumnModified(ColumnNamePaymentsSecuredByCollateral); }
        }
        
        public const string ColumnNamePaymentsSecuredByGuarantee = "eue_payments_secured_by_guarantee";
        private bool? _paymentsSecuredByGuarantee;
        [Column(ColumnNamePaymentsSecuredByGuarantee)]
        public bool? PaymentsSecuredByGuarantee
        {
            get { return _paymentsSecuredByGuarantee; }
            set { _paymentsSecuredByGuarantee = value; MarkColumnModified(ColumnNamePaymentsSecuredByGuarantee); }
        }
        
        public const string ColumnNameObligsMetWithAvailableResources = "eue_obligs_met_with_available_resources";
        private bool? _obligsMetWithAvailableResources;
        [Column(ColumnNameObligsMetWithAvailableResources)]
        public bool? ObligsMetWithAvailableResources
        {
            get { return _obligsMetWithAvailableResources; }
            set { _obligsMetWithAvailableResources = value; MarkColumnModified(ColumnNameObligsMetWithAvailableResources); }
        }
        
        public const string ColumnNameObligsMetWithOtherResources = "eue_obligs_met_with_other_resources";
        private bool? _obligsMetWithOtherResources;
        [Column(ColumnNameObligsMetWithOtherResources)]
        public bool? ObligsMetWithOtherResources
        {
            get { return _obligsMetWithOtherResources; }
            set { _obligsMetWithOtherResources = value; MarkColumnModified(ColumnNameObligsMetWithOtherResources); }
        }
        
        public const string ColumnNameEndUserIsFinancialEntity = "eue_end_user_is_financial_entity";
        private bool? _endUserIsFinancialEntity;
        [Column(ColumnNameEndUserIsFinancialEntity)]
        public bool? EndUserIsFinancialEntity
        {
            get { return _endUserIsFinancialEntity; }
            set { _endUserIsFinancialEntity = value; MarkColumnModified(ColumnNameEndUserIsFinancialEntity); }
        }
        
        public const string ColumnNameEndUserIsCaptiveAffiliate = "eue_end_user_is_captive_affiliate";
        private bool? _endUserIsCaptiveAffiliate;
        [Column(ColumnNameEndUserIsCaptiveAffiliate)]
        public bool? EndUserIsCaptiveAffiliate
        {
            get { return _endUserIsCaptiveAffiliate; }
            set { _endUserIsCaptiveAffiliate = value; MarkColumnModified(ColumnNameEndUserIsCaptiveAffiliate); }
        }
        
        public const string ColumnNameInstrumentHedgesCommercialRisk = "eue_instrument_hedges_commercial_risk";
        private bool? _instrumentHedgesCommercialRisk;
        [Column(ColumnNameInstrumentHedgesCommercialRisk)]
        public bool? InstrumentHedgesCommercialRisk
        {
            get { return _instrumentHedgesCommercialRisk; }
            set { _instrumentHedgesCommercialRisk = value; MarkColumnModified(ColumnNameInstrumentHedgesCommercialRisk); }
        }
        
        public const string ColumnNameCounterPartyRegistered = "eue_counter_party_registered";
        private bool? _counterPartyRegistered;
        [Column(ColumnNameCounterPartyRegistered)]
        public bool? CounterPartyRegistered
        {
            get { return _counterPartyRegistered; }
            set { _counterPartyRegistered = value; MarkColumnModified(ColumnNameCounterPartyRegistered); }
        }
        
        public const string ColumnNameCounterPartyApproved = "eue_counter_party_approved";
        private bool? _counterPartyApproved;
        [Column(ColumnNameCounterPartyApproved)]
        public bool? CounterPartyApproved
        {
            get { return _counterPartyApproved; }
            set { _counterPartyApproved = value; MarkColumnModified(ColumnNameCounterPartyApproved); }
        }
        
        public const string ColumnNameCounterPartyCentralIndexKey = "eue_counter_party_central_index_key";
        private string _counterPartyCentralIndexKey;
        [Column(ColumnNameCounterPartyCentralIndexKey)]
        public string CounterPartyCentralIndexKey
        {
            get { return _counterPartyCentralIndexKey; }
            set { _counterPartyCentralIndexKey = value; MarkColumnModified(ColumnNameCounterPartyCentralIndexKey); }
        }
        
        public const string ColumnNameCreditSupportAgreementDetails = "eue_CreditSupportAgreementDetails";
        private string _creditSupportAgreementDetails;
        [Column(ColumnNameCreditSupportAgreementDetails)]
        public string CreditSupportAgreementDetails
        {
            get { return _creditSupportAgreementDetails; }
            set { _creditSupportAgreementDetails = value; MarkColumnModified(ColumnNameCreditSupportAgreementDetails); }
        }
        
        public const string ColumnNamePaymentsSecuredByCollateralDetails = "eue_PaymentsSecuredByCollateralDetails";
        private string _paymentsSecuredByCollateralDetails;
        [Column(ColumnNamePaymentsSecuredByCollateralDetails)]
        public string PaymentsSecuredByCollateralDetails
        {
            get { return _paymentsSecuredByCollateralDetails; }
            set { _paymentsSecuredByCollateralDetails = value; MarkColumnModified(ColumnNamePaymentsSecuredByCollateralDetails); }
        }
        
        public const string ColumnNamePaymentsSecuredByGuarantyDetails = "eue_PaymentsSecuredByGuarantyDetails";
        private string _paymentsSecuredByGuarantyDetails;
        [Column(ColumnNamePaymentsSecuredByGuarantyDetails)]
        public string PaymentsSecuredByGuarantyDetails
        {
            get { return _paymentsSecuredByGuarantyDetails; }
            set { _paymentsSecuredByGuarantyDetails = value; MarkColumnModified(ColumnNamePaymentsSecuredByGuarantyDetails); }
        }
        
        public const string ColumnNameObligationMetWithAvailResourcesDetails = "eue_ObligationMetWithAvailResourcesDetails";
        private string _obligationMetWithAvailResourcesDetails;
        [Column(ColumnNameObligationMetWithAvailResourcesDetails)]
        public string ObligationMetWithAvailResourcesDetails
        {
            get { return _obligationMetWithAvailResourcesDetails; }
            set { _obligationMetWithAvailResourcesDetails = value; MarkColumnModified(ColumnNameObligationMetWithAvailResourcesDetails); }
        }
        
        public const string ColumnNameObligationsMetWthOtherResourcesDetials = "eue_ObligationsMetWthOtherResourcesDetials";
        private string _obligationsMetWthOtherResourcesDetials;
        [Column(ColumnNameObligationsMetWthOtherResourcesDetials)]
        public string ObligationsMetWthOtherResourcesDetials
        {
            get { return _obligationsMetWthOtherResourcesDetials; }
            set { _obligationsMetWthOtherResourcesDetials = value; MarkColumnModified(ColumnNameObligationsMetWthOtherResourcesDetials); }
        }
        
        public const string ColumnNameCreatedByContactId = "eue_create_nm_id";
        private int? _createdByContactId;
        [Column(ColumnNameCreatedByContactId)]
        public int? CreatedByContactId
        {
            get { return _createdByContactId; }
            set { _createdByContactId = value; MarkColumnModified(ColumnNameCreatedByContactId); }
        }
        
        public const string ColumnNameCreatedByDateUtc = "eue_create_utc";
        private DateTime? _createdByDateUtc;
        [Column(ColumnNameCreatedByDateUtc)]
        public DateTime? CreatedByDateUtc
        {
            get { return _createdByDateUtc; }
            set { _createdByDateUtc = value; MarkColumnModified(ColumnNameCreatedByDateUtc); }
        }
        
        public const string ColumnNameDateSubmittedSwapDataRepository = "eue_DateSubmittedSwapDataRepository";
        private DateTime? _dateSubmittedSwapDataRepository;
        [Column(ColumnNameDateSubmittedSwapDataRepository)]
        public DateTime? DateSubmittedSwapDataRepository
        {
            get { return _dateSubmittedSwapDataRepository; }
            set { _dateSubmittedSwapDataRepository = value; MarkColumnModified(ColumnNameDateSubmittedSwapDataRepository); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_end_user_exemption_transaction_link")]
    [PrimaryKey("euet_end_user_exemption_transaction_link_id")]
    [ExplicitColumns]
    public class EndUserExemptionTransactionLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "euet_end_user_exemption_transaction_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEndUserExemptionId = "euet_eue_end_user_exemption_id";
        private int _endUserExemptionId;
        [Column(ColumnNameEndUserExemptionId)]
        public int EndUserExemptionId
        {
            get { return _endUserExemptionId; }
            set { _endUserExemptionId = value; MarkColumnModified(ColumnNameEndUserExemptionId); }
        }
        
        public const string ColumnNameTransactionId = "euet_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_engine")]
    [PrimaryKey("en_engine_id")]
    [ExplicitColumns]
    public class EngineTableModel : TableModel
    {
        
        public const string ColumnNameId = "en_engine_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameProductId = "en_dd_product_id";
        private string _productId;
        [Column(ColumnNameProductId)]
        public string ProductId
        {
            get { return _productId; }
            set { _productId = value; MarkColumnModified(ColumnNameProductId); }
        }
        
        public const string ColumnNameEngineName = "en_engine_name";
        private string _engineName;
        [Column(ColumnNameEngineName)]
        public string EngineName
        {
            get { return _engineName; }
            set { _engineName = value; MarkColumnModified(ColumnNameEngineName); }
        }
        
        public const string ColumnNameStartDate = "en_start_dt";
        private DateTime? _startDate;
        [Column(ColumnNameStartDate)]
        public DateTime? StartDate
        {
            get { return _startDate; }
            set { _startDate = value; MarkColumnModified(ColumnNameStartDate); }
        }
        
        public const string ColumnNameEndDate = "en_end_dt";
        private DateTime? _endDate;
        [Column(ColumnNameEndDate)]
        public DateTime? EndDate
        {
            get { return _endDate; }
            set { _endDate = value; MarkColumnModified(ColumnNameEndDate); }
        }
        
        public const string ColumnNameIndexId = "en_ix_index_id";
        private int? _indexId;
        [Column(ColumnNameIndexId)]
        public int? IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_engine_tran_quote")]
    [PrimaryKey("eq_engine_tran_quote_id")]
    [ExplicitColumns]
    public class EngineTranQuoteTableModel : TableModel
    {
        
        public const string ColumnNameId = "eq_engine_tran_quote_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTranQuoteId = "eq_tq_tran_quote_id";
        private int _tranQuoteId;
        [Column(ColumnNameTranQuoteId)]
        public int TranQuoteId
        {
            get { return _tranQuoteId; }
            set { _tranQuoteId = value; MarkColumnModified(ColumnNameTranQuoteId); }
        }
        
        public const string ColumnNameEngineName = "eq_engine_name";
        private string _engineName;
        [Column(ColumnNameEngineName)]
        public string EngineName
        {
            get { return _engineName; }
            set { _engineName = value; MarkColumnModified(ColumnNameEngineName); }
        }
        
        public const string ColumnNameEffectiveDate = "eq_effective_dt";
        private DateTime _effectiveDate;
        [Column(ColumnNameEffectiveDate)]
        public DateTime EffectiveDate
        {
            get { return _effectiveDate; }
            set { _effectiveDate = value; MarkColumnModified(ColumnNameEffectiveDate); }
        }
        
        public const string ColumnNameBootstrappingMethod = "eq_rv_bootstrapping_method";
        private int? _bootstrappingMethod;
        [Column(ColumnNameBootstrappingMethod)]
        public int? BootstrappingMethod
        {
            get { return _bootstrappingMethod; }
            set { _bootstrappingMethod = value; MarkColumnModified(ColumnNameBootstrappingMethod); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_entity_rate_overwrite")]
    [PrimaryKey("eso_entity_rate_overwrite_id")]
    [ExplicitColumns]
    public class EntityRateOverwriteTableModel : TableModel
    {
        
        public const string ColumnNameId = "eso_entity_rate_overwrite_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "eso_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameIndexId = "eso_ix_index_id";
        private int _indexId;
        [Column(ColumnNameIndexId)]
        public int IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
        
        public const string ColumnNameRate = "eso_rate";
        private decimal _rate;
        [Column(ColumnNameRate)]
        public decimal Rate
        {
            get { return _rate; }
            set { _rate = value; MarkColumnModified(ColumnNameRate); }
        }
        
        public const string ColumnNameRateOverwriteStatus = "eso_rv_status";
        private int _rateOverwriteStatus;
        [Column(ColumnNameRateOverwriteStatus)]
        public int RateOverwriteStatus
        {
            get { return _rateOverwriteStatus; }
            set { _rateOverwriteStatus = value; MarkColumnModified(ColumnNameRateOverwriteStatus); }
        }
        
        public const string ColumnNameContactId = "eso_rc_last_status_contact_id";
        private int _contactId;
        [Column(ColumnNameContactId)]
        public int ContactId
        {
            get { return _contactId; }
            set { _contactId = value; MarkColumnModified(ColumnNameContactId); }
        }
        
        public const string ColumnNameLastStatusDt = "eso_last_status_dt";
        private DateTime _lastStatusDt;
        [Column(ColumnNameLastStatusDt)]
        public DateTime LastStatusDt
        {
            get { return _lastStatusDt; }
            set { _lastStatusDt = value; MarkColumnModified(ColumnNameLastStatusDt); }
        }
        
        public const string ColumnNameLastStatusDate = "eso_last_status_dto";
        private DateTimeOffset? _lastStatusDate;
        [Column(ColumnNameLastStatusDate)]
        public DateTimeOffset? LastStatusDate
        {
            get { return _lastStatusDate; }
            set { _lastStatusDate = value; MarkColumnModified(ColumnNameLastStatusDate); }
        }
        
        public const string ColumnNameRateType = "eso_rv_rate_type";
        private int _rateType;
        [Column(ColumnNameRateType)]
        public int RateType
        {
            get { return _rateType; }
            set { _rateType = value; MarkColumnModified(ColumnNameRateType); }
        }
        
        public const string ColumnNameRateFromDate = "eso_rate_from_date";
        private DateTime _rateFromDate;
        [Column(ColumnNameRateFromDate)]
        public DateTime RateFromDate
        {
            get { return _rateFromDate; }
            set { _rateFromDate = value; MarkColumnModified(ColumnNameRateFromDate); }
        }
        
        public const string ColumnNameRateToDate = "eso_rate_to_date";
        private DateTime _rateToDate;
        [Column(ColumnNameRateToDate)]
        public DateTime RateToDate
        {
            get { return _rateToDate; }
            set { _rateToDate = value; MarkColumnModified(ColumnNameRateToDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_entity_vendor_platform")]
    [PrimaryKey("rep_entity_vendor_platform_id")]
    [ExplicitColumns]
    public class EntityVendorPlatformTableModel : TableModel
    {
        
        public const string ColumnNameId = "rep_entity_vendor_platform_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "rep_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameVendorPlatformId = "rep_rvpl_vendor_platform_id";
        private int _vendorPlatformId;
        [Column(ColumnNameVendorPlatformId)]
        public int VendorPlatformId
        {
            get { return _vendorPlatformId; }
            set { _vendorPlatformId = value; MarkColumnModified(ColumnNameVendorPlatformId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_entity_vendor_platform_code")]
    [PrimaryKey("repc_entity_vendor_platform_code_id")]
    [ExplicitColumns]
    public class EntityVendorPlatformCodeTableModel : TableModel
    {
        
        public const string ColumnNameId = "repc_entity_vendor_platform_code_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityVendorPlatformId = "repc_rep_entity_vendor_platform_id";
        private int _entityVendorPlatformId;
        [Column(ColumnNameEntityVendorPlatformId)]
        public int EntityVendorPlatformId
        {
            get { return _entityVendorPlatformId; }
            set { _entityVendorPlatformId = value; MarkColumnModified(ColumnNameEntityVendorPlatformId); }
        }
        
        public const string ColumnNamePlatformCode = "repc_platform_code";
        private string _platformCode;
        [Column(ColumnNamePlatformCode)]
        public string PlatformCode
        {
            get { return _platformCode; }
            set { _platformCode = value; MarkColumnModified(ColumnNamePlatformCode); }
        }
        
        public const string ColumnNamePlatformCodeType = "repc_rv_code_type";
        private int _platformCodeType;
        [Column(ColumnNamePlatformCodeType)]
        public int PlatformCodeType
        {
            get { return _platformCodeType; }
            set { _platformCodeType = value; MarkColumnModified(ColumnNamePlatformCodeType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_fas157_cva_methodology_switchover")]
    [PrimaryKey("fcms_fas157_cva_methodology_switchover_id")]
    [ExplicitColumns]
    public class Fas157CvaMethodologyTableModel : TableModel
    {
        
        public const string ColumnNameId = "fcms_fas157_cva_methodology_switchover_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNamePreviousMethodology = "fcms_rv_methodology_before_switchover";
        private int _previousMethodology;
        [Column(ColumnNamePreviousMethodology)]
        public int PreviousMethodology
        {
            get { return _previousMethodology; }
            set { _previousMethodology = value; MarkColumnModified(ColumnNamePreviousMethodology); }
        }
        
        public const string ColumnNameNewMethodology = "fcms_rv_methodology_after_switchover";
        private int _newMethodology;
        [Column(ColumnNameNewMethodology)]
        public int NewMethodology
        {
            get { return _newMethodology; }
            set { _newMethodology = value; MarkColumnModified(ColumnNameNewMethodology); }
        }
        
        public const string ColumnNameSwitchoverDate = "fcms_methodology_switchover_dt";
        private DateTime _switchoverDate;
        [Column(ColumnNameSwitchoverDate)]
        public DateTime SwitchoverDate
        {
            get { return _switchoverDate; }
            set { _switchoverDate = value; MarkColumnModified(ColumnNameSwitchoverDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_fas157_project_valuation")]
    [PrimaryKey("fpv_fas157_project_valuation_id")]
    [ExplicitColumns]
    public class PortfolioCreditValuationAdjustmentTableModel : TableModel
    {
        
        public const string ColumnNameId = "fpv_fas157_project_valuation_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameMarriageReportingPeriodLinkId = "fpv_mrpl_marriage_reporting_period_links_id";
        private int _marriageReportingPeriodLinkId;
        [Column(ColumnNameMarriageReportingPeriodLinkId)]
        public int MarriageReportingPeriodLinkId
        {
            get { return _marriageReportingPeriodLinkId; }
            set { _marriageReportingPeriodLinkId = value; MarkColumnModified(ColumnNameMarriageReportingPeriodLinkId); }
        }
        
        public const string ColumnNameUnadjustedSponsorCharge = "fpv_unadjusted_sponsor_charge";
        private decimal? _unadjustedSponsorCharge;
        [Column(ColumnNameUnadjustedSponsorCharge)]
        public decimal? UnadjustedSponsorCharge
        {
            get { return _unadjustedSponsorCharge; }
            set { _unadjustedSponsorCharge = value; MarkColumnModified(ColumnNameUnadjustedSponsorCharge); }
        }
        
        public const string ColumnNameAdjustedSponsorCharge = "fpv_adjusted_sponsor_charge";
        private decimal? _adjustedSponsorCharge;
        [Column(ColumnNameAdjustedSponsorCharge)]
        public decimal? AdjustedSponsorCharge
        {
            get { return _adjustedSponsorCharge; }
            set { _adjustedSponsorCharge = value; MarkColumnModified(ColumnNameAdjustedSponsorCharge); }
        }
        
        public const string ColumnNameUnadjustedCounterpartyCharge = "fpv_unadjusted_counterparty_charge";
        private decimal? _unadjustedCounterpartyCharge;
        [Column(ColumnNameUnadjustedCounterpartyCharge)]
        public decimal? UnadjustedCounterpartyCharge
        {
            get { return _unadjustedCounterpartyCharge; }
            set { _unadjustedCounterpartyCharge = value; MarkColumnModified(ColumnNameUnadjustedCounterpartyCharge); }
        }
        
        public const string ColumnNameAdjustedCounterpartyCharge = "fpv_adjusted_counterparty_charge";
        private decimal? _adjustedCounterpartyCharge;
        [Column(ColumnNameAdjustedCounterpartyCharge)]
        public decimal? AdjustedCounterpartyCharge
        {
            get { return _adjustedCounterpartyCharge; }
            set { _adjustedCounterpartyCharge = value; MarkColumnModified(ColumnNameAdjustedCounterpartyCharge); }
        }
        
        public const string ColumnNameSponsorThreshold = "fpv_sponsor_threshold";
        private decimal? _sponsorThreshold;
        [Column(ColumnNameSponsorThreshold)]
        public decimal? SponsorThreshold
        {
            get { return _sponsorThreshold; }
            set { _sponsorThreshold = value; MarkColumnModified(ColumnNameSponsorThreshold); }
        }
        
        public const string ColumnNameCounterPartyThreshold = "fpv_counterparty_threshold";
        private decimal? _counterPartyThreshold;
        [Column(ColumnNameCounterPartyThreshold)]
        public decimal? CounterPartyThreshold
        {
            get { return _counterPartyThreshold; }
            set { _counterPartyThreshold = value; MarkColumnModified(ColumnNameCounterPartyThreshold); }
        }
        
        public const string ColumnNameStatus = "fpv_status_bit";
        private bool _status;
        [Column(ColumnNameStatus)]
        public bool Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
        
        public const string ColumnNameCurrency1 = "fpv_rv_currency1";
        private int? _currency1;
        [Column(ColumnNameCurrency1)]
        public int? Currency1
        {
            get { return _currency1; }
            set { _currency1 = value; MarkColumnModified(ColumnNameCurrency1); }
        }
        
        public const string ColumnNameCurrency2 = "fpv_rv_currency2";
        private int? _currency2;
        [Column(ColumnNameCurrency2)]
        public int? Currency2
        {
            get { return _currency2; }
            set { _currency2 = value; MarkColumnModified(ColumnNameCurrency2); }
        }
        
        public const string ColumnNameSponsorExposureAvg = "fpv_sponsor_exposure_avg";
        private decimal? _sponsorExposureAvg;
        [Column(ColumnNameSponsorExposureAvg)]
        public decimal? SponsorExposureAvg
        {
            get { return _sponsorExposureAvg; }
            set { _sponsorExposureAvg = value; MarkColumnModified(ColumnNameSponsorExposureAvg); }
        }
        
        public const string ColumnNameCounterpartyExposureAvg = "fpv_counterparty_exposure_avg";
        private decimal? _counterpartyExposureAvg;
        [Column(ColumnNameCounterpartyExposureAvg)]
        public decimal? CounterpartyExposureAvg
        {
            get { return _counterpartyExposureAvg; }
            set { _counterpartyExposureAvg = value; MarkColumnModified(ColumnNameCounterpartyExposureAvg); }
        }
        
        public const string ColumnNameSponsorSpreadAvg = "fpv_sponsor_spread_avg";
        private decimal? _sponsorSpreadAvg;
        [Column(ColumnNameSponsorSpreadAvg)]
        public decimal? SponsorSpreadAvg
        {
            get { return _sponsorSpreadAvg; }
            set { _sponsorSpreadAvg = value; MarkColumnModified(ColumnNameSponsorSpreadAvg); }
        }
        
        public const string ColumnNameCounterpartySpreadAvg = "fpv_counterparty_spread_avg";
        private decimal? _counterpartySpreadAvg;
        [Column(ColumnNameCounterpartySpreadAvg)]
        public decimal? CounterpartySpreadAvg
        {
            get { return _counterpartySpreadAvg; }
            set { _counterpartySpreadAvg = value; MarkColumnModified(ColumnNameCounterpartySpreadAvg); }
        }
        
        public const string ColumnNameSponsorExposureDuration = "fpv_sponsor_exposure_duration";
        private decimal? _sponsorExposureDuration;
        [Column(ColumnNameSponsorExposureDuration)]
        public decimal? SponsorExposureDuration
        {
            get { return _sponsorExposureDuration; }
            set { _sponsorExposureDuration = value; MarkColumnModified(ColumnNameSponsorExposureDuration); }
        }
        
        public const string ColumnNameCounterpartyExposureDuration = "fpv_counterparty_exposure_duration";
        private decimal? _counterpartyExposureDuration;
        [Column(ColumnNameCounterpartyExposureDuration)]
        public decimal? CounterpartyExposureDuration
        {
            get { return _counterpartyExposureDuration; }
            set { _counterpartyExposureDuration = value; MarkColumnModified(ColumnNameCounterpartyExposureDuration); }
        }
        
        public const string ColumnNameSponsorCreditPointCollectionId = "fpv_cpc_credit_point_collection_id_sponsor";
        private int? _sponsorCreditPointCollectionId;
        [Column(ColumnNameSponsorCreditPointCollectionId)]
        public int? SponsorCreditPointCollectionId
        {
            get { return _sponsorCreditPointCollectionId; }
            set { _sponsorCreditPointCollectionId = value; MarkColumnModified(ColumnNameSponsorCreditPointCollectionId); }
        }
        
        public const string ColumnNameCounterpartyCreditPointCollectionId = "fpv_cpc_credit_point_collection_id_counterparty";
        private int? _counterpartyCreditPointCollectionId;
        [Column(ColumnNameCounterpartyCreditPointCollectionId)]
        public int? CounterpartyCreditPointCollectionId
        {
            get { return _counterpartyCreditPointCollectionId; }
            set { _counterpartyCreditPointCollectionId = value; MarkColumnModified(ColumnNameCounterpartyCreditPointCollectionId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_fas157_reporting_period")]
    [PrimaryKey("frp_fas157_reporting_period_id")]
    [ExplicitColumns]
    public class CvaReportingPeriodTableModel : TableModel
    {
        
        public const string ColumnNameId = "frp_fas157_reporting_period_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameReportDate = "frp_report_utc";
        private DateTime _reportDate;
        [Column(ColumnNameReportDate)]
        public DateTime ReportDate
        {
            get { return _reportDate; }
            set { _reportDate = value; MarkColumnModified(ColumnNameReportDate); }
        }
        
        public const string ColumnNameReportType = "frp_rv_report_period_type";
        private int _reportType;
        [Column(ColumnNameReportType)]
        public int ReportType
        {
            get { return _reportType; }
            set { _reportType = value; MarkColumnModified(ColumnNameReportType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_fas157_valuation")]
    [PrimaryKey("fv_fas157_valuation_id")]
    [ExplicitColumns]
    public class CreditValuationAdjustmentTableModel : TableModel
    {
        
        public const string ColumnNameId = "fv_fas157_valuation_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameProductValuationId = "fv_dh_daily_trans_hist_id";
        private int _productValuationId;
        [Column(ColumnNameProductValuationId)]
        public int ProductValuationId
        {
            get { return _productValuationId; }
            set { _productValuationId = value; MarkColumnModified(ColumnNameProductValuationId); }
        }
        
        public const string ColumnNameAsc820ProjectValuationExtractorId = "fv_fpv_fas157_project_valuation_id";
        private int _asc820ProjectValuationExtractorId;
        [Column(ColumnNameAsc820ProjectValuationExtractorId)]
        public int Asc820ProjectValuationExtractorId
        {
            get { return _asc820ProjectValuationExtractorId; }
            set { _asc820ProjectValuationExtractorId = value; MarkColumnModified(ColumnNameAsc820ProjectValuationExtractorId); }
        }
        
        public const string ColumnNameUnadjustedSponsorCharge = "fv_unadjusted_sponsor_charge";
        private decimal? _unadjustedSponsorCharge;
        [Column(ColumnNameUnadjustedSponsorCharge)]
        public decimal? UnadjustedSponsorCharge
        {
            get { return _unadjustedSponsorCharge; }
            set { _unadjustedSponsorCharge = value; MarkColumnModified(ColumnNameUnadjustedSponsorCharge); }
        }
        
        public const string ColumnNameAdjustedSponsorCharge = "fv_adjusted_sponsor_charge";
        private decimal? _adjustedSponsorCharge;
        [Column(ColumnNameAdjustedSponsorCharge)]
        public decimal? AdjustedSponsorCharge
        {
            get { return _adjustedSponsorCharge; }
            set { _adjustedSponsorCharge = value; MarkColumnModified(ColumnNameAdjustedSponsorCharge); }
        }
        
        public const string ColumnNameUnadjustedCounterpartyCharge = "fv_unadjusted_counterparty_charge";
        private decimal? _unadjustedCounterpartyCharge;
        [Column(ColumnNameUnadjustedCounterpartyCharge)]
        public decimal? UnadjustedCounterpartyCharge
        {
            get { return _unadjustedCounterpartyCharge; }
            set { _unadjustedCounterpartyCharge = value; MarkColumnModified(ColumnNameUnadjustedCounterpartyCharge); }
        }
        
        public const string ColumnNameAdjustedCounterpartyCharge = "fv_adjusted_counterparty_charge";
        private decimal? _adjustedCounterpartyCharge;
        [Column(ColumnNameAdjustedCounterpartyCharge)]
        public decimal? AdjustedCounterpartyCharge
        {
            get { return _adjustedCounterpartyCharge; }
            set { _adjustedCounterpartyCharge = value; MarkColumnModified(ColumnNameAdjustedCounterpartyCharge); }
        }
        
        public const string ColumnNameValuationTotal = "fv_valuation_total";
        private decimal? _valuationTotal;
        [Column(ColumnNameValuationTotal)]
        public decimal? ValuationTotal
        {
            get { return _valuationTotal; }
            set { _valuationTotal = value; MarkColumnModified(ColumnNameValuationTotal); }
        }
        
        public const string ColumnNameCreateDate = "fv_create_dt";
        private DateTime? _createDate;
        [Column(ColumnNameCreateDate)]
        public DateTime? CreateDate
        {
            get { return _createDate; }
            set { _createDate = value; MarkColumnModified(ColumnNameCreateDate); }
        }
        
        public const string ColumnNameMutualPut = "fv_mutual_put";
        private decimal? _mutualPut;
        [Column(ColumnNameMutualPut)]
        public decimal? MutualPut
        {
            get { return _mutualPut; }
            set { _mutualPut = value; MarkColumnModified(ColumnNameMutualPut); }
        }
        
        public const string ColumnNameSponsorExposureAverage = "fv_sponsor_exposure_avg";
        private decimal? _sponsorExposureAverage;
        [Column(ColumnNameSponsorExposureAverage)]
        public decimal? SponsorExposureAverage
        {
            get { return _sponsorExposureAverage; }
            set { _sponsorExposureAverage = value; MarkColumnModified(ColumnNameSponsorExposureAverage); }
        }
        
        public const string ColumnNameCounterpartyExposureAverage = "fv_counterparty_exposure_avg";
        private decimal? _counterpartyExposureAverage;
        [Column(ColumnNameCounterpartyExposureAverage)]
        public decimal? CounterpartyExposureAverage
        {
            get { return _counterpartyExposureAverage; }
            set { _counterpartyExposureAverage = value; MarkColumnModified(ColumnNameCounterpartyExposureAverage); }
        }
        
        public const string ColumnNameSponsorSpreadAverage = "fv_sponsor_spread_avg";
        private decimal? _sponsorSpreadAverage;
        [Column(ColumnNameSponsorSpreadAverage)]
        public decimal? SponsorSpreadAverage
        {
            get { return _sponsorSpreadAverage; }
            set { _sponsorSpreadAverage = value; MarkColumnModified(ColumnNameSponsorSpreadAverage); }
        }
        
        public const string ColumnNameCounterpartySpreadAverage = "fv_counterparty_spread_avg";
        private decimal? _counterpartySpreadAverage;
        [Column(ColumnNameCounterpartySpreadAverage)]
        public decimal? CounterpartySpreadAverage
        {
            get { return _counterpartySpreadAverage; }
            set { _counterpartySpreadAverage = value; MarkColumnModified(ColumnNameCounterpartySpreadAverage); }
        }
        
        public const string ColumnNameSponsorExposureDuration = "fv_sponsor_exposure_duration";
        private decimal? _sponsorExposureDuration;
        [Column(ColumnNameSponsorExposureDuration)]
        public decimal? SponsorExposureDuration
        {
            get { return _sponsorExposureDuration; }
            set { _sponsorExposureDuration = value; MarkColumnModified(ColumnNameSponsorExposureDuration); }
        }
        
        public const string ColumnNameCounterpartyExposureDuration = "fv_counterparty_exposure_duration";
        private decimal? _counterpartyExposureDuration;
        [Column(ColumnNameCounterpartyExposureDuration)]
        public decimal? CounterpartyExposureDuration
        {
            get { return _counterpartyExposureDuration; }
            set { _counterpartyExposureDuration = value; MarkColumnModified(ColumnNameCounterpartyExposureDuration); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_fas157_valuation_accounting_aggregate")]
    [PrimaryKey("fvag_fas157_valuation_accounting_aggregate_id")]
    [ExplicitColumns]
    public class CvaShortTermTableModel : TableModel
    {
        
        public const string ColumnNameId = "fvag_fas157_valuation_accounting_aggregate_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameCvaId = "fvag_fv_fas157_valuation_id";
        private int _cvaId;
        [Column(ColumnNameCvaId)]
        public int CvaId
        {
            get { return _cvaId; }
            set { _cvaId = value; MarkColumnModified(ColumnNameCvaId); }
        }
        
        public const string ColumnNameShortTermLength = "fvag_rv_valuation_short_term_length";
        private int? _shortTermLength;
        [Column(ColumnNameShortTermLength)]
        public int? ShortTermLength
        {
            get { return _shortTermLength; }
            set { _shortTermLength = value; MarkColumnModified(ColumnNameShortTermLength); }
        }
        
        public const string ColumnNameShortTermCounterpartyCharge = "fvag_fas_valuation_short_term_counterparty";
        private decimal? _shortTermCounterpartyCharge;
        [Column(ColumnNameShortTermCounterpartyCharge)]
        public decimal? ShortTermCounterpartyCharge
        {
            get { return _shortTermCounterpartyCharge; }
            set { _shortTermCounterpartyCharge = value; MarkColumnModified(ColumnNameShortTermCounterpartyCharge); }
        }
        
        public const string ColumnNameShortTermSponsorCharge = "fvag_fas_valuation_short_term_sponsor";
        private decimal? _shortTermSponsorCharge;
        [Column(ColumnNameShortTermSponsorCharge)]
        public decimal? ShortTermSponsorCharge
        {
            get { return _shortTermSponsorCharge; }
            set { _shortTermSponsorCharge = value; MarkColumnModified(ColumnNameShortTermSponsorCharge); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_fee_comment_link")]
    [PrimaryKey("fcl_fee_comment_link_id")]
    [ExplicitColumns]
    public class FeeCommentLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "fcl_fee_comment_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionEntityRelationId = "fcl_te_trans_relation_id";
        private int? _transactionEntityRelationId;
        [Column(ColumnNameTransactionEntityRelationId)]
        public int? TransactionEntityRelationId
        {
            get { return _transactionEntityRelationId; }
            set { _transactionEntityRelationId = value; MarkColumnModified(ColumnNameTransactionEntityRelationId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_hedgelet_values")]
    [PrimaryKey("hv_hedgelet_value_id")]
    [ExplicitColumns]
    public class HedgeletTableModel : TableModel
    {
        
        public const string ColumnNameId = "hv_hedgelet_value_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameScheduleId = "hv_fl_ongoing_calc_id";
        private int _scheduleId;
        [Column(ColumnNameScheduleId)]
        public int ScheduleId
        {
            get { return _scheduleId; }
            set { _scheduleId = value; MarkColumnModified(ColumnNameScheduleId); }
        }
        
        public const string ColumnNameProductValuationId = "hv_dh_daily_trans_hist_id";
        private int _productValuationId;
        [Column(ColumnNameProductValuationId)]
        public int ProductValuationId
        {
            get { return _productValuationId; }
            set { _productValuationId = value; MarkColumnModified(ColumnNameProductValuationId); }
        }
        
        public const string ColumnNameIntrinsicValue = "hv_intrinsic_value";
        private decimal? _intrinsicValue;
        [Column(ColumnNameIntrinsicValue)]
        public decimal? IntrinsicValue
        {
            get { return _intrinsicValue; }
            set { _intrinsicValue = value; MarkColumnModified(ColumnNameIntrinsicValue); }
        }
        
        public const string ColumnNameTimeValue = "hv_time_value";
        private decimal? _timeValue;
        [Column(ColumnNameTimeValue)]
        public decimal? TimeValue
        {
            get { return _timeValue; }
            set { _timeValue = value; MarkColumnModified(ColumnNameTimeValue); }
        }
        
        public const string ColumnNameTotalValue = "hv_total_value";
        private decimal? _totalValue;
        [Column(ColumnNameTotalValue)]
        public decimal? TotalValue
        {
            get { return _totalValue; }
            set { _totalValue = value; MarkColumnModified(ColumnNameTotalValue); }
        }
        
        public const string ColumnNamePresentValueFixed = "hv_pvFixed";
        private decimal? _presentValueFixed;
        [Column(ColumnNamePresentValueFixed)]
        public decimal? PresentValueFixed
        {
            get { return _presentValueFixed; }
            set { _presentValueFixed = value; MarkColumnModified(ColumnNamePresentValueFixed); }
        }
        
        public const string ColumnNamePresentValueFloating = "hv_pvFloat";
        private decimal? _presentValueFloating;
        [Column(ColumnNamePresentValueFloating)]
        public decimal? PresentValueFloating
        {
            get { return _presentValueFloating; }
            set { _presentValueFloating = value; MarkColumnModified(ColumnNamePresentValueFloating); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_holiday_transaction")]
    [PrimaryKey("ht_holiday_transaction_id")]
    [ExplicitColumns]
    public class HolidayTransactionTableModel : TableModel
    {
        
        public const string ColumnNameId = "ht_holiday_transaction_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "ht_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameHolidayCityId = "ht_hc_holiday_city_id";
        private int _holidayCityId;
        [Column(ColumnNameHolidayCityId)]
        public int HolidayCityId
        {
            get { return _holidayCityId; }
            set { _holidayCityId = value; MarkColumnModified(ColumnNameHolidayCityId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_import_job")]
    [PrimaryKey("ij_import_job_id")]
    [ExplicitColumns]
    public class ImportJobTableModel : TableModel
    {
        
        public const string ColumnNameId = "ij_import_job_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameJobType = "ij_rv_job_type";
        private int _jobType;
        [Column(ColumnNameJobType)]
        public int JobType
        {
            get { return _jobType; }
            set { _jobType = value; MarkColumnModified(ColumnNameJobType); }
        }
        
        public const string ColumnNameEntityId = "ij_re_entity_id";
        private int? _entityId;
        [Column(ColumnNameEntityId)]
        public int? EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameStatus = "ij_rv_status";
        private int _status;
        [Column(ColumnNameStatus)]
        public int Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
        
        public const string ColumnNameJobGuid = "ij_job_guid";
        private Guid _jobGuid;
        [Column(ColumnNameJobGuid)]
        public Guid JobGuid
        {
            get { return _jobGuid; }
            set { _jobGuid = value; MarkColumnModified(ColumnNameJobGuid); }
        }
        
        public const string ColumnNameRecordsSuccess = "ij_records_success";
        private int _recordsSuccess;
        [Column(ColumnNameRecordsSuccess)]
        public int RecordsSuccess
        {
            get { return _recordsSuccess; }
            set { _recordsSuccess = value; MarkColumnModified(ColumnNameRecordsSuccess); }
        }
        
        public const string ColumnNameRecordsError = "ij_records_error";
        private int _recordsError;
        [Column(ColumnNameRecordsError)]
        public int RecordsError
        {
            get { return _recordsError; }
            set { _recordsError = value; MarkColumnModified(ColumnNameRecordsError); }
        }
        
        public const string ColumnNameContactId = "ij_create_nm_id";
        private int _contactId;
        [Column(ColumnNameContactId)]
        public int ContactId
        {
            get { return _contactId; }
            set { _contactId = value; MarkColumnModified(ColumnNameContactId); }
        }
        
        public const string ColumnNameSubmittedOnUtc = "ij_create_utc";
        private DateTime _submittedOnUtc;
        [Column(ColumnNameSubmittedOnUtc)]
        public DateTime SubmittedOnUtc
        {
            get { return _submittedOnUtc; }
            set { _submittedOnUtc = value; MarkColumnModified(ColumnNameSubmittedOnUtc); }
        }
        
        public const string ColumnNameIsDeleted = "ij_deleted_bit";
        private bool _isDeleted;
        [Column(ColumnNameIsDeleted)]
        public bool IsDeleted
        {
            get { return _isDeleted; }
            set { _isDeleted = value; MarkColumnModified(ColumnNameIsDeleted); }
        }
        
        public const string ColumnNameFilename = "ij_filename";
        private string _filename;
        [Column(ColumnNameFilename)]
        public string Filename
        {
            get { return _filename; }
            set { _filename = value; MarkColumnModified(ColumnNameFilename); }
        }
        
        public const string ColumnNameOriginalFileDocumentId = "ij_original_file_do_document_id";
        private int? _originalFileDocumentId;
        [Column(ColumnNameOriginalFileDocumentId)]
        public int? OriginalFileDocumentId
        {
            get { return _originalFileDocumentId; }
            set { _originalFileDocumentId = value; MarkColumnModified(ColumnNameOriginalFileDocumentId); }
        }
        
        public const string ColumnNameSuccessFileDocumentId = "ij_success_file_do_document_id";
        private int? _successFileDocumentId;
        [Column(ColumnNameSuccessFileDocumentId)]
        public int? SuccessFileDocumentId
        {
            get { return _successFileDocumentId; }
            set { _successFileDocumentId = value; MarkColumnModified(ColumnNameSuccessFileDocumentId); }
        }
        
        public const string ColumnNameRejectFileDocumentId = "ij_reject_file_do_document_id";
        private int? _rejectFileDocumentId;
        [Column(ColumnNameRejectFileDocumentId)]
        public int? RejectFileDocumentId
        {
            get { return _rejectFileDocumentId; }
            set { _rejectFileDocumentId = value; MarkColumnModified(ColumnNameRejectFileDocumentId); }
        }
        
        public const string ColumnNameJobSource = "ij_rv_job_source";
        private int? _jobSource;
        [Column(ColumnNameJobSource)]
        public int? JobSource
        {
            get { return _jobSource; }
            set { _jobSource = value; MarkColumnModified(ColumnNameJobSource); }
        }
        
        public const string ColumnNameTotalRecords = "ij_records_total";
        private int _totalRecords;
        [Column(ColumnNameTotalRecords)]
        public int TotalRecords
        {
            get { return _totalRecords; }
            set { _totalRecords = value; MarkColumnModified(ColumnNameTotalRecords); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_import_job_detail")]
    [PrimaryKey("ijd_import_job_detail_id")]
    [ExplicitColumns]
    public class ImportJobDetailTableModel : TableModel
    {
        
        public const string ColumnNameId = "ijd_import_job_detail_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameImportJobId = "ijd_ij_import_job_id";
        private int _importJobId;
        [Column(ColumnNameImportJobId)]
        public int ImportJobId
        {
            get { return _importJobId; }
            set { _importJobId = value; MarkColumnModified(ColumnNameImportJobId); }
        }
        
        public const string ColumnNameTransactionId = "ijd_tr_transaction_id";
        private int? _transactionId;
        [Column(ColumnNameTransactionId)]
        public int? TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameRowId = "ijd_rowid";
        private int? _rowId;
        [Column(ColumnNameRowId)]
        public int? RowId
        {
            get { return _rowId; }
            set { _rowId = value; MarkColumnModified(ColumnNameRowId); }
        }
        
        public const string ColumnNameMessage = "ijd_message";
        private string _message;
        [Column(ColumnNameMessage)]
        public string Message
        {
            get { return _message; }
            set { _message = value; MarkColumnModified(ColumnNameMessage); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_index")]
    [PrimaryKey("ix_index_id")]
    [ExplicitColumns]
    public class IndexTableModel : TableModel
    {
        
        public const string ColumnNameId = "ix_index_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameNickname = "ix_index_nickname";
        private string _nickname;
        [Column(ColumnNameNickname)]
        public string Nickname
        {
            get { return _nickname; }
            set { _nickname = value; MarkColumnModified(ColumnNameNickname); }
        }
        
        public const string ColumnNameName = "ix_index_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
        
        public const string ColumnNameMaturityUnit = "ix_rv_maturity_unit";
        private string _maturityUnit;
        [Column(ColumnNameMaturityUnit)]
        public string MaturityUnit
        {
            get { return _maturityUnit; }
            set { _maturityUnit = value; MarkColumnModified(ColumnNameMaturityUnit); }
        }
        
        public const string ColumnNameMaturityAmount = "ix_maturity_amt";
        private int? _maturityAmount;
        [Column(ColumnNameMaturityAmount)]
        public int? MaturityAmount
        {
            get { return _maturityAmount; }
            set { _maturityAmount = value; MarkColumnModified(ColumnNameMaturityAmount); }
        }
        
        public const string ColumnNameIndexDefinition = "ix_index_defn";
        private string _indexDefinition;
        [Column(ColumnNameIndexDefinition)]
        public string IndexDefinition
        {
            get { return _indexDefinition; }
            set { _indexDefinition = value; MarkColumnModified(ColumnNameIndexDefinition); }
        }
        
        public const string ColumnNameResetLookbackDays = "ix_dd_reset_lookback";
        private int? _resetLookbackDays;
        [Column(ColumnNameResetLookbackDays)]
        public int? ResetLookbackDays
        {
            get { return _resetLookbackDays; }
            set { _resetLookbackDays = value; MarkColumnModified(ColumnNameResetLookbackDays); }
        }
        
        public const string ColumnNameDropdownYn = "ix_dd_dropdown_yn";
        private string _dropdownYn;
        [Column(ColumnNameDropdownYn)]
        public string DropdownYn
        {
            get { return _dropdownYn; }
            set { _dropdownYn = value; MarkColumnModified(ColumnNameDropdownYn); }
        }
        
        public const string ColumnNameCompoundingFrequency1 = "ix_compounding_freq";
        private decimal? _compoundingFrequency1;
        [Column(ColumnNameCompoundingFrequency1)]
        public decimal? CompoundingFrequency1
        {
            get { return _compoundingFrequency1; }
            set { _compoundingFrequency1 = value; MarkColumnModified(ColumnNameCompoundingFrequency1); }
        }
        
        public const string ColumnNameCurrency1 = "ix_rv_currency1_id";
        private int? _currency1;
        [Column(ColumnNameCurrency1)]
        public int? Currency1
        {
            get { return _currency1; }
            set { _currency1 = value; MarkColumnModified(ColumnNameCurrency1); }
        }
        
        public const string ColumnNameCurrency2 = "ix_rv_currency2_id";
        private int? _currency2;
        [Column(ColumnNameCurrency2)]
        public int? Currency2
        {
            get { return _currency2; }
            set { _currency2 = value; MarkColumnModified(ColumnNameCurrency2); }
        }
        
        public const string ColumnNameRateSetMultiplier = "ix_rateset_multiplier";
        private decimal? _rateSetMultiplier;
        [Column(ColumnNameRateSetMultiplier)]
        public decimal? RateSetMultiplier
        {
            get { return _rateSetMultiplier; }
            set { _rateSetMultiplier = value; MarkColumnModified(ColumnNameRateSetMultiplier); }
        }
        
        public const string ColumnNameSpreadOverRateSet = "ix_spread_over_rateset";
        private decimal? _spreadOverRateSet;
        [Column(ColumnNameSpreadOverRateSet)]
        public decimal? SpreadOverRateSet
        {
            get { return _spreadOverRateSet; }
            set { _spreadOverRateSet = value; MarkColumnModified(ColumnNameSpreadOverRateSet); }
        }
        
        public const string ColumnNameBondDetailId = "ix_bd_bond_det_id";
        private int? _bondDetailId;
        [Column(ColumnNameBondDetailId)]
        public int? BondDetailId
        {
            get { return _bondDetailId; }
            set { _bondDetailId = value; MarkColumnModified(ColumnNameBondDetailId); }
        }
        
        public const string ColumnNameRateCutoffDays = "ix_rate_cutoff_days";
        private int? _rateCutoffDays;
        [Column(ColumnNameRateCutoffDays)]
        public int? RateCutoffDays
        {
            get { return _rateCutoffDays; }
            set { _rateCutoffDays = value; MarkColumnModified(ColumnNameRateCutoffDays); }
        }
        
        public const string ColumnNameRateReleaseDelay = "ix_rate_release_delay";
        private int? _rateReleaseDelay;
        [Column(ColumnNameRateReleaseDelay)]
        public int? RateReleaseDelay
        {
            get { return _rateReleaseDelay; }
            set { _rateReleaseDelay = value; MarkColumnModified(ColumnNameRateReleaseDelay); }
        }
        
        public const string ColumnNameNominalName = "ix_nominal_name";
        private string _nominalName;
        [Column(ColumnNameNominalName)]
        public string NominalName
        {
            get { return _nominalName; }
            set { _nominalName = value; MarkColumnModified(ColumnNameNominalName); }
        }
        
        public const string ColumnNameIndexStatus = "ix_rv_index_status";
        private int? _indexStatus;
        [Column(ColumnNameIndexStatus)]
        public int? IndexStatus
        {
            get { return _indexStatus; }
            set { _indexStatus = value; MarkColumnModified(ColumnNameIndexStatus); }
        }
        
        public const string ColumnNameShortIndexDefinition = "ix_index_defn_short";
        private string _shortIndexDefinition;
        [Column(ColumnNameShortIndexDefinition)]
        public string ShortIndexDefinition
        {
            get { return _shortIndexDefinition; }
            set { _shortIndexDefinition = value; MarkColumnModified(ColumnNameShortIndexDefinition); }
        }
        
        public const string ColumnNameGoverningDefinition = "ix_rv_governing_defn";
        private int? _governingDefinition;
        [Column(ColumnNameGoverningDefinition)]
        public int? GoverningDefinition
        {
            get { return _governingDefinition; }
            set { _governingDefinition = value; MarkColumnModified(ColumnNameGoverningDefinition); }
        }
        
        public const string ColumnNameIsNonStandardDefinition = "ix_nonstandard_defn_bit";
        private bool? _isNonStandardDefinition;
        [Column(ColumnNameIsNonStandardDefinition)]
        public bool? IsNonStandardDefinition
        {
            get { return _isNonStandardDefinition; }
            set { _isNonStandardDefinition = value; MarkColumnModified(ColumnNameIsNonStandardDefinition); }
        }
        
        public const string ColumnNameRateReleaseTimeOfDay = "ix_rate_release_time_of_dt";
        private DateTime? _rateReleaseTimeOfDay;
        [Column(ColumnNameRateReleaseTimeOfDay)]
        public DateTime? RateReleaseTimeOfDay
        {
            get { return _rateReleaseTimeOfDay; }
            set { _rateReleaseTimeOfDay = value; MarkColumnModified(ColumnNameRateReleaseTimeOfDay); }
        }
        
        public const string ColumnNameRateLoadingDelayHours = "ix_rate_loading_delay_hours";
        private int? _rateLoadingDelayHours;
        [Column(ColumnNameRateLoadingDelayHours)]
        public int? RateLoadingDelayHours
        {
            get { return _rateLoadingDelayHours; }
            set { _rateLoadingDelayHours = value; MarkColumnModified(ColumnNameRateLoadingDelayHours); }
        }
        
        public const string ColumnNameIndexSource = "ix_rv_index_source";
        private int? _indexSource;
        [Column(ColumnNameIndexSource)]
        public int? IndexSource
        {
            get { return _indexSource; }
            set { _indexSource = value; MarkColumnModified(ColumnNameIndexSource); }
        }
        
        public const string ColumnNameCompoundingFrequency2 = "ix_compounding_freq2";
        private decimal? _compoundingFrequency2;
        [Column(ColumnNameCompoundingFrequency2)]
        public decimal? CompoundingFrequency2
        {
            get { return _compoundingFrequency2; }
            set { _compoundingFrequency2 = value; MarkColumnModified(ColumnNameCompoundingFrequency2); }
        }
        
        public const string ColumnNamePayFrequency1 = "ix_pay_freq";
        private decimal? _payFrequency1;
        [Column(ColumnNamePayFrequency1)]
        public decimal? PayFrequency1
        {
            get { return _payFrequency1; }
            set { _payFrequency1 = value; MarkColumnModified(ColumnNamePayFrequency1); }
        }
        
        public const string ColumnNamePayFrequency2 = "ix_pay_freq2";
        private decimal? _payFrequency2;
        [Column(ColumnNamePayFrequency2)]
        public decimal? PayFrequency2
        {
            get { return _payFrequency2; }
            set { _payFrequency2 = value; MarkColumnModified(ColumnNamePayFrequency2); }
        }
        
        public const string ColumnNameSettlementDays = "ix_settlement_days";
        private int? _settlementDays;
        [Column(ColumnNameSettlementDays)]
        public int? SettlementDays
        {
            get { return _settlementDays; }
            set { _settlementDays = value; MarkColumnModified(ColumnNameSettlementDays); }
        }
        
        public const string ColumnNameDayCountConv1 = "ix_daycount_conv";
        private string _dayCountConv1;
        [Column(ColumnNameDayCountConv1)]
        public string DayCountConv1
        {
            get { return _dayCountConv1; }
            set { _dayCountConv1 = value; MarkColumnModified(ColumnNameDayCountConv1); }
        }
        
        public const string ColumnNameDayCountConv2 = "ix_daycount_conv2";
        private string _dayCountConv2;
        [Column(ColumnNameDayCountConv2)]
        public string DayCountConv2
        {
            get { return _dayCountConv2; }
            set { _dayCountConv2 = value; MarkColumnModified(ColumnNameDayCountConv2); }
        }
        
        public const string ColumnNameFloatingRateBusinessDayConvention = "ix_rv_b_day_floating";
        private int? _floatingRateBusinessDayConvention;
        [Column(ColumnNameFloatingRateBusinessDayConvention)]
        public int? FloatingRateBusinessDayConvention
        {
            get { return _floatingRateBusinessDayConvention; }
            set { _floatingRateBusinessDayConvention = value; MarkColumnModified(ColumnNameFloatingRateBusinessDayConvention); }
        }
        
        public const string ColumnNameIsCommonCurve = "ix_common_curve_bit";
        private bool _isCommonCurve;
        [Column(ColumnNameIsCommonCurve)]
        public bool IsCommonCurve
        {
            get { return _isCommonCurve; }
            set { _isCommonCurve = value; MarkColumnModified(ColumnNameIsCommonCurve); }
        }
        
        public const string ColumnNameIsStp = "ix_stp_bit";
        private bool _isStp;
        [Column(ColumnNameIsStp)]
        public bool IsStp
        {
            get { return _isStp; }
            set { _isStp = value; MarkColumnModified(ColumnNameIsStp); }
        }
        
        public const string ColumnNameBaseIndexId = "ix_base_ix_index_id";
        private int? _baseIndexId;
        [Column(ColumnNameBaseIndexId)]
        public int? BaseIndexId
        {
            get { return _baseIndexId; }
            set { _baseIndexId = value; MarkColumnModified(ColumnNameBaseIndexId); }
        }
        
        public const string ColumnNameIsFeeLiable = "ix_fee_liable_bit";
        private bool _isFeeLiable;
        [Column(ColumnNameIsFeeLiable)]
        public bool IsFeeLiable
        {
            get { return _isFeeLiable; }
            set { _isFeeLiable = value; MarkColumnModified(ColumnNameIsFeeLiable); }
        }
        
        public const string ColumnNameIsPublicDiscountCurve = "ix_public_discount_curve_bit";
        private bool _isPublicDiscountCurve;
        [Column(ColumnNameIsPublicDiscountCurve)]
        public bool IsPublicDiscountCurve
        {
            get { return _isPublicDiscountCurve; }
            set { _isPublicDiscountCurve = value; MarkColumnModified(ColumnNameIsPublicDiscountCurve); }
        }
        
        public const string ColumnNameEquivalentPips = "ix_equivalent_pip";
        private decimal? _equivalentPips;
        [Column(ColumnNameEquivalentPips)]
        public decimal? EquivalentPips
        {
            get { return _equivalentPips; }
            set { _equivalentPips = value; MarkColumnModified(ColumnNameEquivalentPips); }
        }
        
        public const string ColumnNameCapVolDefaultIndexId = "ix_capvol_default_ix_index_id";
        private int? _capVolDefaultIndexId;
        [Column(ColumnNameCapVolDefaultIndexId)]
        public int? CapVolDefaultIndexId
        {
            get { return _capVolDefaultIndexId; }
            set { _capVolDefaultIndexId = value; MarkColumnModified(ColumnNameCapVolDefaultIndexId); }
        }
        
        public const string ColumnNameIndexType = "ix_rv_index_type";
        private int _indexType;
        [Column(ColumnNameIndexType)]
        public int IndexType
        {
            get { return _indexType; }
            set { _indexType = value; MarkColumnModified(ColumnNameIndexType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_index_commodity")]
    [PrimaryKey("ixc_index_commodity_id")]
    [ExplicitColumns]
    public class IndexCommodityMetaTableModel : TableModel
    {
        
        public const string ColumnNameId = "ixc_index_commodity_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameIndexId = "ixc_ix_index_id";
        private int _indexId;
        [Column(ColumnNameIndexId)]
        public int IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
        
        public const string ColumnNameCommodityType = "ixc_rv_commodity_type";
        private int _commodityType;
        [Column(ColumnNameCommodityType)]
        public int CommodityType
        {
            get { return _commodityType; }
            set { _commodityType = value; MarkColumnModified(ColumnNameCommodityType); }
        }
        
        public const string ColumnNameCommodityUnitsOfMeasure = "ixc_rv_commodity_units_of_measure";
        private int _commodityUnitsOfMeasure;
        [Column(ColumnNameCommodityUnitsOfMeasure)]
        public int CommodityUnitsOfMeasure
        {
            get { return _commodityUnitsOfMeasure; }
            set { _commodityUnitsOfMeasure = value; MarkColumnModified(ColumnNameCommodityUnitsOfMeasure); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_index_commodity_conversion_info")]
    [PrimaryKey("ixcc_index_commodity_conversion_info_id")]
    [ExplicitColumns]
    public class CommodityConversionInfoTableModel : TableModel
    {
        
        public const string ColumnNameId = "ixcc_index_commodity_conversion_info_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameIndexCommodityMetaId = "ixcc_ixc_index_commodity_id";
        private int _indexCommodityMetaId;
        [Column(ColumnNameIndexCommodityMetaId)]
        public int IndexCommodityMetaId
        {
            get { return _indexCommodityMetaId; }
            set { _indexCommodityMetaId = value; MarkColumnModified(ColumnNameIndexCommodityMetaId); }
        }
        
        public const string ColumnNameUnitsOfConversion = "ixcc_rv_commodity_units_of_conversion";
        private int _unitsOfConversion;
        [Column(ColumnNameUnitsOfConversion)]
        public int UnitsOfConversion
        {
            get { return _unitsOfConversion; }
            set { _unitsOfConversion = value; MarkColumnModified(ColumnNameUnitsOfConversion); }
        }
        
        public const string ColumnNameConversionFactor = "ixcc_conversion_factor";
        private decimal _conversionFactor;
        [Column(ColumnNameConversionFactor)]
        public decimal ConversionFactor
        {
            get { return _conversionFactor; }
            set { _conversionFactor = value; MarkColumnModified(ColumnNameConversionFactor); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_index_exposure")]
    [PrimaryKey("chi_index_exposure_id")]
    [ExplicitColumns]
    public class ExposureMetaTableModel : TableModel
    {
        
        public const string ColumnNameId = "chi_index_exposure_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameIndexId = "chi_ix_index_id";
        private int _indexId;
        [Column(ColumnNameIndexId)]
        public int IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
        
        public const string ColumnNameConstant = "chi_constant";
        private double _constant;
        [Column(ColumnNameConstant)]
        public double Constant
        {
            get { return _constant; }
            set { _constant = value; MarkColumnModified(ColumnNameConstant); }
        }
        
        public const string ColumnNameStartDate = "chi_start_date";
        private DateTime _startDate;
        [Column(ColumnNameStartDate)]
        public DateTime StartDate
        {
            get { return _startDate; }
            set { _startDate = value; MarkColumnModified(ColumnNameStartDate); }
        }
        
        public const string ColumnNameFormulaNoteId = "chi_formula_nt_note_id";
        private int? _formulaNoteId;
        [Column(ColumnNameFormulaNoteId)]
        public int? FormulaNoteId
        {
            get { return _formulaNoteId; }
            set { _formulaNoteId = value; MarkColumnModified(ColumnNameFormulaNoteId); }
        }
        
        public const string ColumnNameIndexExposureAvgTypeEntityLinkId = "chi_ate_index_exposure_avg_type_entity_link_id";
        private int _indexExposureAvgTypeEntityLinkId;
        [Column(ColumnNameIndexExposureAvgTypeEntityLinkId)]
        public int IndexExposureAvgTypeEntityLinkId
        {
            get { return _indexExposureAvgTypeEntityLinkId; }
            set { _indexExposureAvgTypeEntityLinkId = value; MarkColumnModified(ColumnNameIndexExposureAvgTypeEntityLinkId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_index_exposure_avg_type")]
    [PrimaryKey("chat_index_exposure_avg_type_id")]
    [ExplicitColumns]
    public class ExposureAvgTypeTableModel : TableModel
    {
        
        public const string ColumnNameId = "chat_index_exposure_avg_type_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameDescription = "chat_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameStartOffset = "chat_start_offset";
        private int _startOffset;
        [Column(ColumnNameStartOffset)]
        public int StartOffset
        {
            get { return _startOffset; }
            set { _startOffset = value; MarkColumnModified(ColumnNameStartOffset); }
        }
        
        public const string ColumnNameEndOffset = "chat_end_offset";
        private int _endOffset;
        [Column(ColumnNameEndOffset)]
        public int EndOffset
        {
            get { return _endOffset; }
            set { _endOffset = value; MarkColumnModified(ColumnNameEndOffset); }
        }
        
        public const string ColumnNameStartBDConvention = "chat_start_bd_convention";
        private int _startBDConvention;
        [Column(ColumnNameStartBDConvention)]
        public int StartBDConvention
        {
            get { return _startBDConvention; }
            set { _startBDConvention = value; MarkColumnModified(ColumnNameStartBDConvention); }
        }
        
        public const string ColumnNameEndBDConvention = "chat_end_bd_convention";
        private int _endBDConvention;
        [Column(ColumnNameEndBDConvention)]
        public int EndBDConvention
        {
            get { return _endBDConvention; }
            set { _endBDConvention = value; MarkColumnModified(ColumnNameEndBDConvention); }
        }
        
        public const string ColumnNameStartOffsetType = "chat_rv_start_offset_type";
        private int _startOffsetType;
        [Column(ColumnNameStartOffsetType)]
        public int StartOffsetType
        {
            get { return _startOffsetType; }
            set { _startOffsetType = value; MarkColumnModified(ColumnNameStartOffsetType); }
        }
        
        public const string ColumnNameEndOffsetType = "chat_rv_end_offset_type";
        private int _endOffsetType;
        [Column(ColumnNameEndOffsetType)]
        public int EndOffsetType
        {
            get { return _endOffsetType; }
            set { _endOffsetType = value; MarkColumnModified(ColumnNameEndOffsetType); }
        }
        
        public const string ColumnNameAveragingType = "chat_rv_commodity_exposure_avg_type";
        private int _averagingType;
        [Column(ColumnNameAveragingType)]
        public int AveragingType
        {
            get { return _averagingType; }
            set { _averagingType = value; MarkColumnModified(ColumnNameAveragingType); }
        }
        
        public const string ColumnNameIsDefault = "chat_avg_type_is_default";
        private bool _isDefault;
        [Column(ColumnNameIsDefault)]
        public bool IsDefault
        {
            get { return _isDefault; }
            set { _isDefault = value; MarkColumnModified(ColumnNameIsDefault); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_index_exposure_avg_type_entity_link")]
    [PrimaryKey("ate_index_exposure_avg_type_entity_link_id")]
    [ExplicitColumns]
    public class ExposureAvgTypeEntityLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "ate_index_exposure_avg_type_entity_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameExposureAvgTypeId = "ate_chat_index_exposure_avg_type_id";
        private int _exposureAvgTypeId;
        [Column(ColumnNameExposureAvgTypeId)]
        public int ExposureAvgTypeId
        {
            get { return _exposureAvgTypeId; }
            set { _exposureAvgTypeId = value; MarkColumnModified(ColumnNameExposureAvgTypeId); }
        }
        
        public const string ColumnNameEntityId = "ate_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_index_exposure_params")]
    [PrimaryKey("chip_index_exposure_params_id")]
    [ExplicitColumns]
    public class ExposureParamTableModel : TableModel
    {
        
        public const string ColumnNameId = "chip_index_exposure_params_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameIndexId = "chip_ix_index_id";
        private int _indexId;
        [Column(ColumnNameIndexId)]
        public int IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
        
        public const string ColumnNameIndexExposureMetaId = "chip_chi_index_exposure_id";
        private int _indexExposureMetaId;
        [Column(ColumnNameIndexExposureMetaId)]
        public int IndexExposureMetaId
        {
            get { return _indexExposureMetaId; }
            set { _indexExposureMetaId = value; MarkColumnModified(ColumnNameIndexExposureMetaId); }
        }
        
        public const string ColumnNameMultiplier = "chip_multiplier";
        private double? _multiplier;
        [Column(ColumnNameMultiplier)]
        public double? Multiplier
        {
            get { return _multiplier; }
            set { _multiplier = value; MarkColumnModified(ColumnNameMultiplier); }
        }
        
        public const string ColumnNameMarketSide = "chip_rv_market_side";
        private int? _marketSide;
        [Column(ColumnNameMarketSide)]
        public int? MarketSide
        {
            get { return _marketSide; }
            set { _marketSide = value; MarkColumnModified(ColumnNameMarketSide); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_index_exposure_proxy")]
    [PrimaryKey("chp_exposure_proxy_id")]
    [ExplicitColumns]
    public class ExposureProxyTableModel : TableModel
    {
        
        public const string ColumnNameId = "chp_exposure_proxy_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameIndexExposureMetaId = "chp_chi_index_exposure_id";
        private int _indexExposureMetaId;
        [Column(ColumnNameIndexExposureMetaId)]
        public int IndexExposureMetaId
        {
            get { return _indexExposureMetaId; }
            set { _indexExposureMetaId = value; MarkColumnModified(ColumnNameIndexExposureMetaId); }
        }
        
        public const string ColumnNameIndexId = "chp_ix_index_id";
        private int _indexId;
        [Column(ColumnNameIndexId)]
        public int IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
        
        public const string ColumnNameLookbackLength = "chp_rv_lookback_length";
        private int _lookbackLength;
        [Column(ColumnNameLookbackLength)]
        public int LookbackLength
        {
            get { return _lookbackLength; }
            set { _lookbackLength = value; MarkColumnModified(ColumnNameLookbackLength); }
        }
        
        public const string ColumnNameLookbackValue = "chp_lookback_value";
        private int _lookbackValue;
        [Column(ColumnNameLookbackValue)]
        public int LookbackValue
        {
            get { return _lookbackValue; }
            set { _lookbackValue = value; MarkColumnModified(ColumnNameLookbackValue); }
        }
        
        public const string ColumnNameFormulaType = "chp_rv_formula_type";
        private int _formulaType;
        [Column(ColumnNameFormulaType)]
        public int FormulaType
        {
            get { return _formulaType; }
            set { _formulaType = value; MarkColumnModified(ColumnNameFormulaType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_index_exposure_workflow")]
    [PrimaryKey("chiw_index_exposure_workflow_id")]
    [ExplicitColumns]
    public class ExposureIndexWorkflowTableModel : TableModel
    {
        
        public const string ColumnNameId = "chiw_index_exposure_workflow_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameIndexExposureMetaId = "chiw_chi_index_exposure_id";
        private int _indexExposureMetaId;
        [Column(ColumnNameIndexExposureMetaId)]
        public int IndexExposureMetaId
        {
            get { return _indexExposureMetaId; }
            set { _indexExposureMetaId = value; MarkColumnModified(ColumnNameIndexExposureMetaId); }
        }
        
        public const string ColumnNameWorkflowStatus = "chiw_rv_workflow_status";
        private int _workflowStatus;
        [Column(ColumnNameWorkflowStatus)]
        public int WorkflowStatus
        {
            get { return _workflowStatus; }
            set { _workflowStatus = value; MarkColumnModified(ColumnNameWorkflowStatus); }
        }
        
        public const string ColumnNameChangedById = "chiw_rc_workflow_nm_id";
        private int _changedById;
        [Column(ColumnNameChangedById)]
        public int ChangedById
        {
            get { return _changedById; }
            set { _changedById = value; MarkColumnModified(ColumnNameChangedById); }
        }
        
        public const string ColumnNameChangedDate = "chiw_workflow_change_dt";
        private DateTime _changedDate;
        [Column(ColumnNameChangedDate)]
        public DateTime ChangedDate
        {
            get { return _changedDate; }
            set { _changedDate = value; MarkColumnModified(ColumnNameChangedDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_index_holiday_city")]
    [PrimaryKey("ihc_index_holiday_city_id")]
    [ExplicitColumns]
    public class IndexHolidayCityTableModel : TableModel
    {
        
        public const string ColumnNameId = "ihc_index_holiday_city_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameIndexId = "ihc_ix_index_id";
        private int _indexId;
        [Column(ColumnNameIndexId)]
        public int IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
        
        public const string ColumnNameHolidayCityId = "ihc_hc_holiday_city_id";
        private int _holidayCityId;
        [Column(ColumnNameHolidayCityId)]
        public int HolidayCityId
        {
            get { return _holidayCityId; }
            set { _holidayCityId = value; MarkColumnModified(ColumnNameHolidayCityId); }
        }
        
        public const string ColumnNameHolidayCityType = "ihc_rv_holiday_city_type";
        private int _holidayCityType;
        [Column(ColumnNameHolidayCityType)]
        public int HolidayCityType
        {
            get { return _holidayCityType; }
            set { _holidayCityType = value; MarkColumnModified(ColumnNameHolidayCityType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_index_option")]
    [PrimaryKey("ixop_index_option_id")]
    [ExplicitColumns]
    public class IndexOptionTableModel : TableModel
    {
        
        public const string ColumnNameId = "ixop_index_option_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameComponentId = "ixop_cm_component_id";
        private int _componentId;
        [Column(ColumnNameComponentId)]
        public int ComponentId
        {
            get { return _componentId; }
            set { _componentId = value; MarkColumnModified(ColumnNameComponentId); }
        }
        
        public const string ColumnNameMultiplier = "ixop_multiplier";
        private decimal? _multiplier;
        [Column(ColumnNameMultiplier)]
        public decimal? Multiplier
        {
            get { return _multiplier; }
            set { _multiplier = value; MarkColumnModified(ColumnNameMultiplier); }
        }
        
        public const string ColumnNameHolidayCityId1 = "ixop_holiday_city_1";
        private int? _holidayCityId1;
        [Column(ColumnNameHolidayCityId1)]
        public int? HolidayCityId1
        {
            get { return _holidayCityId1; }
            set { _holidayCityId1 = value; MarkColumnModified(ColumnNameHolidayCityId1); }
        }
        
        public const string ColumnNameHolidayCityId2 = "ixop_holiday_city_2";
        private int? _holidayCityId2;
        [Column(ColumnNameHolidayCityId2)]
        public int? HolidayCityId2
        {
            get { return _holidayCityId2; }
            set { _holidayCityId2 = value; MarkColumnModified(ColumnNameHolidayCityId2); }
        }
        
        public const string ColumnNameLookbackdays = "ixop_lookback_days";
        private int? _lookbackdays;
        [Column(ColumnNameLookbackdays)]
        public int? Lookbackdays
        {
            get { return _lookbackdays; }
            set { _lookbackdays = value; MarkColumnModified(ColumnNameLookbackdays); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_index_provider_fieldsets")]
    [PrimaryKey("ip_provider_index_id")]
    [ExplicitColumns]
    public class RateProviderMappingTableModel : TableModel
    {
        
        public const string ColumnNameId = "ip_provider_index_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameIndexId = "ip_ix_index_id";
        private int _indexId;
        [Column(ColumnNameIndexId)]
        public int IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
        
        public const string ColumnNameInstrumentCode = "ip_provider_code";
        private string _instrumentCode;
        [Column(ColumnNameInstrumentCode)]
        public string InstrumentCode
        {
            get { return _instrumentCode; }
            set { _instrumentCode = value; MarkColumnModified(ColumnNameInstrumentCode); }
        }
        
        public const string ColumnNameScaleFactor = "ip_scale_factor";
        private decimal? _scaleFactor;
        [Column(ColumnNameScaleFactor)]
        public decimal? ScaleFactor
        {
            get { return _scaleFactor; }
            set { _scaleFactor = value; MarkColumnModified(ColumnNameScaleFactor); }
        }
        
        public const string ColumnNameProviderFieldSetId = "ip_fs_provider_fieldset_id";
        private int? _providerFieldSetId;
        [Column(ColumnNameProviderFieldSetId)]
        public int? ProviderFieldSetId
        {
            get { return _providerFieldSetId; }
            set { _providerFieldSetId = value; MarkColumnModified(ColumnNameProviderFieldSetId); }
        }
        
        public const string ColumnNameRatesProvider = "ip_rv_provider_name_id";
        private int? _ratesProvider;
        [Column(ColumnNameRatesProvider)]
        public int? RatesProvider
        {
            get { return _ratesProvider; }
            set { _ratesProvider = value; MarkColumnModified(ColumnNameRatesProvider); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_index_rate_pull")]
    [PrimaryKey("irp_index_rate_pull_id")]
    [ExplicitColumns]
    public class IndexRatePullTableModel : TableModel
    {
        
        public const string ColumnNameId = "irp_index_rate_pull_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameSuccess = "irp_success";
        private bool _success;
        [Column(ColumnNameSuccess)]
        public bool Success
        {
            get { return _success; }
            set { _success = value; MarkColumnModified(ColumnNameSuccess); }
        }
        
        public const string ColumnNameControlReportProcessedCount = "irp_count_control_report_processed";
        private int? _controlReportProcessedCount;
        [Column(ColumnNameControlReportProcessedCount)]
        public int? ControlReportProcessedCount
        {
            get { return _controlReportProcessedCount; }
            set { _controlReportProcessedCount = value; MarkColumnModified(ColumnNameControlReportProcessedCount); }
        }
        
        public const string ColumnNameRatesProcessedCount = "irp_count_rates_processed";
        private int? _ratesProcessedCount;
        [Column(ColumnNameRatesProcessedCount)]
        public int? RatesProcessedCount
        {
            get { return _ratesProcessedCount; }
            set { _ratesProcessedCount = value; MarkColumnModified(ColumnNameRatesProcessedCount); }
        }
        
        public const string ColumnNameSignoffContactId = "irp_rc_contact_id_signoff";
        private int? _signoffContactId;
        [Column(ColumnNameSignoffContactId)]
        public int? SignoffContactId
        {
            get { return _signoffContactId; }
            set { _signoffContactId = value; MarkColumnModified(ColumnNameSignoffContactId); }
        }
        
        public const string ColumnNameCreatedById = "irp_create_nm_id";
        [ResultColumn(ColumnNameCreatedById)]
        public int? CreatedById { get; set; }
        
        public const string ColumnNameCreatedDate = "irp_create_dto";
        [ResultColumn(ColumnNameCreatedDate)]
        public DateTimeOffset? CreatedDate { get; set; }
        
        public const string ColumnNameTimestamp = "irp_timestamp_dto";
        private DateTimeOffset _timestamp;
        [Column(ColumnNameTimestamp)]
        public DateTimeOffset Timestamp
        {
            get { return _timestamp; }
            set { _timestamp = value; MarkColumnModified(ColumnNameTimestamp); }
        }
        
        public const string ColumnNameRateSetId = "irp_rt_rates_set_id";
        private int _rateSetId;
        [Column(ColumnNameRateSetId)]
        public int RateSetId
        {
            get { return _rateSetId; }
            set { _rateSetId = value; MarkColumnModified(ColumnNameRateSetId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_index_rate_pull_cap_vol")]
    [PrimaryKey("irpcv_index_rate_pull_cap_vol_id")]
    [ExplicitColumns]
    public class RatePullCapVolTableModel : TableModel
    {
        
        public const string ColumnNameId = "irpcv_index_rate_pull_cap_vol_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameRatePullId = "irpcv_irp_index_rate_pull_id";
        private int _ratePullId;
        [Column(ColumnNameRatePullId)]
        public int RatePullId
        {
            get { return _ratePullId; }
            set { _ratePullId = value; MarkColumnModified(ColumnNameRatePullId); }
        }
        
        public const string ColumnNameCurrency = "irpcv_rv_currency";
        private int _currency;
        [Column(ColumnNameCurrency)]
        public int Currency
        {
            get { return _currency; }
            set { _currency = value; MarkColumnModified(ColumnNameCurrency); }
        }
        
        public const string ColumnNameBaseIndexId = "irpcv_ix_index_id";
        private int _baseIndexId;
        [Column(ColumnNameBaseIndexId)]
        public int BaseIndexId
        {
            get { return _baseIndexId; }
            set { _baseIndexId = value; MarkColumnModified(ColumnNameBaseIndexId); }
        }
        
        public const string ColumnNameDiscountType = "irpcv_rv_discount_type";
        private int? _discountType;
        [Column(ColumnNameDiscountType)]
        public int? DiscountType
        {
            get { return _discountType; }
            set { _discountType = value; MarkColumnModified(ColumnNameDiscountType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_index_rate_pull_detail")]
    [PrimaryKey("irpd_index_rate_pull_detail_id")]
    [ExplicitColumns]
    public class IndexRatePullDetailTableModel : TableModel
    {
        
        public const string ColumnNameId = "irpd_index_rate_pull_detail_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameIndexRatePullId = "irpd_irp_index_rate_pull_id";
        private int _indexRatePullId;
        [Column(ColumnNameIndexRatePullId)]
        public int IndexRatePullId
        {
            get { return _indexRatePullId; }
            set { _indexRatePullId = value; MarkColumnModified(ColumnNameIndexRatePullId); }
        }
        
        public const string ColumnNameIndexId = "irpd_ix_index_id";
        private int _indexId;
        [Column(ColumnNameIndexId)]
        public int IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
        
        public const string ColumnNameRateId = "irpd_rb_rate_id";
        private int? _rateId;
        [Column(ColumnNameRateId)]
        public int? RateId
        {
            get { return _rateId; }
            set { _rateId = value; MarkColumnModified(ColumnNameRateId); }
        }
        
        public const string ColumnNameStatus = "irpd_rv_status";
        private int _status;
        [Column(ColumnNameStatus)]
        public int Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
        
        public const string ColumnNameAssignedContactId = "irpd_rc_contact_id_assigned";
        private int? _assignedContactId;
        [Column(ColumnNameAssignedContactId)]
        public int? AssignedContactId
        {
            get { return _assignedContactId; }
            set { _assignedContactId = value; MarkColumnModified(ColumnNameAssignedContactId); }
        }
        
        public const string ColumnNameNoteId = "irpd_nt_note_id";
        private int? _noteId;
        [Column(ColumnNameNoteId)]
        public int? NoteId
        {
            get { return _noteId; }
            set { _noteId = value; MarkColumnModified(ColumnNameNoteId); }
        }
        
        public const string ColumnNameCreatedDate = "irpd_create_dto";
        [ResultColumn(ColumnNameCreatedDate)]
        public DateTimeOffset? CreatedDate { get; set; }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_index_rate_pull_detail_cap_vol")]
    [PrimaryKey("irpdcv_index_rate_pull_detail_cap_vol_id")]
    [ExplicitColumns]
    public class IndexRatePullDetailCapVolTableModel : TableModel
    {
        
        public const string ColumnNameId = "irpdcv_index_rate_pull_detail_cap_vol_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameIndexRatePullDetailId = "irpdcv_irpd_index_rate_pull_detail_id";
        private int _indexRatePullDetailId;
        [Column(ColumnNameIndexRatePullDetailId)]
        public int IndexRatePullDetailId
        {
            get { return _indexRatePullDetailId; }
            set { _indexRatePullDetailId = value; MarkColumnModified(ColumnNameIndexRatePullDetailId); }
        }
        
        public const string ColumnNameShiftFactor = "irpdcv_shift_factor";
        private double? _shiftFactor;
        [Column(ColumnNameShiftFactor)]
        public double? ShiftFactor
        {
            get { return _shiftFactor; }
            set { _shiftFactor = value; MarkColumnModified(ColumnNameShiftFactor); }
        }
        
        public const string ColumnNameShiftedLogNormalVol = "irpdcv_shifted_lognormal_vol";
        private double? _shiftedLogNormalVol;
        [Column(ColumnNameShiftedLogNormalVol)]
        public double? ShiftedLogNormalVol
        {
            get { return _shiftedLogNormalVol; }
            set { _shiftedLogNormalVol = value; MarkColumnModified(ColumnNameShiftedLogNormalVol); }
        }
        
        public const string ColumnNameNormalVol = "irpdcv_normal_vol";
        private double? _normalVol;
        [Column(ColumnNameNormalVol)]
        public double? NormalVol
        {
            get { return _normalVol; }
            set { _normalVol = value; MarkColumnModified(ColumnNameNormalVol); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_index_rates_set")]
    [PrimaryKey("ir_index_rates_id")]
    [ExplicitColumns]
    public class IndexRateSetTableModel : TableModel
    {
        
        public const string ColumnNameId = "ir_index_rates_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameIndexId = "ir_ix_index_id";
        private int _indexId;
        [Column(ColumnNameIndexId)]
        public int IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
        
        public const string ColumnNameRateSetId = "ir_rt_rates_set_id";
        private int _rateSetId;
        [Column(ColumnNameRateSetId)]
        public int RateSetId
        {
            get { return _rateSetId; }
            set { _rateSetId = value; MarkColumnModified(ColumnNameRateSetId); }
        }
        
        public const string ColumnNameStartDate = "ir_start_dt";
        private DateTime _startDate;
        [Column(ColumnNameStartDate)]
        public DateTime StartDate
        {
            get { return _startDate; }
            set { _startDate = value; MarkColumnModified(ColumnNameStartDate); }
        }
        
        public const string ColumnNameEndDate = "ir_end_dt";
        private DateTime? _endDate;
        [Column(ColumnNameEndDate)]
        public DateTime? EndDate
        {
            get { return _endDate; }
            set { _endDate = value; MarkColumnModified(ColumnNameEndDate); }
        }
        
        public const string ColumnNameRateSetType = "ir_rv_type_id";
        private int? _rateSetType;
        [Column(ColumnNameRateSetType)]
        public int? RateSetType
        {
            get { return _rateSetType; }
            set { _rateSetType = value; MarkColumnModified(ColumnNameRateSetType); }
        }
        
        public const string ColumnNameModelFramework = "ir_rv_models_framework";
        private int? _modelFramework;
        [Column(ColumnNameModelFramework)]
        public int? ModelFramework
        {
            get { return _modelFramework; }
            set { _modelFramework = value; MarkColumnModified(ColumnNameModelFramework); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_integration_user")]
    [PrimaryKey("iu_integration_user_id")]
    [ExplicitColumns]
    public class EntityIntegrationSettingTableModel : TableModel
    {
        
        public const string ColumnNameId = "iu_integration_user_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameLogonName = "iu_logon_name";
        private string _logonName;
        [Column(ColumnNameLogonName)]
        public string LogonName
        {
            get { return _logonName; }
            set { _logonName = value; MarkColumnModified(ColumnNameLogonName); }
        }
        
        public const string ColumnNamePassword = "iu_encrypt_pswd";
        private string _password;
        [Column(ColumnNamePassword)]
        public string Password
        {
            get { return _password; }
            set { _password = value; MarkColumnModified(ColumnNamePassword); }
        }
        
        public const string ColumnNameVendorPlatformId = "iu_rvpl_vendor_platform_id";
        private int _vendorPlatformId;
        [Column(ColumnNameVendorPlatformId)]
        public int VendorPlatformId
        {
            get { return _vendorPlatformId; }
            set { _vendorPlatformId = value; MarkColumnModified(ColumnNameVendorPlatformId); }
        }
        
        public const string ColumnNameDefaultContactId = "iu_rc_contact_id_default_contact";
        private int _defaultContactId;
        [Column(ColumnNameDefaultContactId)]
        public int DefaultContactId
        {
            get { return _defaultContactId; }
            set { _defaultContactId = value; MarkColumnModified(ColumnNameDefaultContactId); }
        }
        
        public const string ColumnNameEntityId = "iu_re_entity_id_default_entity";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_invoice_detail")]
    [PrimaryKey("ind_invoice_id")]
    [ExplicitColumns]
    public class InvoiceTableModel : TableModel
    {
        
        public const string ColumnNameId = "ind_invoice_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "ind_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameGreatPlainsId = "ind_greatplains_id";
        private string _greatPlainsId;
        [Column(ColumnNameGreatPlainsId)]
        public string GreatPlainsId
        {
            get { return _greatPlainsId; }
            set { _greatPlainsId = value; MarkColumnModified(ColumnNameGreatPlainsId); }
        }
        
        public const string ColumnNameBaseFee = "ind_base_fee";
        private decimal? _baseFee;
        [Column(ColumnNameBaseFee)]
        public decimal? BaseFee
        {
            get { return _baseFee; }
            set { _baseFee = value; MarkColumnModified(ColumnNameBaseFee); }
        }
        
        public const string ColumnNameDiscountAmount = "ind_discount_amt";
        private decimal? _discountAmount;
        [Column(ColumnNameDiscountAmount)]
        public decimal? DiscountAmount
        {
            get { return _discountAmount; }
            set { _discountAmount = value; MarkColumnModified(ColumnNameDiscountAmount); }
        }
        
        public const string ColumnNameTaxRate = "ind_tax_rate";
        private decimal? _taxRate;
        [Column(ColumnNameTaxRate)]
        public decimal? TaxRate
        {
            get { return _taxRate; }
            set { _taxRate = value; MarkColumnModified(ColumnNameTaxRate); }
        }
        
        public const string ColumnNameTaxAmount = "ind_tax_amt";
        private decimal? _taxAmount;
        [Column(ColumnNameTaxAmount)]
        public decimal? TaxAmount
        {
            get { return _taxAmount; }
            set { _taxAmount = value; MarkColumnModified(ColumnNameTaxAmount); }
        }
        
        public const string ColumnNameNetFee = "ind_net_fee";
        private decimal? _netFee;
        [Column(ColumnNameNetFee)]
        public decimal? NetFee
        {
            get { return _netFee; }
            set { _netFee = value; MarkColumnModified(ColumnNameNetFee); }
        }
        
        public const string ColumnNameBankGrossFee = "ind_bank_gross_fee";
        private decimal? _bankGrossFee;
        [Column(ColumnNameBankGrossFee)]
        public decimal? BankGrossFee
        {
            get { return _bankGrossFee; }
            set { _bankGrossFee = value; MarkColumnModified(ColumnNameBankGrossFee); }
        }
        
        public const string ColumnNameInvoiceDate = "ind_invoice_dt";
        private DateTime? _invoiceDate;
        [Column(ColumnNameInvoiceDate)]
        public DateTime? InvoiceDate
        {
            get { return _invoiceDate; }
            set { _invoiceDate = value; MarkColumnModified(ColumnNameInvoiceDate); }
        }
        
        public const string ColumnNameInvoiceType = "ind_rv_invoice_type";
        private int? _invoiceType;
        [Column(ColumnNameInvoiceType)]
        public int? InvoiceType
        {
            get { return _invoiceType; }
            set { _invoiceType = value; MarkColumnModified(ColumnNameInvoiceType); }
        }
        
        public const string ColumnNameBillingOffice = "ind_rv_billing_office";
        private int? _billingOffice;
        [Column(ColumnNameBillingOffice)]
        public int? BillingOffice
        {
            get { return _billingOffice; }
            set { _billingOffice = value; MarkColumnModified(ColumnNameBillingOffice); }
        }
        
        public const string ColumnNameAllocationNote = "ind_allocation_note";
        private string _allocationNote;
        [Column(ColumnNameAllocationNote)]
        public string AllocationNote
        {
            get { return _allocationNote; }
            set { _allocationNote = value; MarkColumnModified(ColumnNameAllocationNote); }
        }
        
        public const string ColumnNameDescription = "ind_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameNote = "ind_note";
        private string _note;
        [Column(ColumnNameNote)]
        public string Note
        {
            get { return _note; }
            set { _note = value; MarkColumnModified(ColumnNameNote); }
        }
        
        public const string ColumnNameCurrencyId = "ind_rv_currency";
        private int? _currencyId;
        [Column(ColumnNameCurrencyId)]
        public int? CurrencyId
        {
            get { return _currencyId; }
            set { _currencyId = value; MarkColumnModified(ColumnNameCurrencyId); }
        }
        
        public const string ColumnNamePaidInFull = "ind_paid_in_full_bit";
        private bool? _paidInFull;
        [Column(ColumnNamePaidInFull)]
        public bool? PaidInFull
        {
            get { return _paidInFull; }
            set { _paidInFull = value; MarkColumnModified(ColumnNamePaidInFull); }
        }
        
        public const string ColumnNameBankGrossFeeOverwrite = "ind_bank_gross_fee_overwrite_bit";
        private bool _bankGrossFeeOverwrite;
        [Column(ColumnNameBankGrossFeeOverwrite)]
        public bool BankGrossFeeOverwrite
        {
            get { return _bankGrossFeeOverwrite; }
            set { _bankGrossFeeOverwrite = value; MarkColumnModified(ColumnNameBankGrossFeeOverwrite); }
        }
        
        public const string ColumnNameBillingEntityId = "ind_rv_billing_entity";
        private int? _billingEntityId;
        [Column(ColumnNameBillingEntityId)]
        public int? BillingEntityId
        {
            get { return _billingEntityId; }
            set { _billingEntityId = value; MarkColumnModified(ColumnNameBillingEntityId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_je_schedule_detail_link")]
    [PrimaryKey("jesl_je_schedule_detail_link_id")]
    [ExplicitColumns]
    public class JournalEntryScheduleDetailLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "jesl_je_schedule_detail_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameScheduleDetailId = "jesl_fl_ongoing_calc_id";
        private int _scheduleDetailId;
        [Column(ColumnNameScheduleDetailId)]
        public int ScheduleDetailId
        {
            get { return _scheduleDetailId; }
            set { _scheduleDetailId = value; MarkColumnModified(ColumnNameScheduleDetailId); }
        }
        
        public const string ColumnNameJournalEntryId = "jesl_je_journal_entry_id";
        private int _journalEntryId;
        [Column(ColumnNameJournalEntryId)]
        public int JournalEntryId
        {
            get { return _journalEntryId; }
            set { _journalEntryId = value; MarkColumnModified(ColumnNameJournalEntryId); }
        }
        
        public const string ColumnNameCreatedBy = "jesl_create_nm_id";
        [ResultColumn(ColumnNameCreatedBy)]
        public int? CreatedBy { get; set; }
        
        public const string ColumnNameCreateUtc = "jesl_create_utc";
        [ResultColumn(ColumnNameCreateUtc)]
        public DateTime? CreateUtc { get; set; }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_journal_entries")]
    [PrimaryKey("je_journal_entry_id")]
    [ExplicitColumns]
    public class JournalEntryTableModel : TableModel
    {
        
        public const string ColumnNameId = "je_journal_entry_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameAccountingTreatmentId = "je_ac_accounting_id";
        private int _accountingTreatmentId;
        [Column(ColumnNameAccountingTreatmentId)]
        public int AccountingTreatmentId
        {
            get { return _accountingTreatmentId; }
            set { _accountingTreatmentId = value; MarkColumnModified(ColumnNameAccountingTreatmentId); }
        }
        
        public const string ColumnNameTranQuoteId = "je_tq_tran_quote_id";
        private int _tranQuoteId;
        [Column(ColumnNameTranQuoteId)]
        public int TranQuoteId
        {
            get { return _tranQuoteId; }
            set { _tranQuoteId = value; MarkColumnModified(ColumnNameTranQuoteId); }
        }
        
        public const string ColumnNameGeneralLegerAccount = "je_rv_gen_ldgr_acct";
        private int? _generalLegerAccount;
        [Column(ColumnNameGeneralLegerAccount)]
        public int? GeneralLegerAccount
        {
            get { return _generalLegerAccount; }
            set { _generalLegerAccount = value; MarkColumnModified(ColumnNameGeneralLegerAccount); }
        }
        
        public const string ColumnNameEntryAmount = "je_entry_amt";
        private decimal? _entryAmount;
        [Column(ColumnNameEntryAmount)]
        public decimal? EntryAmount
        {
            get { return _entryAmount; }
            set { _entryAmount = value; MarkColumnModified(ColumnNameEntryAmount); }
        }
        
        public const string ColumnNameDebitCredit = "je_dd_debit_credit";
        private string _debitCredit;
        [Column(ColumnNameDebitCredit)]
        public string DebitCredit
        {
            get { return _debitCredit; }
            set { _debitCredit = value; MarkColumnModified(ColumnNameDebitCredit); }
        }
        
        public const string ColumnNameEntryType = "je_rv_entry_type";
        private int? _entryType;
        [Column(ColumnNameEntryType)]
        public int? EntryType
        {
            get { return _entryType; }
            set { _entryType = value; MarkColumnModified(ColumnNameEntryType); }
        }
        
        public const string ColumnNameEntryDate = "je_entry_dt";
        private DateTime? _entryDate;
        [Column(ColumnNameEntryDate)]
        public DateTime? EntryDate
        {
            get { return _entryDate; }
            set { _entryDate = value; MarkColumnModified(ColumnNameEntryDate); }
        }
        
        public const string ColumnNameEntryNote = "je_entry_note";
        private string _entryNote;
        [Column(ColumnNameEntryNote)]
        public string EntryNote
        {
            get { return _entryNote; }
            set { _entryNote = value; MarkColumnModified(ColumnNameEntryNote); }
        }
        
        public const string ColumnNameScenarioId = "je_sn_scenario_id";
        private int? _scenarioId;
        [Column(ColumnNameScenarioId)]
        public int? ScenarioId
        {
            get { return _scenarioId; }
            set { _scenarioId = value; MarkColumnModified(ColumnNameScenarioId); }
        }
        
        public const string ColumnNameShowJournalEntry = "je_dd_show_je_yn";
        private string _showJournalEntry;
        [Column(ColumnNameShowJournalEntry)]
        public string ShowJournalEntry
        {
            get { return _showJournalEntry; }
            set { _showJournalEntry = value; MarkColumnModified(ColumnNameShowJournalEntry); }
        }
        
        public const string ColumnNameEntryPairId = "je_entry_pair_id";
        private int? _entryPairId;
        [Column(ColumnNameEntryPairId)]
        public int? EntryPairId
        {
            get { return _entryPairId; }
            set { _entryPairId = value; MarkColumnModified(ColumnNameEntryPairId); }
        }
        
        public const string ColumnNameCreatedById = "je_create_nm_id";
        [ResultColumn(ColumnNameCreatedById)]
        public int? CreatedById { get; set; }
        
        public const string ColumnNameCreatedUtc = "je_create_utc";
        [ResultColumn(ColumnNameCreatedUtc)]
        public DateTime? CreatedUtc { get; set; }
        
        public const string ColumnNameErrorNotes = "je_error_notes";
        private string _errorNotes;
        [Column(ColumnNameErrorNotes)]
        public string ErrorNotes
        {
            get { return _errorNotes; }
            set { _errorNotes = value; MarkColumnModified(ColumnNameErrorNotes); }
        }
        
        public const string ColumnNameErrorCodeId = "je_error_code_id";
        private int? _errorCodeId;
        [Column(ColumnNameErrorCodeId)]
        public int? ErrorCodeId
        {
            get { return _errorCodeId; }
            set { _errorCodeId = value; MarkColumnModified(ColumnNameErrorCodeId); }
        }
        
        public const string ColumnNameAutoprocessed = "je_autoprocessed_bit";
        private bool? _autoprocessed;
        [Column(ColumnNameAutoprocessed)]
        public bool? Autoprocessed
        {
            get { return _autoprocessed; }
            set { _autoprocessed = value; MarkColumnModified(ColumnNameAutoprocessed); }
        }
        
        public const string ColumnNameG20LeakingEntry = "je_g20_leaking_entry_bit";
        private bool _g20LeakingEntry;
        [Column(ColumnNameG20LeakingEntry)]
        public bool G20LeakingEntry
        {
            get { return _g20LeakingEntry; }
            set { _g20LeakingEntry = value; MarkColumnModified(ColumnNameG20LeakingEntry); }
        }
        
        public const string ColumnNameSource = "je_rv_source";
        private int? _source;
        [Column(ColumnNameSource)]
        public int? Source
        {
            get { return _source; }
            set { _source = value; MarkColumnModified(ColumnNameSource); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_journal_entries_scheduled")]
    [PrimaryKey("jes_scheduled_entry_id")]
    [ExplicitColumns]
    public class ScheduledJournalEntryTableModel : TableModel
    {
        
        public const string ColumnNameId = "jes_scheduled_entry_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameAccountingId = "jes_ac_accounting_id";
        private int _accountingId;
        [Column(ColumnNameAccountingId)]
        public int AccountingId
        {
            get { return _accountingId; }
            set { _accountingId = value; MarkColumnModified(ColumnNameAccountingId); }
        }
        
        public const string ColumnNameDebitAccount = "jes_rv_debit_account";
        private int? _debitAccount;
        [Column(ColumnNameDebitAccount)]
        public int? DebitAccount
        {
            get { return _debitAccount; }
            set { _debitAccount = value; MarkColumnModified(ColumnNameDebitAccount); }
        }
        
        public const string ColumnNameCreditAccount = "jes_rv_credit_account";
        private int? _creditAccount;
        [Column(ColumnNameCreditAccount)]
        public int? CreditAccount
        {
            get { return _creditAccount; }
            set { _creditAccount = value; MarkColumnModified(ColumnNameCreditAccount); }
        }
        
        public const string ColumnNameEntryAmount = "jes_entry_amt";
        private decimal? _entryAmount;
        [Column(ColumnNameEntryAmount)]
        public decimal? EntryAmount
        {
            get { return _entryAmount; }
            set { _entryAmount = value; MarkColumnModified(ColumnNameEntryAmount); }
        }
        
        public const string ColumnNameEntryDate = "jes_entry_dt";
        private DateTime? _entryDate;
        [Column(ColumnNameEntryDate)]
        public DateTime? EntryDate
        {
            get { return _entryDate; }
            set { _entryDate = value; MarkColumnModified(ColumnNameEntryDate); }
        }
        
        public const string ColumnNameG20LeakingEntry = "jes_g20_leaking_entry_bit";
        private bool _g20LeakingEntry;
        [Column(ColumnNameG20LeakingEntry)]
        public bool G20LeakingEntry
        {
            get { return _g20LeakingEntry; }
            set { _g20LeakingEntry = value; MarkColumnModified(ColumnNameG20LeakingEntry); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_lmm_currency_calibration")]
    [PrimaryKey("lcc_lmm_currency_calibration_id")]
    [ExplicitColumns]
    public class LmmCurrencyCalibrationTableModel : TableModel
    {
        
        public const string ColumnNameId = "lcc_lmm_currency_calibration_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameCurrency = "lcc_rv_currency";
        private int _currency;
        [Column(ColumnNameCurrency)]
        public int Currency
        {
            get { return _currency; }
            set { _currency = value; MarkColumnModified(ColumnNameCurrency); }
        }
        
        public const string ColumnNameCalibrationDate = "lcc_calibration_date";
        private DateTime _calibrationDate;
        [Column(ColumnNameCalibrationDate)]
        public DateTime CalibrationDate
        {
            get { return _calibrationDate; }
            set { _calibrationDate = value; MarkColumnModified(ColumnNameCalibrationDate); }
        }
        
        public const string ColumnNameParameterA = "lcc_calibration_param_a";
        private decimal _parameterA;
        [Column(ColumnNameParameterA)]
        public decimal ParameterA
        {
            get { return _parameterA; }
            set { _parameterA = value; MarkColumnModified(ColumnNameParameterA); }
        }
        
        public const string ColumnNameParameterB = "lcc_calibration_param_b";
        private decimal _parameterB;
        [Column(ColumnNameParameterB)]
        public decimal ParameterB
        {
            get { return _parameterB; }
            set { _parameterB = value; MarkColumnModified(ColumnNameParameterB); }
        }
        
        public const string ColumnNameParameterC = "lcc_calibration_param_c";
        private decimal _parameterC;
        [Column(ColumnNameParameterC)]
        public decimal ParameterC
        {
            get { return _parameterC; }
            set { _parameterC = value; MarkColumnModified(ColumnNameParameterC); }
        }
        
        public const string ColumnNameParameterD = "lcc_calibration_param_d";
        private decimal _parameterD;
        [Column(ColumnNameParameterD)]
        public decimal ParameterD
        {
            get { return _parameterD; }
            set { _parameterD = value; MarkColumnModified(ColumnNameParameterD); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_lms")]
    [PrimaryKey("lms_lms_id")]
    [ExplicitColumns]
    public class LoanDetailTableModel : TableModel
    {
        
        public const string ColumnNameId = "lms_lms_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameQuoteDebtId = "lms_qd_quote_debt_id";
        private int _quoteDebtId;
        [Column(ColumnNameQuoteDebtId)]
        public int QuoteDebtId
        {
            get { return _quoteDebtId; }
            set { _quoteDebtId = value; MarkColumnModified(ColumnNameQuoteDebtId); }
        }
        
        public const string ColumnNameLoanId = "lms_loan_identification";
        private string _loanId;
        [Column(ColumnNameLoanId)]
        public string LoanId
        {
            get { return _loanId; }
            set { _loanId = value; MarkColumnModified(ColumnNameLoanId); }
        }
        
        public const string ColumnNameCorporateNumber = "lms_corporate_nbr";
        private string _corporateNumber;
        [Column(ColumnNameCorporateNumber)]
        public string CorporateNumber
        {
            get { return _corporateNumber; }
            set { _corporateNumber = value; MarkColumnModified(ColumnNameCorporateNumber); }
        }
        
        public const string ColumnNameSecured = "lms_secured_bit";
        private bool? _secured;
        [Column(ColumnNameSecured)]
        public bool? Secured
        {
            get { return _secured; }
            set { _secured = value; MarkColumnModified(ColumnNameSecured); }
        }
        
        public const string ColumnNameSecuritized = "lms_securitized_bit";
        private bool? _securitized;
        [Column(ColumnNameSecuritized)]
        public bool? Securitized
        {
            get { return _securitized; }
            set { _securitized = value; MarkColumnModified(ColumnNameSecuritized); }
        }
        
        public const string ColumnNameCollateralAsset = "lms_collateral_asset";
        private string _collateralAsset;
        [Column(ColumnNameCollateralAsset)]
        public string CollateralAsset
        {
            get { return _collateralAsset; }
            set { _collateralAsset = value; MarkColumnModified(ColumnNameCollateralAsset); }
        }
        
        public const string ColumnNameCrossCollateral = "lms_cross_collat_bit";
        private bool? _crossCollateral;
        [Column(ColumnNameCrossCollateral)]
        public bool? CrossCollateral
        {
            get { return _crossCollateral; }
            set { _crossCollateral = value; MarkColumnModified(ColumnNameCrossCollateral); }
        }
        
        public const string ColumnNameCrossCollateralInstrument = "lms_rv_cross_collat_instrmnt";
        private int? _crossCollateralInstrument;
        [Column(ColumnNameCrossCollateralInstrument)]
        public int? CrossCollateralInstrument
        {
            get { return _crossCollateralInstrument; }
            set { _crossCollateralInstrument = value; MarkColumnModified(ColumnNameCrossCollateralInstrument); }
        }
        
        public const string ColumnNameCrossDefault = "lms_cross_default_bit";
        private bool? _crossDefault;
        [Column(ColumnNameCrossDefault)]
        public bool? CrossDefault
        {
            get { return _crossDefault; }
            set { _crossDefault = value; MarkColumnModified(ColumnNameCrossDefault); }
        }
        
        public const string ColumnNameCrossDefaultInstrument = "lms_rv_cross_default_instrmnt";
        private int? _crossDefaultInstrument;
        [Column(ColumnNameCrossDefaultInstrument)]
        public int? CrossDefaultInstrument
        {
            get { return _crossDefaultInstrument; }
            set { _crossDefaultInstrument = value; MarkColumnModified(ColumnNameCrossDefaultInstrument); }
        }
        
        public const string ColumnNameGuaranteed = "lms_guarantee_bit";
        private bool? _guaranteed;
        [Column(ColumnNameGuaranteed)]
        public bool? Guaranteed
        {
            get { return _guaranteed; }
            set { _guaranteed = value; MarkColumnModified(ColumnNameGuaranteed); }
        }
        
        public const string ColumnNameGuaranteedPercent = "lms_guarant_prcnt";
        private decimal? _guaranteedPercent;
        [Column(ColumnNameGuaranteedPercent)]
        public decimal? GuaranteedPercent
        {
            get { return _guaranteedPercent; }
            set { _guaranteedPercent = value; MarkColumnModified(ColumnNameGuaranteedPercent); }
        }
        
        public const string ColumnNameGuaranteedType = "lms_rv_guarant_type";
        private int? _guaranteedType;
        [Column(ColumnNameGuaranteedType)]
        public int? GuaranteedType
        {
            get { return _guaranteedType; }
            set { _guaranteedType = value; MarkColumnModified(ColumnNameGuaranteedType); }
        }
        
        public const string ColumnNameGuaranteedObligation = "lms_guarant_obligation";
        private string _guaranteedObligation;
        [Column(ColumnNameGuaranteedObligation)]
        public string GuaranteedObligation
        {
            get { return _guaranteedObligation; }
            set { _guaranteedObligation = value; MarkColumnModified(ColumnNameGuaranteedObligation); }
        }
        
        public const string ColumnNameFootnote1 = "lms_report_footnote1";
        private string _footnote1;
        [Column(ColumnNameFootnote1)]
        public string Footnote1
        {
            get { return _footnote1; }
            set { _footnote1 = value; MarkColumnModified(ColumnNameFootnote1); }
        }
        
        public const string ColumnNameFootnote2 = "lms_report_footnote2";
        private string _footnote2;
        [Column(ColumnNameFootnote2)]
        public string Footnote2
        {
            get { return _footnote2; }
            set { _footnote2 = value; MarkColumnModified(ColumnNameFootnote2); }
        }
        
        public const string ColumnNameFootnote3 = "lms_report_footnote3";
        private string _footnote3;
        [Column(ColumnNameFootnote3)]
        public string Footnote3
        {
            get { return _footnote3; }
            set { _footnote3 = value; MarkColumnModified(ColumnNameFootnote3); }
        }
        
        public const string ColumnNameFootnote4 = "lms_report_footnote4";
        private string _footnote4;
        [Column(ColumnNameFootnote4)]
        public string Footnote4
        {
            get { return _footnote4; }
            set { _footnote4 = value; MarkColumnModified(ColumnNameFootnote4); }
        }
        
        public const string ColumnNamePurchasePrice = "lms_purchase_price";
        private decimal? _purchasePrice;
        [Column(ColumnNamePurchasePrice)]
        public decimal? PurchasePrice
        {
            get { return _purchasePrice; }
            set { _purchasePrice = value; MarkColumnModified(ColumnNamePurchasePrice); }
        }
        
        public const string ColumnNameBeneficiary = "lms_benefitiary";
        private string _beneficiary;
        [Column(ColumnNameBeneficiary)]
        public string Beneficiary
        {
            get { return _beneficiary; }
            set { _beneficiary = value; MarkColumnModified(ColumnNameBeneficiary); }
        }
        
        public const string ColumnNameFinanceStatmentCode = "lms_rv_finance_stmnt_code";
        private int? _financeStatmentCode;
        [Column(ColumnNameFinanceStatmentCode)]
        public int? FinanceStatmentCode
        {
            get { return _financeStatmentCode; }
            set { _financeStatmentCode = value; MarkColumnModified(ColumnNameFinanceStatmentCode); }
        }
        
        public const string ColumnNamePaymentMethod = "lms_rv_payment_method";
        private int? _paymentMethod;
        [Column(ColumnNamePaymentMethod)]
        public int? PaymentMethod
        {
            get { return _paymentMethod; }
            set { _paymentMethod = value; MarkColumnModified(ColumnNamePaymentMethod); }
        }
        
        public const string ColumnNamePaymentDescription = "lms_payment_desc";
        private string _paymentDescription;
        [Column(ColumnNamePaymentDescription)]
        public string PaymentDescription
        {
            get { return _paymentDescription; }
            set { _paymentDescription = value; MarkColumnModified(ColumnNamePaymentDescription); }
        }
        
        public const string ColumnNameGracePeriod = "lms_grace_period";
        private int? _gracePeriod;
        [Column(ColumnNameGracePeriod)]
        public int? GracePeriod
        {
            get { return _gracePeriod; }
            set { _gracePeriod = value; MarkColumnModified(ColumnNameGracePeriod); }
        }
        
        public const string ColumnNameConvertible = "lms_convertible_bit";
        private bool? _convertible;
        [Column(ColumnNameConvertible)]
        public bool? Convertible
        {
            get { return _convertible; }
            set { _convertible = value; MarkColumnModified(ColumnNameConvertible); }
        }
        
        public const string ColumnNameConversionFeature = "lms_rv_conversion_feature";
        private int? _conversionFeature;
        [Column(ColumnNameConversionFeature)]
        public int? ConversionFeature
        {
            get { return _conversionFeature; }
            set { _conversionFeature = value; MarkColumnModified(ColumnNameConversionFeature); }
        }
        
        public const string ColumnNameConversionDate = "lms_conversion_dt";
        private DateTime? _conversionDate;
        [Column(ColumnNameConversionDate)]
        public DateTime? ConversionDate
        {
            get { return _conversionDate; }
            set { _conversionDate = value; MarkColumnModified(ColumnNameConversionDate); }
        }
        
        public const string ColumnNameLoanType = "lms_rv_loan_type";
        private int? _loanType;
        [Column(ColumnNameLoanType)]
        public int? LoanType
        {
            get { return _loanType; }
            set { _loanType = value; MarkColumnModified(ColumnNameLoanType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_loan_servicer")]
    [PrimaryKey("ls_loan_servicer_id")]
    [ExplicitColumns]
    public class LoanServicerTableModel : TableModel
    {
        
        public const string ColumnNameId = "ls_loan_servicer_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameName = "ls_servicer_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_loan_servicer_fee_link")]
    [PrimaryKey("lsf_loan_servicer_fee_link_id")]
    [ExplicitColumns]
    public class LoanServicerFeeTableModel : TableModel
    {
        
        public const string ColumnNameId = "lsf_loan_servicer_fee_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameLoanServicerId = "lsf_ls_loan_servicer_id";
        private int _loanServicerId;
        [Column(ColumnNameLoanServicerId)]
        public int LoanServicerId
        {
            get { return _loanServicerId; }
            set { _loanServicerId = value; MarkColumnModified(ColumnNameLoanServicerId); }
        }
        
        public const string ColumnNameLoanServicerFeeValueId = "lsf_tv_tier_value_id";
        private int _loanServicerFeeValueId;
        [Column(ColumnNameLoanServicerFeeValueId)]
        public int LoanServicerFeeValueId
        {
            get { return _loanServicerFeeValueId; }
            set { _loanServicerFeeValueId = value; MarkColumnModified(ColumnNameLoanServicerFeeValueId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_loan_tranches")]
    [PrimaryKey("lt_tranche_id")]
    [ExplicitColumns]
    public class TrancheTableModel : TableModel
    {
        
        public const string ColumnNameId = "lt_tranche_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameScheduleDetailId = "lt_cm_component_id";
        private int _scheduleDetailId;
        [Column(ColumnNameScheduleDetailId)]
        public int ScheduleDetailId
        {
            get { return _scheduleDetailId; }
            set { _scheduleDetailId = value; MarkColumnModified(ColumnNameScheduleDetailId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_marriage_eligible_collateral")]
    [PrimaryKey("mec_marriage_eligible_collateral_id")]
    [ExplicitColumns]
    public class MarriageEligibleTableModel : TableModel
    {
        
        public const string ColumnNameId = "mec_marriage_eligible_collateral_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameMarriageId = "mec_mar_marriage_id";
        private int? _marriageId;
        [Column(ColumnNameMarriageId)]
        public int? MarriageId
        {
            get { return _marriageId; }
            set { _marriageId = value; MarkColumnModified(ColumnNameMarriageId); }
        }
        
        public const string ColumnNameIcadDescriptionId = "mec_icd_icad_description_id";
        private int _icadDescriptionId;
        [Column(ColumnNameIcadDescriptionId)]
        public int IcadDescriptionId
        {
            get { return _icadDescriptionId; }
            set { _icadDescriptionId = value; MarkColumnModified(ColumnNameIcadDescriptionId); }
        }
        
        public const string ColumnNameMaturityLowerBound = "mec_maturity_lower_bound";
        private decimal? _maturityLowerBound;
        [Column(ColumnNameMaturityLowerBound)]
        public decimal? MaturityLowerBound
        {
            get { return _maturityLowerBound; }
            set { _maturityLowerBound = value; MarkColumnModified(ColumnNameMaturityLowerBound); }
        }
        
        public const string ColumnNameMaturityUpperBound = "mec_maturity_upper_bound";
        private decimal? _maturityUpperBound;
        [Column(ColumnNameMaturityUpperBound)]
        public decimal? MaturityUpperBound
        {
            get { return _maturityUpperBound; }
            set { _maturityUpperBound = value; MarkColumnModified(ColumnNameMaturityUpperBound); }
        }
        
        public const string ColumnNameHaircutPercent = "mec_haircut_percent";
        private decimal _haircutPercent;
        [Column(ColumnNameHaircutPercent)]
        public decimal HaircutPercent
        {
            get { return _haircutPercent; }
            set { _haircutPercent = value; MarkColumnModified(ColumnNameHaircutPercent); }
        }
        
        public const string ColumnNameParty = "mec_rv_party";
        private int _party;
        [Column(ColumnNameParty)]
        public int Party
        {
            get { return _party; }
            set { _party = value; MarkColumnModified(ColumnNameParty); }
        }
        
        public const string ColumnNameMarriageEntityId = "mec_me_marriage_entity_id";
        private int? _marriageEntityId;
        [Column(ColumnNameMarriageEntityId)]
        public int? MarriageEntityId
        {
            get { return _marriageEntityId; }
            set { _marriageEntityId = value; MarkColumnModified(ColumnNameMarriageEntityId); }
        }
        
        public const string ColumnNameMarginType = "mec_rv_margin_type";
        private int? _marginType;
        [Column(ColumnNameMarginType)]
        public int? MarginType
        {
            get { return _marginType; }
            set { _marginType = value; MarkColumnModified(ColumnNameMarginType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_marriage_exchange_rate")]
    [PrimaryKey("maer_marriage_exchange_rate_id")]
    [ExplicitColumns]
    public class MarriageExchangeRateTableModel : TableModel
    {
        
        public const string ColumnNameId = "maer_marriage_exchange_rate_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameMarriageId = "maer_mar_marriage_id";
        private int _marriageId;
        [Column(ColumnNameMarriageId)]
        public int MarriageId
        {
            get { return _marriageId; }
            set { _marriageId = value; MarkColumnModified(ColumnNameMarriageId); }
        }
        
        public const string ColumnNameCurrency1 = "maer_rv_currency1";
        private int _currency1;
        [Column(ColumnNameCurrency1)]
        public int Currency1
        {
            get { return _currency1; }
            set { _currency1 = value; MarkColumnModified(ColumnNameCurrency1); }
        }
        
        public const string ColumnNameCurrency2 = "maer_rv_currency2";
        private int _currency2;
        [Column(ColumnNameCurrency2)]
        public int Currency2
        {
            get { return _currency2; }
            set { _currency2 = value; MarkColumnModified(ColumnNameCurrency2); }
        }
        
        public const string ColumnNameEffectiveDate = "maer_exchange_rate_dt";
        private DateTime _effectiveDate;
        [Column(ColumnNameEffectiveDate)]
        public DateTime EffectiveDate
        {
            get { return _effectiveDate; }
            set { _effectiveDate = value; MarkColumnModified(ColumnNameEffectiveDate); }
        }
        
        public const string ColumnNameSpotRate = "maer_exchange_rate";
        private decimal _spotRate;
        [Column(ColumnNameSpotRate)]
        public decimal SpotRate
        {
            get { return _spotRate; }
            set { _spotRate = value; MarkColumnModified(ColumnNameSpotRate); }
        }
        
        public const string ColumnNameStatus = "maer_rv_status";
        private int _status;
        [Column(ColumnNameStatus)]
        public int Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
        
        public const string ColumnNameNote = "maer_note";
        private string _note;
        [Column(ColumnNameNote)]
        public string Note
        {
            get { return _note; }
            set { _note = value; MarkColumnModified(ColumnNameNote); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_marriage_regulation")]
    [PrimaryKey("mrg_marriage_regulation_id")]
    [ExplicitColumns]
    public class MarriageRegulationTableModel : TableModel
    {
        
        public const string ColumnNameId = "mrg_marriage_regulation_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameMarriageId = "mrg_mar_marriage_id";
        private int _marriageId;
        [Column(ColumnNameMarriageId)]
        public int MarriageId
        {
            get { return _marriageId; }
            set { _marriageId = value; MarkColumnModified(ColumnNameMarriageId); }
        }
        
        public const string ColumnNameHasExternalBca = "mrg_has_external_bca";
        private bool _hasExternalBca;
        [Column(ColumnNameHasExternalBca)]
        public bool HasExternalBca
        {
            get { return _hasExternalBca; }
            set { _hasExternalBca = value; MarkColumnModified(ColumnNameHasExternalBca); }
        }
        
        public const string ColumnNameHasSwapTradingRelationship = "mrg_has_swap_trading_relationship";
        private bool _hasSwapTradingRelationship;
        [Column(ColumnNameHasSwapTradingRelationship)]
        public bool HasSwapTradingRelationship
        {
            get { return _hasSwapTradingRelationship; }
            set { _hasSwapTradingRelationship = value; MarkColumnModified(ColumnNameHasSwapTradingRelationship); }
        }
        
        public const string ColumnNameHasPortfolioReconciliation = "mrg_has_portfolio_reconciliation";
        private bool? _hasPortfolioReconciliation;
        [Column(ColumnNameHasPortfolioReconciliation)]
        public bool? HasPortfolioReconciliation
        {
            get { return _hasPortfolioReconciliation; }
            set { _hasPortfolioReconciliation = value; MarkColumnModified(ColumnNameHasPortfolioReconciliation); }
        }
        
        public const string ColumnNamePortfolioReconciliationProviderForDoddFrank = "mrg_portfolio_reconciliation_provider_for_dodd_frank";
        private bool? _portfolioReconciliationProviderForDoddFrank;
        [Column(ColumnNamePortfolioReconciliationProviderForDoddFrank)]
        public bool? PortfolioReconciliationProviderForDoddFrank
        {
            get { return _portfolioReconciliationProviderForDoddFrank; }
            set { _portfolioReconciliationProviderForDoddFrank = value; MarkColumnModified(ColumnNamePortfolioReconciliationProviderForDoddFrank); }
        }
        
        public const string ColumnNamePortfolioReconciliationProviderForEmir = "mrg_portfolio_reconciliation_provider_for_emir";
        private bool? _portfolioReconciliationProviderForEmir;
        [Column(ColumnNamePortfolioReconciliationProviderForEmir)]
        public bool? PortfolioReconciliationProviderForEmir
        {
            get { return _portfolioReconciliationProviderForEmir; }
            set { _portfolioReconciliationProviderForEmir = value; MarkColumnModified(ColumnNamePortfolioReconciliationProviderForEmir); }
        }
        
        public const string ColumnNameReportingProviderForDoddFrank = "mrg_reporting_provider_for_dodd_frank";
        private bool? _reportingProviderForDoddFrank;
        [Column(ColumnNameReportingProviderForDoddFrank)]
        public bool? ReportingProviderForDoddFrank
        {
            get { return _reportingProviderForDoddFrank; }
            set { _reportingProviderForDoddFrank = value; MarkColumnModified(ColumnNameReportingProviderForDoddFrank); }
        }
        
        public const string ColumnNameReportingProviderForEmir = "mrg_reporting_provider_for_emir";
        private bool? _reportingProviderForEmir;
        [Column(ColumnNameReportingProviderForEmir)]
        public bool? ReportingProviderForEmir
        {
            get { return _reportingProviderForEmir; }
            set { _reportingProviderForEmir = value; MarkColumnModified(ColumnNameReportingProviderForEmir); }
        }
        
        public const string ColumnNameDoddFrankAdherence = "mrg_rv_dodd_frank_adherence";
        private int? _doddFrankAdherence;
        [Column(ColumnNameDoddFrankAdherence)]
        public int? DoddFrankAdherence
        {
            get { return _doddFrankAdherence; }
            set { _doddFrankAdherence = value; MarkColumnModified(ColumnNameDoddFrankAdherence); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_marriage_regulation_jurisdiction")]
    [PrimaryKey("mrj_marriage_regulation_jurisdiction_id")]
    [ExplicitColumns]
    public class MarriageRegulationJurisdictionTableModel : TableModel
    {
        
        public const string ColumnNameId = "mrj_marriage_regulation_jurisdiction_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameMarriageId = "mrj_mar_marriage_id";
        private int _marriageId;
        [Column(ColumnNameMarriageId)]
        public int MarriageId
        {
            get { return _marriageId; }
            set { _marriageId = value; MarkColumnModified(ColumnNameMarriageId); }
        }
        
        public const string ColumnNameIsReconciliationProvider = "mrj_is_reconciliation_provider";
        private bool? _isReconciliationProvider;
        [Column(ColumnNameIsReconciliationProvider)]
        public bool? IsReconciliationProvider
        {
            get { return _isReconciliationProvider; }
            set { _isReconciliationProvider = value; MarkColumnModified(ColumnNameIsReconciliationProvider); }
        }
        
        public const string ColumnNameIsReportingProvider = "mrj_is_reporting_provider";
        private bool? _isReportingProvider;
        [Column(ColumnNameIsReportingProvider)]
        public bool? IsReportingProvider
        {
            get { return _isReportingProvider; }
            set { _isReportingProvider = value; MarkColumnModified(ColumnNameIsReportingProvider); }
        }
        
        public const string ColumnNameSponsorLeReportingType = "mrj_rvs_sponsor_le_reporting_type";
        private int _sponsorLeReportingType;
        [Column(ColumnNameSponsorLeReportingType)]
        public int SponsorLeReportingType
        {
            get { return _sponsorLeReportingType; }
            set { _sponsorLeReportingType = value; MarkColumnModified(ColumnNameSponsorLeReportingType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_marriage_reporting_period_links")]
    [PrimaryKey("mrpl_marriage_reporting_period_links_id")]
    [ExplicitColumns]
    public class MarriageReportingLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "mrpl_marriage_reporting_period_links_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameReportingPeriodId = "mrpl_frp_fas157_reporting_period_id";
        private int _reportingPeriodId;
        [Column(ColumnNameReportingPeriodId)]
        public int ReportingPeriodId
        {
            get { return _reportingPeriodId; }
            set { _reportingPeriodId = value; MarkColumnModified(ColumnNameReportingPeriodId); }
        }
        
        public const string ColumnNameMarriageId = "mrpl_mar_marriage_id";
        private int _marriageId;
        [Column(ColumnNameMarriageId)]
        public int MarriageId
        {
            get { return _marriageId; }
            set { _marriageId = value; MarkColumnModified(ColumnNameMarriageId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_marriage_transaction_raw")]
    [PrimaryKey("mtr_marriage_transaction_id")]
    [ExplicitColumns]
    public class MarriageTransactionLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "mtr_marriage_transaction_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameMarriageId = "mtr_mar_marriage_id";
        private int _marriageId;
        [Column(ColumnNameMarriageId)]
        public int MarriageId
        {
            get { return _marriageId; }
            set { _marriageId = value; MarkColumnModified(ColumnNameMarriageId); }
        }
        
        public const string ColumnNameTransactionId = "mtr_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameEffectiveDate = "mtr_effective_dt";
        private DateTime _effectiveDate;
        [Column(ColumnNameEffectiveDate)]
        public DateTime EffectiveDate
        {
            get { return _effectiveDate; }
            set { _effectiveDate = value; MarkColumnModified(ColumnNameEffectiveDate); }
        }
        
        public const string ColumnNameDeleted = "mtr_deleted_bit";
        private bool _deleted;
        [Column(ColumnNameDeleted)]
        public bool Deleted
        {
            get { return _deleted; }
            set { _deleted = value; MarkColumnModified(ColumnNameDeleted); }
        }
        
        public const string ColumnNameOldMarriageTransactionLinkId = "mtr_marriage_transaction_id_old";
        private int? _oldMarriageTransactionLinkId;
        [Column(ColumnNameOldMarriageTransactionLinkId)]
        public int? OldMarriageTransactionLinkId
        {
            get { return _oldMarriageTransactionLinkId; }
            set { _oldMarriageTransactionLinkId = value; MarkColumnModified(ColumnNameOldMarriageTransactionLinkId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_marriage_vendor_platform")]
    [PrimaryKey("marp_marriage_vendor_platform_id")]
    [ExplicitColumns]
    public class MarriageVendorPlatformTableModel : TableModel
    {
        
        public const string ColumnNameId = "marp_marriage_vendor_platform_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameMarriageId = "marp_mar_marriage_id";
        private int _marriageId;
        [Column(ColumnNameMarriageId)]
        public int MarriageId
        {
            get { return _marriageId; }
            set { _marriageId = value; MarkColumnModified(ColumnNameMarriageId); }
        }
        
        public const string ColumnNameVendorPlatformId = "marp_rvpl_vendor_platform_id";
        private int _vendorPlatformId;
        [Column(ColumnNameVendorPlatformId)]
        public int VendorPlatformId
        {
            get { return _vendorPlatformId; }
            set { _vendorPlatformId = value; MarkColumnModified(ColumnNameVendorPlatformId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_marriage_workflow_status")]
    [PrimaryKey("mws_marriage_workflow_status_id")]
    [ExplicitColumns]
    public class MarriageWorkflowStatusTableModel : TableModel
    {
        
        public const string ColumnNameId = "mws_marriage_workflow_status_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameReportingPeriodLinkId = "mws_mrpl_marriage_reporting_period_links_id";
        private int _reportingPeriodLinkId;
        [Column(ColumnNameReportingPeriodLinkId)]
        public int ReportingPeriodLinkId
        {
            get { return _reportingPeriodLinkId; }
            set { _reportingPeriodLinkId = value; MarkColumnModified(ColumnNameReportingPeriodLinkId); }
        }
        
        public const string ColumnNameStatus = "mws_rv_workflow_status";
        private int _status;
        [Column(ColumnNameStatus)]
        public int Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
        
        public const string ColumnNameComment = "mws_comment";
        private string _comment;
        [Column(ColumnNameComment)]
        public string Comment
        {
            get { return _comment; }
            set { _comment = value; MarkColumnModified(ColumnNameComment); }
        }
        
        public const string ColumnNameModifiedById = "mws_modify_by";
        private int _modifiedById;
        [Column(ColumnNameModifiedById)]
        public int ModifiedById
        {
            get { return _modifiedById; }
            set { _modifiedById = value; MarkColumnModified(ColumnNameModifiedById); }
        }
        
        public const string ColumnNameStatusDate = "mws_status_utc";
        private DateTime? _statusDate;
        [Column(ColumnNameStatusDate)]
        public DateTime? StatusDate
        {
            get { return _statusDate; }
            set { _statusDate = value; MarkColumnModified(ColumnNameStatusDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_merge_template")]
    [PrimaryKey("mt_merge_template_id")]
    [ExplicitColumns]
    public class HdmTemplateTableModel : TableModel
    {
        
        public const string ColumnNameId = "mt_merge_template_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameName = "mt_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
        
        public const string ColumnNameDescription = "mt_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameTemplateType = "mt_rv_merge_template_type";
        private int? _templateType;
        [Column(ColumnNameTemplateType)]
        public int? TemplateType
        {
            get { return _templateType; }
            set { _templateType = value; MarkColumnModified(ColumnNameTemplateType); }
        }
        
        public const string ColumnNameChathamOnly = "mt_chatham_only_bit";
        private bool _chathamOnly;
        [Column(ColumnNameChathamOnly)]
        public bool ChathamOnly
        {
            get { return _chathamOnly; }
            set { _chathamOnly = value; MarkColumnModified(ColumnNameChathamOnly); }
        }
        
        public const string ColumnNameDocumentSubtype = "mt_rvs_document_subtype";
        private int _documentSubtype;
        [Column(ColumnNameDocumentSubtype)]
        public int DocumentSubtype
        {
            get { return _documentSubtype; }
            set { _documentSubtype = value; MarkColumnModified(ColumnNameDocumentSubtype); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_merge_template_entity_link")]
    [PrimaryKey("mte_template_entity_id")]
    [ExplicitColumns]
    public class TemplateEntityLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "mte_template_entity_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "mte_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameTemplateId = "mte_mt_merge_template_id";
        private int _templateId;
        [Column(ColumnNameTemplateId)]
        public int TemplateId
        {
            get { return _templateId; }
            set { _templateId = value; MarkColumnModified(ColumnNameTemplateId); }
        }
        
        public const string ColumnNameEntityRelationshipType = "mte_rv_rel_type_id";
        private int _entityRelationshipType;
        [Column(ColumnNameEntityRelationshipType)]
        public int EntityRelationshipType
        {
            get { return _entityRelationshipType; }
            set { _entityRelationshipType = value; MarkColumnModified(ColumnNameEntityRelationshipType); }
        }
        
        public const string ColumnNameCreatedBy = "mte_create_dt";
        [ResultColumn(ColumnNameCreatedBy)]
        public DateTime? CreatedBy { get; set; }
        
        public const string ColumnNameCreatedDate = "mte_create_nm_id";
        [ResultColumn(ColumnNameCreatedDate)]
        public int? CreatedDate { get; set; }
        
        public const string ColumnNameModifiedDate = "mte_modify_dt";
        private DateTime? _modifiedDate;
        [Column(ColumnNameModifiedDate)]
        public DateTime? ModifiedDate
        {
            get { return _modifiedDate; }
            set { _modifiedDate = value; MarkColumnModified(ColumnNameModifiedDate); }
        }
        
        public const string ColumnNameModifiedBy = "mte_modify_nm_id";
        private int? _modifiedBy;
        [Column(ColumnNameModifiedBy)]
        public int? ModifiedBy
        {
            get { return _modifiedBy; }
            set { _modifiedBy = value; MarkColumnModified(ColumnNameModifiedBy); }
        }
        
        public const string ColumnNameDeleted = "mte_deleted_bit";
        private bool _deleted;
        [Column(ColumnNameDeleted)]
        public bool Deleted
        {
            get { return _deleted; }
            set { _deleted = value; MarkColumnModified(ColumnNameDeleted); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_merge_template_part")]
    [PrimaryKey("mtp_template_part_id")]
    [ExplicitColumns]
    public class TemplatePartTableModel : TableModel
    {
        
        public const string ColumnNameId = "mtp_template_part_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameName = "mtp_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
        
        public const string ColumnNameDescription = "mtp_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameTemplatePartType = "mtp_rv_template_part_type";
        private int _templatePartType;
        [Column(ColumnNameTemplatePartType)]
        public int TemplatePartType
        {
            get { return _templatePartType; }
            set { _templatePartType = value; MarkColumnModified(ColumnNameTemplatePartType); }
        }
        
        public const string ColumnNameDocumentId = "mtp_do_document_id";
        private int? _documentId;
        [Column(ColumnNameDocumentId)]
        public int? DocumentId
        {
            get { return _documentId; }
            set { _documentId = value; MarkColumnModified(ColumnNameDocumentId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_merge_template_part_link")]
    [PrimaryKey("mtl_merge_template_part_link_id")]
    [ExplicitColumns]
    public class TemplatePartLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "mtl_merge_template_part_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTemplateId = "mtl_mt_merge_template_id";
        private int _templateId;
        [Column(ColumnNameTemplateId)]
        public int TemplateId
        {
            get { return _templateId; }
            set { _templateId = value; MarkColumnModified(ColumnNameTemplateId); }
        }
        
        public const string ColumnNameTemplatePartId = "mtl_mtp_template_part_id";
        private int _templatePartId;
        [Column(ColumnNameTemplatePartId)]
        public int TemplatePartId
        {
            get { return _templatePartId; }
            set { _templatePartId = value; MarkColumnModified(ColumnNameTemplatePartId); }
        }
        
        public const string ColumnNameTemplatePartOrder = "mtl_order";
        private int? _templatePartOrder;
        [Column(ColumnNameTemplatePartOrder)]
        public int? TemplatePartOrder
        {
            get { return _templatePartOrder; }
            set { _templatePartOrder = value; MarkColumnModified(ColumnNameTemplatePartOrder); }
        }
        
        public const string ColumnNameIncludePageBreakBefore = "mtl_include_pg_break_before";
        private bool? _includePageBreakBefore;
        [Column(ColumnNameIncludePageBreakBefore)]
        public bool? IncludePageBreakBefore
        {
            get { return _includePageBreakBefore; }
            set { _includePageBreakBefore = value; MarkColumnModified(ColumnNameIncludePageBreakBefore); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_merge_template_product_link")]
    [PrimaryKey("mtprl_merge_template_product_link_id")]
    [ExplicitColumns]
    public class TemplateProductLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "mtprl_merge_template_product_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTemplateId = "mtprl_mt_merge_template_id";
        private int _templateId;
        [Column(ColumnNameTemplateId)]
        public int TemplateId
        {
            get { return _templateId; }
            set { _templateId = value; MarkColumnModified(ColumnNameTemplateId); }
        }
        
        public const string ColumnNameCreatedBy = "mtprl_create_nm_id";
        [ResultColumn(ColumnNameCreatedBy)]
        public int? CreatedBy { get; set; }
        
        public const string ColumnNameCreatedDate = "mtprl_create_dt";
        [ResultColumn(ColumnNameCreatedDate)]
        public DateTime? CreatedDate { get; set; }
        
        public const string ColumnNameModifiedBy = "mtprl_modify_nm_id";
        private int? _modifiedBy;
        [Column(ColumnNameModifiedBy)]
        public int? ModifiedBy
        {
            get { return _modifiedBy; }
            set { _modifiedBy = value; MarkColumnModified(ColumnNameModifiedBy); }
        }
        
        public const string ColumnNameModifiedDate = "mtprl_modify_dt";
        private DateTime? _modifiedDate;
        [Column(ColumnNameModifiedDate)]
        public DateTime? ModifiedDate
        {
            get { return _modifiedDate; }
            set { _modifiedDate = value; MarkColumnModified(ColumnNameModifiedDate); }
        }
        
        public const string ColumnNameProductType = "mtprl_rv_product";
        private int? _productType;
        [Column(ColumnNameProductType)]
        public int? ProductType
        {
            get { return _productType; }
            set { _productType = value; MarkColumnModified(ColumnNameProductType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_monitor_users")]
    [PrimaryKey("mu_user_visit_id")]
    [ExplicitColumns]
    public class MonitorUserTableModel : TableModel
    {
        
        public const string ColumnNameId = "mu_user_visit_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameUserId = "mu_us_user_id";
        private int? _userId;
        [Column(ColumnNameUserId)]
        public int? UserId
        {
            get { return _userId; }
            set { _userId = value; MarkColumnModified(ColumnNameUserId); }
        }
        
        public const string ColumnNameUserName = "mu_user_name";
        private string _userName;
        [Column(ColumnNameUserName)]
        public string UserName
        {
            get { return _userName; }
            set { _userName = value; MarkColumnModified(ColumnNameUserName); }
        }
        
        public const string ColumnNameSourceIpAddress = "mu_ipaddress";
        private string _sourceIpAddress;
        [Column(ColumnNameSourceIpAddress)]
        public string SourceIpAddress
        {
            get { return _sourceIpAddress; }
            set { _sourceIpAddress = value; MarkColumnModified(ColumnNameSourceIpAddress); }
        }
        
        public const string ColumnNameLogonDate = "mu_logon_datetime";
        private DateTime? _logonDate;
        [Column(ColumnNameLogonDate)]
        public DateTime? LogonDate
        {
            get { return _logonDate; }
            set { _logonDate = value; MarkColumnModified(ColumnNameLogonDate); }
        }
        
        public const string ColumnNameStatusCode = "mu_rv_login_status";
        private int? _statusCode;
        [Column(ColumnNameStatusCode)]
        public int? StatusCode
        {
            get { return _statusCode; }
            set { _statusCode = value; MarkColumnModified(ColumnNameStatusCode); }
        }
        
        public const string ColumnNameSystem = "mu_rv_website_accessed";
        private int? _system;
        [Column(ColumnNameSystem)]
        public int? System
        {
            get { return _system; }
            set { _system = value; MarkColumnModified(ColumnNameSystem); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_month_end_schedule_override")]
    [PrimaryKey("meso_month_end_schedule_override_id")]
    [ExplicitColumns]
    public class MonthEndScheduleOverrideTableModel : TableModel
    {
        
        public const string ColumnNameId = "meso_month_end_schedule_override_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "meso_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameScheduleDate = "meso_schedule_dt";
        private DateTime _scheduleDate;
        [Column(ColumnNameScheduleDate)]
        public DateTime ScheduleDate
        {
            get { return _scheduleDate; }
            set { _scheduleDate = value; MarkColumnModified(ColumnNameScheduleDate); }
        }
        
        public const string ColumnNameMonthOverriding = "meso_month_overriding";
        private int _monthOverriding;
        [Column(ColumnNameMonthOverriding)]
        public int MonthOverriding
        {
            get { return _monthOverriding; }
            set { _monthOverriding = value; MarkColumnModified(ColumnNameMonthOverriding); }
        }
        
        public const string ColumnNameYearOverriding = "meso_year_overriding";
        private int _yearOverriding;
        [Column(ColumnNameYearOverriding)]
        public int YearOverriding
        {
            get { return _yearOverriding; }
            set { _yearOverriding = value; MarkColumnModified(ColumnNameYearOverriding); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_month_end_schedule_params")]
    [PrimaryKey("mesp_month_end_schedule_params_id")]
    [ExplicitColumns]
    public class MonthEndParameterTableModel : TableModel
    {
        
        public const string ColumnNameId = "mesp_month_end_schedule_params_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "mesp_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameRollDay = "mesp_rv_roll_day";
        private int? _rollDay;
        [Column(ColumnNameRollDay)]
        public int? RollDay
        {
            get { return _rollDay; }
            set { _rollDay = value; MarkColumnModified(ColumnNameRollDay); }
        }
        
        public const string ColumnNameDayOfWeek = "mesp_rv_day_of_week";
        private int? _dayOfWeek;
        [Column(ColumnNameDayOfWeek)]
        public int? DayOfWeek
        {
            get { return _dayOfWeek; }
            set { _dayOfWeek = value; MarkColumnModified(ColumnNameDayOfWeek); }
        }
        
        public const string ColumnNameMonthEndFrequency = "mesp_rv_frequency";
        private int? _monthEndFrequency;
        [Column(ColumnNameMonthEndFrequency)]
        public int? MonthEndFrequency
        {
            get { return _monthEndFrequency; }
            set { _monthEndFrequency = value; MarkColumnModified(ColumnNameMonthEndFrequency); }
        }
        
        public const string ColumnNameMonthEndMonthlyPattern = "mesp_rv_montly_pattern";
        private int? _monthEndMonthlyPattern;
        [Column(ColumnNameMonthEndMonthlyPattern)]
        public int? MonthEndMonthlyPattern
        {
            get { return _monthEndMonthlyPattern; }
            set { _monthEndMonthlyPattern = value; MarkColumnModified(ColumnNameMonthEndMonthlyPattern); }
        }
        
        public const string ColumnNameOccourenceWeek = "mesp_occurence_week";
        private int? _occourenceWeek;
        [Column(ColumnNameOccourenceWeek)]
        public int? OccourenceWeek
        {
            get { return _occourenceWeek; }
            set { _occourenceWeek = value; MarkColumnModified(ColumnNameOccourenceWeek); }
        }
        
        public const string ColumnNameOverridePriority = "mesp_override_priority";
        private int _overridePriority;
        [Column(ColumnNameOverridePriority)]
        public int OverridePriority
        {
            get { return _overridePriority; }
            set { _overridePriority = value; MarkColumnModified(ColumnNameOverridePriority); }
        }
        
        public const string ColumnNameStartMonth = "mesp_start_month";
        private int _startMonth;
        [Column(ColumnNameStartMonth)]
        public int StartMonth
        {
            get { return _startMonth; }
            set { _startMonth = value; MarkColumnModified(ColumnNameStartMonth); }
        }
        
        public const string ColumnNameStartYear = "mesp_start_year";
        private int _startYear;
        [Column(ColumnNameStartYear)]
        public int StartYear
        {
            get { return _startYear; }
            set { _startYear = value; MarkColumnModified(ColumnNameStartYear); }
        }
        
        public const string ColumnNameEndMonth = "mesp_end_month";
        private int? _endMonth;
        [Column(ColumnNameEndMonth)]
        public int? EndMonth
        {
            get { return _endMonth; }
            set { _endMonth = value; MarkColumnModified(ColumnNameEndMonth); }
        }
        
        public const string ColumnNameEndYear = "mesp_end_year";
        private int? _endYear;
        [Column(ColumnNameEndYear)]
        public int? EndYear
        {
            get { return _endYear; }
            set { _endYear = value; MarkColumnModified(ColumnNameEndYear); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_option")]
    [PrimaryKey("op_option_id")]
    [ExplicitColumns]
    public class OptionTableModel : TableModel
    {
        
        public const string ColumnNameId = "op_option_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameProductDetailId = "op_pmd_product_detail_id";
        private int _productDetailId;
        [Column(ColumnNameProductDetailId)]
        public int ProductDetailId
        {
            get { return _productDetailId; }
            set { _productDetailId = value; MarkColumnModified(ColumnNameProductDetailId); }
        }
        
        public const string ColumnNameOptionPayoff = "op_rv_option_payoff";
        private int _optionPayoff;
        [Column(ColumnNameOptionPayoff)]
        public int OptionPayoff
        {
            get { return _optionPayoff; }
            set { _optionPayoff = value; MarkColumnModified(ColumnNameOptionPayoff); }
        }
        
        public const string ColumnNameOptionType = "op_rv_option_type";
        private int? _optionType;
        [Column(ColumnNameOptionType)]
        public int? OptionType
        {
            get { return _optionType; }
            set { _optionType = value; MarkColumnModified(ColumnNameOptionType); }
        }
        
        public const string ColumnNameNotificationDays = "op_notification_days";
        private int? _notificationDays;
        [Column(ColumnNameNotificationDays)]
        public int? NotificationDays
        {
            get { return _notificationDays; }
            set { _notificationDays = value; MarkColumnModified(ColumnNameNotificationDays); }
        }
        
        public const string ColumnNameExerciseStartDate = "op_exercise_start_dt";
        private DateTime? _exerciseStartDate;
        [Column(ColumnNameExerciseStartDate)]
        public DateTime? ExerciseStartDate
        {
            get { return _exerciseStartDate; }
            set { _exerciseStartDate = value; MarkColumnModified(ColumnNameExerciseStartDate); }
        }
        
        public const string ColumnNameExerciseEndDate = "op_exercise_end_dt";
        private DateTime? _exerciseEndDate;
        [Column(ColumnNameExerciseEndDate)]
        public DateTime? ExerciseEndDate
        {
            get { return _exerciseEndDate; }
            set { _exerciseEndDate = value; MarkColumnModified(ColumnNameExerciseEndDate); }
        }
        
        public const string ColumnNameExerciseFrequency = "op_rv_exercise_freq";
        private int? _exerciseFrequency;
        [Column(ColumnNameExerciseFrequency)]
        public int? ExerciseFrequency
        {
            get { return _exerciseFrequency; }
            set { _exerciseFrequency = value; MarkColumnModified(ColumnNameExerciseFrequency); }
        }
        
        public const string ColumnNameExerciseBusinessDayConvention = "op_rv_exercise_business_day_conv";
        private int? _exerciseBusinessDayConvention;
        [Column(ColumnNameExerciseBusinessDayConvention)]
        public int? ExerciseBusinessDayConvention
        {
            get { return _exerciseBusinessDayConvention; }
            set { _exerciseBusinessDayConvention = value; MarkColumnModified(ColumnNameExerciseBusinessDayConvention); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_option_exercise_schedule")]
    [PrimaryKey("oes_option_schedule_id")]
    [ExplicitColumns]
    public class OptionExerciseScheduleTableModel : TableModel
    {
        
        public const string ColumnNameId = "oes_option_schedule_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameOptionId = "oes_op_option_id";
        private int _optionId;
        [Column(ColumnNameOptionId)]
        public int OptionId
        {
            get { return _optionId; }
            set { _optionId = value; MarkColumnModified(ColumnNameOptionId); }
        }
        
        public const string ColumnNameExerciseAdjustedDate = "oes_exercise_adjusted_dt";
        private DateTime? _exerciseAdjustedDate;
        [Column(ColumnNameExerciseAdjustedDate)]
        public DateTime? ExerciseAdjustedDate
        {
            get { return _exerciseAdjustedDate; }
            set { _exerciseAdjustedDate = value; MarkColumnModified(ColumnNameExerciseAdjustedDate); }
        }
        
        public const string ColumnNameExerciseUnadjustedDate = "oes_exercise_unadjusted_dt";
        private DateTime? _exerciseUnadjustedDate;
        [Column(ColumnNameExerciseUnadjustedDate)]
        public DateTime? ExerciseUnadjustedDate
        {
            get { return _exerciseUnadjustedDate; }
            set { _exerciseUnadjustedDate = value; MarkColumnModified(ColumnNameExerciseUnadjustedDate); }
        }
        
        public const string ColumnNameSettlementAdjustedDate = "oes_settlement_adjusted_dt";
        private DateTime? _settlementAdjustedDate;
        [Column(ColumnNameSettlementAdjustedDate)]
        public DateTime? SettlementAdjustedDate
        {
            get { return _settlementAdjustedDate; }
            set { _settlementAdjustedDate = value; MarkColumnModified(ColumnNameSettlementAdjustedDate); }
        }
        
        public const string ColumnNameExercisePremium = "oes_exercise_premium";
        private decimal? _exercisePremium;
        [Column(ColumnNameExercisePremium)]
        public decimal? ExercisePremium
        {
            get { return _exercisePremium; }
            set { _exercisePremium = value; MarkColumnModified(ColumnNameExercisePremium); }
        }
        
        public const string ColumnNameNotificationDate = "oes_notification_dt";
        private DateTime? _notificationDate;
        [Column(ColumnNameNotificationDate)]
        public DateTime? NotificationDate
        {
            get { return _notificationDate; }
            set { _notificationDate = value; MarkColumnModified(ColumnNameNotificationDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_payment_notice")]
    [PrimaryKey("pn_payment_notice_id")]
    [ExplicitColumns]
    public class PaymentNoticeTableModel : TableModel
    {
        
        public const string ColumnNameId = "pn_payment_notice_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameBorrowerReportId = "pn_br_borrower_report_id";
        private int _borrowerReportId;
        [Column(ColumnNameBorrowerReportId)]
        public int BorrowerReportId
        {
            get { return _borrowerReportId; }
            set { _borrowerReportId = value; MarkColumnModified(ColumnNameBorrowerReportId); }
        }
        
        public const string ColumnNameScheduleDetailId = "pn_fl_ongoing_calc_id";
        private int? _scheduleDetailId;
        [Column(ColumnNameScheduleDetailId)]
        public int? ScheduleDetailId
        {
            get { return _scheduleDetailId; }
            set { _scheduleDetailId = value; MarkColumnModified(ColumnNameScheduleDetailId); }
        }
        
        public const string ColumnNamePayment = "pn_fl_net_amt";
        private decimal? _payment;
        [Column(ColumnNamePayment)]
        public decimal? Payment
        {
            get { return _payment; }
            set { _payment = value; MarkColumnModified(ColumnNamePayment); }
        }
        
        public const string ColumnNamePaymentDate = "pn_fl_payment_dt";
        private DateTime? _paymentDate;
        [Column(ColumnNamePaymentDate)]
        public DateTime? PaymentDate
        {
            get { return _paymentDate; }
            set { _paymentDate = value; MarkColumnModified(ColumnNamePaymentDate); }
        }
        
        public const string ColumnNameScheduleId = "pn_se_schedule_id";
        private int? _scheduleId;
        [Column(ColumnNameScheduleId)]
        public int? ScheduleId
        {
            get { return _scheduleId; }
            set { _scheduleId = value; MarkColumnModified(ColumnNameScheduleId); }
        }
        
        public const string ColumnNameRowVersion = "pn_rowversion";
        [ResultColumn(ColumnNameRowVersion)]
        public byte[] RowVersion { get; set; }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_permission_defn")]
    [PrimaryKey("pd_permission_id")]
    [ExplicitColumns]
    public class PermissionTableModel : TableModel
    {
        
        public const string ColumnNameId = "pd_permission_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameDescription = "pd_permission_desc";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameDefaultValue = "pd_value";
        private bool _defaultValue;
        [Column(ColumnNameDefaultValue)]
        public bool DefaultValue
        {
            get { return _defaultValue; }
            set { _defaultValue = value; MarkColumnModified(ColumnNameDefaultValue); }
        }
        
        public const string ColumnNameCompanyPreferenceDependency = "pd_rv_company_pref_dependency";
        private int? _companyPreferenceDependency;
        [Column(ColumnNameCompanyPreferenceDependency)]
        public int? CompanyPreferenceDependency
        {
            get { return _companyPreferenceDependency; }
            set { _companyPreferenceDependency = value; MarkColumnModified(ColumnNameCompanyPreferenceDependency); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_permission_user")]
    [PrimaryKey("pu_permission_user_id")]
    [ExplicitColumns]
    public class UserPermissionTableModel : TableModel
    {
        
        public const string ColumnNameId = "pu_permission_user_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameContactId = "pu_rc_contact_id";
        private int _contactId;
        [Column(ColumnNameContactId)]
        public int ContactId
        {
            get { return _contactId; }
            set { _contactId = value; MarkColumnModified(ColumnNameContactId); }
        }
        
        public const string ColumnNamePermissionId = "pu_pd_permission_id";
        private int _permissionId;
        [Column(ColumnNamePermissionId)]
        public int PermissionId
        {
            get { return _permissionId; }
            set { _permissionId = value; MarkColumnModified(ColumnNamePermissionId); }
        }
        
        public const string ColumnNameIsEnabled = "pu_value";
        private bool? _isEnabled;
        [Column(ColumnNameIsEnabled)]
        public bool? IsEnabled
        {
            get { return _isEnabled; }
            set { _isEnabled = value; MarkColumnModified(ColumnNameIsEnabled); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_position_reports")]
    [PrimaryKey("rpr_position_reports_id")]
    [ExplicitColumns]
    public class PositionReportTableModel : TableModel
    {
        
        public const string ColumnNameId = "rpr_position_reports_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameRegulationPositionTransactionLinkId = "rpr_rgpl_regulation_position_transaction_link_id";
        private int _regulationPositionTransactionLinkId;
        [Column(ColumnNameRegulationPositionTransactionLinkId)]
        public int RegulationPositionTransactionLinkId
        {
            get { return _regulationPositionTransactionLinkId; }
            set { _regulationPositionTransactionLinkId = value; MarkColumnModified(ColumnNameRegulationPositionTransactionLinkId); }
        }
        
        public const string ColumnNameReportStatus = "rpr_rv_report_status";
        private int _reportStatus;
        [Column(ColumnNameReportStatus)]
        public int ReportStatus
        {
            get { return _reportStatus; }
            set { _reportStatus = value; MarkColumnModified(ColumnNameReportStatus); }
        }
        
        public const string ColumnNameStatusDate = "rpr_status_date";
        private DateTime _statusDate;
        [Column(ColumnNameStatusDate)]
        public DateTime StatusDate
        {
            get { return _statusDate; }
            set { _statusDate = value; MarkColumnModified(ColumnNameStatusDate); }
        }
        
        public const string ColumnNameSendMethod = "rpr_rv_send_method";
        private int _sendMethod;
        [Column(ColumnNameSendMethod)]
        public int SendMethod
        {
            get { return _sendMethod; }
            set { _sendMethod = value; MarkColumnModified(ColumnNameSendMethod); }
        }
        
        public const string ColumnNameRepositoryIdentifier = "rpr_repository_identifier_long";
        private int? _repositoryIdentifier;
        [Column(ColumnNameRepositoryIdentifier)]
        public int? RepositoryIdentifier
        {
            get { return _repositoryIdentifier; }
            set { _repositoryIdentifier = value; MarkColumnModified(ColumnNameRepositoryIdentifier); }
        }
        
        public const string ColumnNameValuationDate = "rpr_valuation_date";
        private DateTime? _valuationDate;
        [Column(ColumnNameValuationDate)]
        public DateTime? ValuationDate
        {
            get { return _valuationDate; }
            set { _valuationDate = value; MarkColumnModified(ColumnNameValuationDate); }
        }
        
        public const string ColumnNameCreatedDate = "rpr_create_dto";
        [ResultColumn(ColumnNameCreatedDate)]
        public DateTimeOffset? CreatedDate { get; set; }
        
        public const string ColumnNameReportingJurisdiction = "rpr_rv_reporting_jurisdiction";
        private int _reportingJurisdiction;
        [Column(ColumnNameReportingJurisdiction)]
        public int ReportingJurisdiction
        {
            get { return _reportingJurisdiction; }
            set { _reportingJurisdiction = value; MarkColumnModified(ColumnNameReportingJurisdiction); }
        }
        
        public const string ColumnNameReportingEventType = "rpr_rvs_reporting_event_type";
        private int _reportingEventType;
        [Column(ColumnNameReportingEventType)]
        public int ReportingEventType
        {
            get { return _reportingEventType; }
            set { _reportingEventType = value; MarkColumnModified(ColumnNameReportingEventType); }
        }
        
        public const string ColumnNameDocumentId = "rpr_do_document_id";
        private int? _documentId;
        [Column(ColumnNameDocumentId)]
        public int? DocumentId
        {
            get { return _documentId; }
            set { _documentId = value; MarkColumnModified(ColumnNameDocumentId); }
        }
        
        public const string ColumnNameReportingReason = "rpr_rv_reporting_reason";
        private int _reportingReason;
        [Column(ColumnNameReportingReason)]
        public int ReportingReason
        {
            get { return _reportingReason; }
            set { _reportingReason = value; MarkColumnModified(ColumnNameReportingReason); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_product_debt_main")]
    [PrimaryKey("plm_product_debt_main_id")]
    [ExplicitColumns]
    public class ProductDebtTableModel : TableModel
    {
        
        public const string ColumnNameId = "plm_product_debt_main_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameProductMainId = "plm_prm_product_main_id";
        private int _productMainId;
        [Column(ColumnNameProductMainId)]
        public int ProductMainId
        {
            get { return _productMainId; }
            set { _productMainId = value; MarkColumnModified(ColumnNameProductMainId); }
        }
        
        public const string ColumnNameAnticipatedMaturityDate = "plm_anticipated_maturity_dt";
        private DateTime? _anticipatedMaturityDate;
        [Column(ColumnNameAnticipatedMaturityDate)]
        public DateTime? AnticipatedMaturityDate
        {
            get { return _anticipatedMaturityDate; }
            set { _anticipatedMaturityDate = value; MarkColumnModified(ColumnNameAnticipatedMaturityDate); }
        }
        
        public const string ColumnNameExtension = "plm_extension_bit";
        private bool? _extension;
        [Column(ColumnNameExtension)]
        public bool? Extension
        {
            get { return _extension; }
            set { _extension = value; MarkColumnModified(ColumnNameExtension); }
        }
        
        public const string ColumnNameExtensionDate = "plm_extension_dt";
        private DateTime? _extensionDate;
        [Column(ColumnNameExtensionDate)]
        public DateTime? ExtensionDate
        {
            get { return _extensionDate; }
            set { _extensionDate = value; MarkColumnModified(ColumnNameExtensionDate); }
        }
        
        public const string ColumnNameExtensionPeriod = "plm_extention_period";
        private int? _extensionPeriod;
        [Column(ColumnNameExtensionPeriod)]
        public int? ExtensionPeriod
        {
            get { return _extensionPeriod; }
            set { _extensionPeriod = value; MarkColumnModified(ColumnNameExtensionPeriod); }
        }
        
        public const string ColumnNameNumberOfExtensionOptions = "plm_nbr_of_extension_options";
        private int? _numberOfExtensionOptions;
        [Column(ColumnNameNumberOfExtensionOptions)]
        public int? NumberOfExtensionOptions
        {
            get { return _numberOfExtensionOptions; }
            set { _numberOfExtensionOptions = value; MarkColumnModified(ColumnNameNumberOfExtensionOptions); }
        }
        
        public const string ColumnNamePrepaymentLockoutTerm = "plm_prepayment_lockout_term";
        private int? _prepaymentLockoutTerm;
        [Column(ColumnNamePrepaymentLockoutTerm)]
        public int? PrepaymentLockoutTerm
        {
            get { return _prepaymentLockoutTerm; }
            set { _prepaymentLockoutTerm = value; MarkColumnModified(ColumnNamePrepaymentLockoutTerm); }
        }
        
        public const string ColumnNamePrepaymentDate = "plm_prepayment_dt";
        private DateTime? _prepaymentDate;
        [Column(ColumnNamePrepaymentDate)]
        public DateTime? PrepaymentDate
        {
            get { return _prepaymentDate; }
            set { _prepaymentDate = value; MarkColumnModified(ColumnNamePrepaymentDate); }
        }
        
        public const string ColumnNamePrepaymentNoPenaltyDate = "plm_prepayment_no_penalty_dt";
        private DateTime? _prepaymentNoPenaltyDate;
        [Column(ColumnNamePrepaymentNoPenaltyDate)]
        public DateTime? PrepaymentNoPenaltyDate
        {
            get { return _prepaymentNoPenaltyDate; }
            set { _prepaymentNoPenaltyDate = value; MarkColumnModified(ColumnNamePrepaymentNoPenaltyDate); }
        }
        
        public const string ColumnNameDefeasanceNoPenaltyDate = "plm_defeasance_no_penalty_dt";
        private DateTime? _defeasanceNoPenaltyDate;
        [Column(ColumnNameDefeasanceNoPenaltyDate)]
        public DateTime? DefeasanceNoPenaltyDate
        {
            get { return _defeasanceNoPenaltyDate; }
            set { _defeasanceNoPenaltyDate = value; MarkColumnModified(ColumnNameDefeasanceNoPenaltyDate); }
        }
        
        public const string ColumnNameDefeasanceOption = "plm_defeasance_option_bit";
        private bool? _defeasanceOption;
        [Column(ColumnNameDefeasanceOption)]
        public bool? DefeasanceOption
        {
            get { return _defeasanceOption; }
            set { _defeasanceOption = value; MarkColumnModified(ColumnNameDefeasanceOption); }
        }
        
        public const string ColumnNameDefeasanceLockoutTerm = "plm_defeasance_lockout_term";
        private int? _defeasanceLockoutTerm;
        [Column(ColumnNameDefeasanceLockoutTerm)]
        public int? DefeasanceLockoutTerm
        {
            get { return _defeasanceLockoutTerm; }
            set { _defeasanceLockoutTerm = value; MarkColumnModified(ColumnNameDefeasanceLockoutTerm); }
        }
        
        public const string ColumnNameDefeasanceDate = "plm_defeasance_dt";
        private DateTime? _defeasanceDate;
        [Column(ColumnNameDefeasanceDate)]
        public DateTime? DefeasanceDate
        {
            get { return _defeasanceDate; }
            set { _defeasanceDate = value; MarkColumnModified(ColumnNameDefeasanceDate); }
        }
        
        public const string ColumnNameOtherFeePrepaymentDescription = "plm_prepayment_other_fee_desc";
        private string _otherFeePrepaymentDescription;
        [Column(ColumnNameOtherFeePrepaymentDescription)]
        public string OtherFeePrepaymentDescription
        {
            get { return _otherFeePrepaymentDescription; }
            set { _otherFeePrepaymentDescription = value; MarkColumnModified(ColumnNameOtherFeePrepaymentDescription); }
        }
        
        public const string ColumnNameLatePenaltyType = "plm_rv_late_penalty_type";
        private int? _latePenaltyType;
        [Column(ColumnNameLatePenaltyType)]
        public int? LatePenaltyType
        {
            get { return _latePenaltyType; }
            set { _latePenaltyType = value; MarkColumnModified(ColumnNameLatePenaltyType); }
        }
        
        public const string ColumnNameTotalCommitment = "plm_total_debt_facility";
        private decimal? _totalCommitment;
        [Column(ColumnNameTotalCommitment)]
        public decimal? TotalCommitment
        {
            get { return _totalCommitment; }
            set { _totalCommitment = value; MarkColumnModified(ColumnNameTotalCommitment); }
        }
        
        public const string ColumnNameUnusedFacilityFee = "plm_unused_facility_fee";
        private decimal? _unusedFacilityFee;
        [Column(ColumnNameUnusedFacilityFee)]
        public decimal? UnusedFacilityFee
        {
            get { return _unusedFacilityFee; }
            set { _unusedFacilityFee = value; MarkColumnModified(ColumnNameUnusedFacilityFee); }
        }
        
        public const string ColumnNameOriginationCosts = "plm_orig_origination_costs";
        private decimal? _originationCosts;
        [Column(ColumnNameOriginationCosts)]
        public decimal? OriginationCosts
        {
            get { return _originationCosts; }
            set { _originationCosts = value; MarkColumnModified(ColumnNameOriginationCosts); }
        }
        
        public const string ColumnNameOriginalIssuanceCosts = "plm_orig_issuance_costs";
        private decimal? _originalIssuanceCosts;
        [Column(ColumnNameOriginalIssuanceCosts)]
        public decimal? OriginalIssuanceCosts
        {
            get { return _originalIssuanceCosts; }
            set { _originalIssuanceCosts = value; MarkColumnModified(ColumnNameOriginalIssuanceCosts); }
        }
        
        public const string ColumnNameOriginalPremiumDiscount = "plm_orig_premium_discount";
        private decimal? _originalPremiumDiscount;
        [Column(ColumnNameOriginalPremiumDiscount)]
        public decimal? OriginalPremiumDiscount
        {
            get { return _originalPremiumDiscount; }
            set { _originalPremiumDiscount = value; MarkColumnModified(ColumnNameOriginalPremiumDiscount); }
        }
        
        public const string ColumnNameOriginalPurchaseAccountAdustment = "plm_orig_purch_acct_adj";
        private decimal? _originalPurchaseAccountAdustment;
        [Column(ColumnNameOriginalPurchaseAccountAdustment)]
        public decimal? OriginalPurchaseAccountAdustment
        {
            get { return _originalPurchaseAccountAdustment; }
            set { _originalPurchaseAccountAdustment = value; MarkColumnModified(ColumnNameOriginalPurchaseAccountAdustment); }
        }
        
        public const string ColumnNameReportMaturityDate = "plm_report_maturity_dt";
        private DateTime? _reportMaturityDate;
        [Column(ColumnNameReportMaturityDate)]
        public DateTime? ReportMaturityDate
        {
            get { return _reportMaturityDate; }
            set { _reportMaturityDate = value; MarkColumnModified(ColumnNameReportMaturityDate); }
        }
        
        public const string ColumnNameRedemptionDate = "plm_instmnt_redemption_dt";
        private DateTime? _redemptionDate;
        [Column(ColumnNameRedemptionDate)]
        public DateTime? RedemptionDate
        {
            get { return _redemptionDate; }
            set { _redemptionDate = value; MarkColumnModified(ColumnNameRedemptionDate); }
        }
        
        public const string ColumnNameRedemptionPrice = "plm_instmnt_redemption_amt";
        private decimal? _redemptionPrice;
        [Column(ColumnNameRedemptionPrice)]
        public decimal? RedemptionPrice
        {
            get { return _redemptionPrice; }
            set { _redemptionPrice = value; MarkColumnModified(ColumnNameRedemptionPrice); }
        }
        
        public const string ColumnNameRedeemable = "plm_instmnt_redemption_bit";
        private bool? _redeemable;
        [Column(ColumnNameRedeemable)]
        public bool? Redeemable
        {
            get { return _redeemable; }
            set { _redeemable = value; MarkColumnModified(ColumnNameRedeemable); }
        }
        
        public const string ColumnNamePrepaymentOption = "plm_rv_prepayment_option";
        private int? _prepaymentOption;
        [Column(ColumnNamePrepaymentOption)]
        public int? PrepaymentOption
        {
            get { return _prepaymentOption; }
            set { _prepaymentOption = value; MarkColumnModified(ColumnNamePrepaymentOption); }
        }
        
        public const string ColumnNamePrepaymentNotificationDate = "plm_prepayment_notification_dt";
        private DateTime? _prepaymentNotificationDate;
        [Column(ColumnNamePrepaymentNotificationDate)]
        public DateTime? PrepaymentNotificationDate
        {
            get { return _prepaymentNotificationDate; }
            set { _prepaymentNotificationDate = value; MarkColumnModified(ColumnNamePrepaymentNotificationDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_product_detail")]
    [PrimaryKey("pmd_product_detail_id")]
    [ExplicitColumns]
    public class ProductDetailTableModel : TableModel
    {
        
        public const string ColumnNameId = "pmd_product_detail_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameProductMainId = "pmd_prm_product_main_id";
        private int _productMainId;
        [Column(ColumnNameProductMainId)]
        public int ProductMainId
        {
            get { return _productMainId; }
            set { _productMainId = value; MarkColumnModified(ColumnNameProductMainId); }
        }
        
        public const string ColumnNameMaxCreditExposure = "pmd_max_credit_exposure";
        private decimal? _maxCreditExposure;
        [Column(ColumnNameMaxCreditExposure)]
        public decimal? MaxCreditExposure
        {
            get { return _maxCreditExposure; }
            set { _maxCreditExposure = value; MarkColumnModified(ColumnNameMaxCreditExposure); }
        }
        
        public const string ColumnNameInitialRateSettingsDefault = "pmd_rv_initial_rate_settings_default";
        private int? _initialRateSettingsDefault;
        [Column(ColumnNameInitialRateSettingsDefault)]
        public int? InitialRateSettingsDefault
        {
            get { return _initialRateSettingsDefault; }
            set { _initialRateSettingsDefault = value; MarkColumnModified(ColumnNameInitialRateSettingsDefault); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_product_main")]
    [PrimaryKey("prm_product_main_id")]
    [ExplicitColumns]
    public class ProductMainTableModel : TableModel
    {
        
        public const string ColumnNameId = "prm_product_main_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTranQuoteId = "pm_tq_tran_quote_id";
        private int _tranQuoteId;
        [Column(ColumnNameTranQuoteId)]
        public int TranQuoteId
        {
            get { return _tranQuoteId; }
            set { _tranQuoteId = value; MarkColumnModified(ColumnNameTranQuoteId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_quick_indication_params")]
    [PrimaryKey("qi_quick_indication_params_id")]
    [ExplicitColumns]
    public class QuickIndicationParamTableModel : TableModel
    {
        
        public const string ColumnNameId = "qi_quick_indication_params_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameContactId = "qi_rc_contact_id";
        private int _contactId;
        [Column(ColumnNameContactId)]
        public int ContactId
        {
            get { return _contactId; }
            set { _contactId = value; MarkColumnModified(ColumnNameContactId); }
        }
        
        public const string ColumnNameProduct = "qi_rv_product_type";
        private int _product;
        [Column(ColumnNameProduct)]
        public int Product
        {
            get { return _product; }
            set { _product = value; MarkColumnModified(ColumnNameProduct); }
        }
        
        public const string ColumnNameLoanAmount = "qi_loan_amount";
        private decimal _loanAmount;
        [Column(ColumnNameLoanAmount)]
        public decimal LoanAmount
        {
            get { return _loanAmount; }
            set { _loanAmount = value; MarkColumnModified(ColumnNameLoanAmount); }
        }
        
        public const string ColumnNameTermInYears = "qi_term_years";
        private int _termInYears;
        [Column(ColumnNameTermInYears)]
        public int TermInYears
        {
            get { return _termInYears; }
            set { _termInYears = value; MarkColumnModified(ColumnNameTermInYears); }
        }
        
        public const string ColumnNameAmortizationTermInYears = "qi_amortization_term_years";
        private int _amortizationTermInYears;
        [Column(ColumnNameAmortizationTermInYears)]
        public int AmortizationTermInYears
        {
            get { return _amortizationTermInYears; }
            set { _amortizationTermInYears = value; MarkColumnModified(ColumnNameAmortizationTermInYears); }
        }
        
        public const string ColumnNameCreditSpread = "qi_credit_spread";
        private decimal _creditSpread;
        [Column(ColumnNameCreditSpread)]
        public decimal CreditSpread
        {
            get { return _creditSpread; }
            set { _creditSpread = value; MarkColumnModified(ColumnNameCreditSpread); }
        }
        
        public const string ColumnNameProfit = "qi_profit";
        private decimal _profit;
        [Column(ColumnNameProfit)]
        public decimal Profit
        {
            get { return _profit; }
            set { _profit = value; MarkColumnModified(ColumnNameProfit); }
        }
        
        public const string ColumnNameIncludeFees = "qi_include_fees";
        private bool _includeFees;
        [Column(ColumnNameIncludeFees)]
        public bool IncludeFees
        {
            get { return _includeFees; }
            set { _includeFees = value; MarkColumnModified(ColumnNameIncludeFees); }
        }
        
        public const string ColumnNameLastValueDate = "qi_last_value_timestamp";
        private DateTime _lastValueDate;
        [Column(ColumnNameLastValueDate)]
        public DateTime LastValueDate
        {
            get { return _lastValueDate; }
            set { _lastValueDate = value; MarkColumnModified(ColumnNameLastValueDate); }
        }
        
        public const string ColumnNameNickname = "qi_nickname";
        private string _nickname;
        [Column(ColumnNameNickname)]
        public string Nickname
        {
            get { return _nickname; }
            set { _nickname = value; MarkColumnModified(ColumnNameNickname); }
        }
        
        public const string ColumnNameMonthsFromToday = "qi_months_from_today";
        private int _monthsFromToday;
        [Column(ColumnNameMonthsFromToday)]
        public int MonthsFromToday
        {
            get { return _monthsFromToday; }
            set { _monthsFromToday = value; MarkColumnModified(ColumnNameMonthsFromToday); }
        }
        
        public const string ColumnNameEntityId = "qi_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_quote_debt")]
    [PrimaryKey("qd_quote_debt_id")]
    [ExplicitColumns]
    public class QuoteDebtTableModel : TableModel
    {
        
        public const string ColumnNameId = "qd_quote_debt_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTranQuoteId = "qd_tq_tran_quote_id";
        private int _tranQuoteId;
        [Column(ColumnNameTranQuoteId)]
        public int TranQuoteId
        {
            get { return _tranQuoteId; }
            set { _tranQuoteId = value; MarkColumnModified(ColumnNameTranQuoteId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_quote_udf_field")]
    [PrimaryKey("uqc_quote_udf_field_id")]
    [ExplicitColumns]
    public class UserDefinedFieldTableModel : TableModel
    {
        
        public const string ColumnNameId = "uqc_quote_udf_field_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionQuoteId = "uqc_tq_tran_quote_id";
        private int _transactionQuoteId;
        [Column(ColumnNameTransactionQuoteId)]
        public int TransactionQuoteId
        {
            get { return _transactionQuoteId; }
            set { _transactionQuoteId = value; MarkColumnModified(ColumnNameTransactionQuoteId); }
        }
        
        public const string ColumnNameField1 = "uqc_field1";
        private string _field1;
        [Column(ColumnNameField1)]
        public string Field1
        {
            get { return _field1; }
            set { _field1 = value; MarkColumnModified(ColumnNameField1); }
        }
        
        public const string ColumnNameField2 = "uqc_field2";
        private string _field2;
        [Column(ColumnNameField2)]
        public string Field2
        {
            get { return _field2; }
            set { _field2 = value; MarkColumnModified(ColumnNameField2); }
        }
        
        public const string ColumnNameField3 = "uqc_field3";
        private string _field3;
        [Column(ColumnNameField3)]
        public string Field3
        {
            get { return _field3; }
            set { _field3 = value; MarkColumnModified(ColumnNameField3); }
        }
        
        public const string ColumnNameField4 = "uqc_field4";
        private string _field4;
        [Column(ColumnNameField4)]
        public string Field4
        {
            get { return _field4; }
            set { _field4 = value; MarkColumnModified(ColumnNameField4); }
        }
        
        public const string ColumnNameField5 = "uqc_field5";
        private string _field5;
        [Column(ColumnNameField5)]
        public string Field5
        {
            get { return _field5; }
            set { _field5 = value; MarkColumnModified(ColumnNameField5); }
        }
        
        public const string ColumnNameField6 = "uqc_field6";
        private string _field6;
        [Column(ColumnNameField6)]
        public string Field6
        {
            get { return _field6; }
            set { _field6 = value; MarkColumnModified(ColumnNameField6); }
        }
        
        public const string ColumnNameField7 = "uqc_field7";
        private string _field7;
        [Column(ColumnNameField7)]
        public string Field7
        {
            get { return _field7; }
            set { _field7 = value; MarkColumnModified(ColumnNameField7); }
        }
        
        public const string ColumnNameField8 = "uqc_field8";
        private string _field8;
        [Column(ColumnNameField8)]
        public string Field8
        {
            get { return _field8; }
            set { _field8 = value; MarkColumnModified(ColumnNameField8); }
        }
        
        public const string ColumnNameField9 = "uqc_field9";
        private string _field9;
        [Column(ColumnNameField9)]
        public string Field9
        {
            get { return _field9; }
            set { _field9 = value; MarkColumnModified(ColumnNameField9); }
        }
        
        public const string ColumnNameField10 = "uqc_field10";
        private string _field10;
        [Column(ColumnNameField10)]
        public string Field10
        {
            get { return _field10; }
            set { _field10 = value; MarkColumnModified(ColumnNameField10); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_quote_udf_field_link")]
    [PrimaryKey("ufn_quote_udf_field_link_id")]
    [ExplicitColumns]
    public class EntityCustomizableColumnLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "ufn_quote_udf_field_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "ufn_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameCustomizableColumnName = "ufn_field";
        private string _customizableColumnName;
        [Column(ColumnNameCustomizableColumnName)]
        public string CustomizableColumnName
        {
            get { return _customizableColumnName; }
            set { _customizableColumnName = value; MarkColumnModified(ColumnNameCustomizableColumnName); }
        }
        
        public const string ColumnNameOverriddenColumnDisplayName = "ufn_field_name";
        private string _overriddenColumnDisplayName;
        [Column(ColumnNameOverriddenColumnDisplayName)]
        public string OverriddenColumnDisplayName
        {
            get { return _overriddenColumnDisplayName; }
            set { _overriddenColumnDisplayName = value; MarkColumnModified(ColumnNameOverriddenColumnDisplayName); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_rates_set")]
    [PrimaryKey("rt_rates_set_id")]
    [ExplicitColumns]
    public class RateSetTableModel : TableModel
    {
        
        public const string ColumnNameId = "rt_rates_set_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameDescription = "rt_rates_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameType = "rt_rv_type_id";
        private int? _type;
        [Column(ColumnNameType)]
        public int? Type
        {
            get { return _type; }
            set { _type = value; MarkColumnModified(ColumnNameType); }
        }
        
        public const string ColumnNameStatus = "rt_status";
        private string _status;
        [Column(ColumnNameStatus)]
        public string Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
        
        public const string ColumnNameFuturesCount = "rt_futures_count";
        private int? _futuresCount;
        [Column(ColumnNameFuturesCount)]
        public int? FuturesCount
        {
            get { return _futuresCount; }
            set { _futuresCount = value; MarkColumnModified(ColumnNameFuturesCount); }
        }
        
        public const string ColumnNameShortsCount = "rt_shorts_count";
        private int? _shortsCount;
        [Column(ColumnNameShortsCount)]
        public int? ShortsCount
        {
            get { return _shortsCount; }
            set { _shortsCount = value; MarkColumnModified(ColumnNameShortsCount); }
        }
        
        public const string ColumnNameBootstrappingType = "rt_rv_bootstrapping_type";
        private int? _bootstrappingType;
        [Column(ColumnNameBootstrappingType)]
        public int? BootstrappingType
        {
            get { return _bootstrappingType; }
            set { _bootstrappingType = value; MarkColumnModified(ColumnNameBootstrappingType); }
        }
        
        public const string ColumnNameBenchmarkIndexId = "rt_benchmark_ix_index_id";
        private int? _benchmarkIndexId;
        [Column(ColumnNameBenchmarkIndexId)]
        public int? BenchmarkIndexId
        {
            get { return _benchmarkIndexId; }
            set { _benchmarkIndexId = value; MarkColumnModified(ColumnNameBenchmarkIndexId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_rates_set_detail")]
    [PrimaryKey("sd_setdetail_id")]
    [ExplicitColumns]
    public class RateSetDetailTableModel : TableModel
    {
        
        public const string ColumnNameId = "sd_setdetail_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameRateSetId = "sd_rt_rates_set_id";
        private int _rateSetId;
        [Column(ColumnNameRateSetId)]
        public int RateSetId
        {
            get { return _rateSetId; }
            set { _rateSetId = value; MarkColumnModified(ColumnNameRateSetId); }
        }
        
        public const string ColumnNameIndexId = "sd_ix_index_id";
        private int _indexId;
        [Column(ColumnNameIndexId)]
        public int IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_regulation_position")]
    [PrimaryKey("rgp_regulation_position_id")]
    [ExplicitColumns]
    public class RegulationPositionTableModel : TableModel
    {
        
        public const string ColumnNameId = "rgp_regulation_position_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameIdentifier = "rgp_identifier";
        private string _identifier;
        [Column(ColumnNameIdentifier)]
        public string Identifier
        {
            get { return _identifier; }
            set { _identifier = value; MarkColumnModified(ColumnNameIdentifier); }
        }
        
        public const string ColumnNameIdentifierType = "rgp_rv_transaction_identifier_type";
        private int? _identifierType;
        [Column(ColumnNameIdentifierType)]
        public int? IdentifierType
        {
            get { return _identifierType; }
            set { _identifierType = value; MarkColumnModified(ColumnNameIdentifierType); }
        }
        
        public const string ColumnNamePrefix = "rgp_prefix";
        private string _prefix;
        [Column(ColumnNamePrefix)]
        public string Prefix
        {
            get { return _prefix; }
            set { _prefix = value; MarkColumnModified(ColumnNamePrefix); }
        }
        
        public const string ColumnNameStatus = "rgp_rv_status";
        private int? _status;
        [Column(ColumnNameStatus)]
        public int? Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
        
        public const string ColumnNameCreatedDate = "rgp_create_dto";
        [ResultColumn(ColumnNameCreatedDate)]
        public DateTimeOffset? CreatedDate { get; set; }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_regulation_position_transaction_link")]
    [PrimaryKey("rgpl_regulation_position_transaction_link_id")]
    [ExplicitColumns]
    public class RegulationPositionTransactionTableModel : TableModel
    {
        
        public const string ColumnNameId = "rgpl_regulation_position_transaction_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNamePositionId = "rgpl_rgp_regulation_position_id";
        private int _positionId;
        [Column(ColumnNamePositionId)]
        public int PositionId
        {
            get { return _positionId; }
            set { _positionId = value; MarkColumnModified(ColumnNamePositionId); }
        }
        
        public const string ColumnNameTransactionId = "rgpl_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameLinkReason = "rgpl_rv_link_reason";
        private int? _linkReason;
        [Column(ColumnNameLinkReason)]
        public int? LinkReason
        {
            get { return _linkReason; }
            set { _linkReason = value; MarkColumnModified(ColumnNameLinkReason); }
        }
        
        public const string ColumnNameLinkType = "rgpl_rv_link_type";
        private int? _linkType;
        [Column(ColumnNameLinkType)]
        public int? LinkType
        {
            get { return _linkType; }
            set { _linkType = value; MarkColumnModified(ColumnNameLinkType); }
        }
        
        public const string ColumnNameCreatedDate = "rgpl_create_dto";
        [ResultColumn(ColumnNameCreatedDate)]
        public DateTimeOffset? CreatedDate { get; set; }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_regulation_report")]
    [PrimaryKey("rgr_regulation_report_id")]
    [ExplicitColumns]
    public class RegulatoryReportTableModel : TableModel
    {
        
        public const string ColumnNameId = "rgr_regulation_report_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameReportFileType = "rgr_rv_report_file_type";
        private int? _reportFileType;
        [Column(ColumnNameReportFileType)]
        public int? ReportFileType
        {
            get { return _reportFileType; }
            set { _reportFileType = value; MarkColumnModified(ColumnNameReportFileType); }
        }
        
        public const string ColumnNameSendMethod = "rgr_rv_send_method";
        private int? _sendMethod;
        [Column(ColumnNameSendMethod)]
        public int? SendMethod
        {
            get { return _sendMethod; }
            set { _sendMethod = value; MarkColumnModified(ColumnNameSendMethod); }
        }
        
        public const string ColumnNameComponentId = "rgr_cm_component_id";
        private int? _componentId;
        [Column(ColumnNameComponentId)]
        public int? ComponentId
        {
            get { return _componentId; }
            set { _componentId = value; MarkColumnModified(ColumnNameComponentId); }
        }
        
        public const string ColumnNameDocumentId = "rgr_do_document_id";
        private int? _documentId;
        [Column(ColumnNameDocumentId)]
        public int? DocumentId
        {
            get { return _documentId; }
            set { _documentId = value; MarkColumnModified(ColumnNameDocumentId); }
        }
        
        public const string ColumnNameUniqueReportIdentifier = "rgr_unique_report_identifier";
        private long? _uniqueReportIdentifier;
        [Column(ColumnNameUniqueReportIdentifier)]
        public long? UniqueReportIdentifier
        {
            get { return _uniqueReportIdentifier; }
            set { _uniqueReportIdentifier = value; MarkColumnModified(ColumnNameUniqueReportIdentifier); }
        }
        
        public const string ColumnNameStatus = "rgr_rv_status";
        private int? _status;
        [Column(ColumnNameStatus)]
        public int? Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
        
        public const string ColumnNameAuthorizedByContactId = "rgr_authorized_by_rc_contact_id";
        private int? _authorizedByContactId;
        [Column(ColumnNameAuthorizedByContactId)]
        public int? AuthorizedByContactId
        {
            get { return _authorizedByContactId; }
            set { _authorizedByContactId = value; MarkColumnModified(ColumnNameAuthorizedByContactId); }
        }
        
        public const string ColumnNameAuthorizationDate = "rgr_authorization_dt";
        private DateTime? _authorizationDate;
        [Column(ColumnNameAuthorizationDate)]
        public DateTime? AuthorizationDate
        {
            get { return _authorizationDate; }
            set { _authorizationDate = value; MarkColumnModified(ColumnNameAuthorizationDate); }
        }
        
        public const string ColumnNameStatusDate = "rgr_status_dt";
        private DateTime? _statusDate;
        [Column(ColumnNameStatusDate)]
        public DateTime? StatusDate
        {
            get { return _statusDate; }
            set { _statusDate = value; MarkColumnModified(ColumnNameStatusDate); }
        }
        
        public const string ColumnNameDailyTransactionHistoryId = "rgr_dh_daily_trans_hist_id";
        private int? _dailyTransactionHistoryId;
        [Column(ColumnNameDailyTransactionHistoryId)]
        public int? DailyTransactionHistoryId
        {
            get { return _dailyTransactionHistoryId; }
            set { _dailyTransactionHistoryId = value; MarkColumnModified(ColumnNameDailyTransactionHistoryId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_regulation_report_link")]
    [PrimaryKey("rgcl_regulation_report_link_id")]
    [ExplicitColumns]
    public class RegulationReportLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "rgcl_regulation_report_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameOriginalReportId = "rgcl_orginal_rgr_regulation_report_id";
        private int _originalReportId;
        [Column(ColumnNameOriginalReportId)]
        public int OriginalReportId
        {
            get { return _originalReportId; }
            set { _originalReportId = value; MarkColumnModified(ColumnNameOriginalReportId); }
        }
        
        public const string ColumnNameUpdatingReportId = "rgcl_updating_rgr_regulation_report_id";
        private int _updatingReportId;
        [Column(ColumnNameUpdatingReportId)]
        public int UpdatingReportId
        {
            get { return _updatingReportId; }
            set { _updatingReportId = value; MarkColumnModified(ColumnNameUpdatingReportId); }
        }
        
        public const string ColumnNameUpdateReason = "rgcl_rv_update_reason";
        private int? _updateReason;
        [Column(ColumnNameUpdateReason)]
        public int? UpdateReason
        {
            get { return _updateReason; }
            set { _updateReason = value; MarkColumnModified(ColumnNameUpdateReason); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_report_default_recipient")]
    [PrimaryKey("rdr_report_default_recipient_id")]
    [ExplicitColumns]
    public class ReportDefaultRecipientTableModel : TableModel
    {
        
        public const string ColumnNameId = "rdr_report_default_recipient_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "rdr_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameDistributionMethod = "rdr_rv_distribution_method";
        private int _distributionMethod;
        [Column(ColumnNameDistributionMethod)]
        public int DistributionMethod
        {
            get { return _distributionMethod; }
            set { _distributionMethod = value; MarkColumnModified(ColumnNameDistributionMethod); }
        }
        
        public const string ColumnNameContactId = "rdr_rc_contact_id";
        private int? _contactId;
        [Column(ColumnNameContactId)]
        public int? ContactId
        {
            get { return _contactId; }
            set { _contactId = value; MarkColumnModified(ColumnNameContactId); }
        }
        
        public const string ColumnNameRoleType = "rdr_rv_role_type";
        private int? _roleType;
        [Column(ColumnNameRoleType)]
        public int? RoleType
        {
            get { return _roleType; }
            set { _roleType = value; MarkColumnModified(ColumnNameRoleType); }
        }
        
        public const string ColumnNameReportType = "rdr_rv_report_type";
        private int _reportType;
        [Column(ColumnNameReportType)]
        public int ReportType
        {
            get { return _reportType; }
            set { _reportType = value; MarkColumnModified(ColumnNameReportType); }
        }
        
        public const string ColumnNameIsDeleted = "rdr_deleted_bit";
        [ResultColumn(ColumnNameIsDeleted)]
        public bool IsDeleted { get; set; }
        
        public const string ColumnNameRecipientType = "rdr_rv_recipient_type";
        private int? _recipientType;
        [Column(ColumnNameRecipientType)]
        public int? RecipientType
        {
            get { return _recipientType; }
            set { _recipientType = value; MarkColumnModified(ColumnNameRecipientType); }
        }
        
        public const string ColumnNameReportFrequency = "rdr_rvs_report_frequency";
        private int? _reportFrequency;
        [Column(ColumnNameReportFrequency)]
        public int? ReportFrequency
        {
            get { return _reportFrequency; }
            set { _reportFrequency = value; MarkColumnModified(ColumnNameReportFrequency); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_scenario")]
    [PrimaryKey("sn_scenario_id")]
    [ExplicitColumns]
    public class ScenarioTableModel : TableModel
    {
        
        public const string ColumnNameId = "sn_scenario_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameShockValue = "sn_shock_value";
        private decimal? _shockValue;
        [Column(ColumnNameShockValue)]
        public decimal? ShockValue
        {
            get { return _shockValue; }
            set { _shockValue = value; MarkColumnModified(ColumnNameShockValue); }
        }
        
        public const string ColumnNameShockValueType = "sn_rv_shock_value_type";
        private int? _shockValueType;
        [Column(ColumnNameShockValueType)]
        public int? ShockValueType
        {
            get { return _shockValueType; }
            set { _shockValueType = value; MarkColumnModified(ColumnNameShockValueType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_sched_det_compound")]
    [PrimaryKey("sc_compound_id")]
    [ExplicitColumns]
    public class ScheduleDetailCompoundingTableModel : TableModel
    {
        
        public const string ColumnNameId = "sc_compound_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameScheduleDetailId = "sc_fl_ongoing_calc_id";
        private int _scheduleDetailId;
        [Column(ColumnNameScheduleDetailId)]
        public int ScheduleDetailId
        {
            get { return _scheduleDetailId; }
            set { _scheduleDetailId = value; MarkColumnModified(ColumnNameScheduleDetailId); }
        }
        
        public const string ColumnNameFromDate = "sc_compound_from_dt";
        private DateTime? _fromDate;
        [Column(ColumnNameFromDate)]
        public DateTime? FromDate
        {
            get { return _fromDate; }
            set { _fromDate = value; MarkColumnModified(ColumnNameFromDate); }
        }
        
        public const string ColumnNameToDate = "sc_compound_to_dt";
        private DateTime? _toDate;
        [Column(ColumnNameToDate)]
        public DateTime? ToDate
        {
            get { return _toDate; }
            set { _toDate = value; MarkColumnModified(ColumnNameToDate); }
        }
        
        public const string ColumnNameAdjustedCalculationAmount = "sc_adjusted_calculation_amt";
        private double? _adjustedCalculationAmount;
        [Column(ColumnNameAdjustedCalculationAmount)]
        public double? AdjustedCalculationAmount
        {
            get { return _adjustedCalculationAmount; }
            set { _adjustedCalculationAmount = value; MarkColumnModified(ColumnNameAdjustedCalculationAmount); }
        }
        
        public const string ColumnNamePeriodAmount = "sc_compound_period_amt";
        private double? _periodAmount;
        [Column(ColumnNamePeriodAmount)]
        public double? PeriodAmount
        {
            get { return _periodAmount; }
            set { _periodAmount = value; MarkColumnModified(ColumnNamePeriodAmount); }
        }
        
        public const string ColumnNameIndexRate = "sc_index_rate";
        private decimal? _indexRate;
        [Column(ColumnNameIndexRate)]
        public decimal? IndexRate
        {
            get { return _indexRate; }
            set { _indexRate = value; MarkColumnModified(ColumnNameIndexRate); }
        }
        
        public const string ColumnNameRateResetDate = "sc_rate_reset_dt";
        private DateTime? _rateResetDate;
        [Column(ColumnNameRateResetDate)]
        public DateTime? RateResetDate
        {
            get { return _rateResetDate; }
            set { _rateResetDate = value; MarkColumnModified(ColumnNameRateResetDate); }
        }
        
        public const string ColumnNameRateFixingDate = "sc_rate_fixing_dt";
        private DateTime? _rateFixingDate;
        [Column(ColumnNameRateFixingDate)]
        public DateTime? RateFixingDate
        {
            get { return _rateFixingDate; }
            set { _rateFixingDate = value; MarkColumnModified(ColumnNameRateFixingDate); }
        }
        
        public const string ColumnNameFlatCompoundingAmount = "sc_flat_compounding_amt";
        private decimal? _flatCompoundingAmount;
        [Column(ColumnNameFlatCompoundingAmount)]
        public decimal? FlatCompoundingAmount
        {
            get { return _flatCompoundingAmount; }
            set { _flatCompoundingAmount = value; MarkColumnModified(ColumnNameFlatCompoundingAmount); }
        }
        
        public const string ColumnNameAdditionalPeriodAmount = "sc_addnl_cmpdg_pd_amt";
        private decimal? _additionalPeriodAmount;
        [Column(ColumnNameAdditionalPeriodAmount)]
        public decimal? AdditionalPeriodAmount
        {
            get { return _additionalPeriodAmount; }
            set { _additionalPeriodAmount = value; MarkColumnModified(ColumnNameAdditionalPeriodAmount); }
        }
        
        public const string ColumnNameBasicPeriodAmount = "sc_basic_cmpdg_pd_amt";
        private decimal? _basicPeriodAmount;
        [Column(ColumnNameBasicPeriodAmount)]
        public decimal? BasicPeriodAmount
        {
            get { return _basicPeriodAmount; }
            set { _basicPeriodAmount = value; MarkColumnModified(ColumnNameBasicPeriodAmount); }
        }
        
        public const string ColumnNameFromUnadjustedDate = "sc_compound_from_unadjusted_dt";
        private DateTime? _fromUnadjustedDate;
        [Column(ColumnNameFromUnadjustedDate)]
        public DateTime? FromUnadjustedDate
        {
            get { return _fromUnadjustedDate; }
            set { _fromUnadjustedDate = value; MarkColumnModified(ColumnNameFromUnadjustedDate); }
        }
        
        public const string ColumnNameToUnadjustedDate = "sc_compound_to_unadjusted_dt";
        private DateTime? _toUnadjustedDate;
        [Column(ColumnNameToUnadjustedDate)]
        public DateTime? ToUnadjustedDate
        {
            get { return _toUnadjustedDate; }
            set { _toUnadjustedDate = value; MarkColumnModified(ColumnNameToUnadjustedDate); }
        }
        
        public const string ColumnNameRateResetUnadjustedDate = "sc_rate_reset_unadjusted_dt";
        private DateTime? _rateResetUnadjustedDate;
        [Column(ColumnNameRateResetUnadjustedDate)]
        public DateTime? RateResetUnadjustedDate
        {
            get { return _rateResetUnadjustedDate; }
            set { _rateResetUnadjustedDate = value; MarkColumnModified(ColumnNameRateResetUnadjustedDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_sched_det_hist")]
    [PrimaryKey("sh_sched_det_hist_id")]
    [ExplicitColumns]
    public class ScheduleDetailHistoryTableModel : TableModel
    {
        
        public const string ColumnNameId = "sh_sched_det_hist_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEffectivenessTestId = "sh_et_test_id";
        private int _effectivenessTestId;
        [Column(ColumnNameEffectivenessTestId)]
        public int EffectivenessTestId
        {
            get { return _effectivenessTestId; }
            set { _effectivenessTestId = value; MarkColumnModified(ColumnNameEffectivenessTestId); }
        }
        
        public const string ColumnNameTranQuoteId = "sh_tq_tran_quote_id";
        private int _tranQuoteId;
        [Column(ColumnNameTranQuoteId)]
        public int TranQuoteId
        {
            get { return _tranQuoteId; }
            set { _tranQuoteId = value; MarkColumnModified(ColumnNameTranQuoteId); }
        }
        
        public const string ColumnNameOngoingCalcId = "sh_fl_ongoing_calc_id";
        private int _ongoingCalcId;
        [Column(ColumnNameOngoingCalcId)]
        public int OngoingCalcId
        {
            get { return _ongoingCalcId; }
            set { _ongoingCalcId = value; MarkColumnModified(ColumnNameOngoingCalcId); }
        }
        
        public const string ColumnNamePrincipalNotionalAmount = "sh_fl_prnc_notion_amt";
        private decimal? _principalNotionalAmount;
        [Column(ColumnNamePrincipalNotionalAmount)]
        public decimal? PrincipalNotionalAmount
        {
            get { return _principalNotionalAmount; }
            set { _principalNotionalAmount = value; MarkColumnModified(ColumnNamePrincipalNotionalAmount); }
        }
        
        public const string ColumnNamePaymentAmount1 = "sh_fl_payment_amt1";
        private decimal? _paymentAmount1;
        [Column(ColumnNamePaymentAmount1)]
        public decimal? PaymentAmount1
        {
            get { return _paymentAmount1; }
            set { _paymentAmount1 = value; MarkColumnModified(ColumnNamePaymentAmount1); }
        }
        
        public const string ColumnNamePaymentAmount2 = "sh_fl_payment_amt2";
        private decimal? _paymentAmount2;
        [Column(ColumnNamePaymentAmount2)]
        public decimal? PaymentAmount2
        {
            get { return _paymentAmount2; }
            set { _paymentAmount2 = value; MarkColumnModified(ColumnNamePaymentAmount2); }
        }
        
        public const string ColumnNameNetAmount = "sh_fl_net_amt";
        private decimal? _netAmount;
        [Column(ColumnNameNetAmount)]
        public decimal? NetAmount
        {
            get { return _netAmount; }
            set { _netAmount = value; MarkColumnModified(ColumnNameNetAmount); }
        }
        
        public const string ColumnNamePaymentDate = "sh_fl_payment_dt";
        private DateTime? _paymentDate;
        [Column(ColumnNamePaymentDate)]
        public DateTime? PaymentDate
        {
            get { return _paymentDate; }
            set { _paymentDate = value; MarkColumnModified(ColumnNamePaymentDate); }
        }
        
        public const string ColumnNameSpread = "sh_fl_spread";
        private decimal? _spread;
        [Column(ColumnNameSpread)]
        public decimal? Spread
        {
            get { return _spread; }
            set { _spread = value; MarkColumnModified(ColumnNameSpread); }
        }
        
        public const string ColumnNameStrikeRate1 = "sh_fl_strike_rate1";
        private decimal? _strikeRate1;
        [Column(ColumnNameStrikeRate1)]
        public decimal? StrikeRate1
        {
            get { return _strikeRate1; }
            set { _strikeRate1 = value; MarkColumnModified(ColumnNameStrikeRate1); }
        }
        
        public const string ColumnNameStrikeRate2 = "sh_fl_strike_rate2";
        private decimal? _strikeRate2;
        [Column(ColumnNameStrikeRate2)]
        public decimal? StrikeRate2
        {
            get { return _strikeRate2; }
            set { _strikeRate2 = value; MarkColumnModified(ColumnNameStrikeRate2); }
        }
        
        public const string ColumnNameIndexRate = "sh_fl_index_rate";
        private decimal? _indexRate;
        [Column(ColumnNameIndexRate)]
        public decimal? IndexRate
        {
            get { return _indexRate; }
            set { _indexRate = value; MarkColumnModified(ColumnNameIndexRate); }
        }
        
        public const string ColumnNameRateResetDate = "sh_fl_rate_reset_dt";
        private DateTime? _rateResetDate;
        [Column(ColumnNameRateResetDate)]
        public DateTime? RateResetDate
        {
            get { return _rateResetDate; }
            set { _rateResetDate = value; MarkColumnModified(ColumnNameRateResetDate); }
        }
        
        public const string ColumnNameDoDate = "sh_fl_to_dt";
        private DateTime? _doDate;
        [Column(ColumnNameDoDate)]
        public DateTime? DoDate
        {
            get { return _doDate; }
            set { _doDate = value; MarkColumnModified(ColumnNameDoDate); }
        }
        
        public const string ColumnNameFromDate = "sh_fl_from_dt";
        private DateTime? _fromDate;
        [Column(ColumnNameFromDate)]
        public DateTime? FromDate
        {
            get { return _fromDate; }
            set { _fromDate = value; MarkColumnModified(ColumnNameFromDate); }
        }
        
        public const string ColumnNameFloattoDate = "sh_fl_float_to_dt";
        private DateTime? _floattoDate;
        [Column(ColumnNameFloattoDate)]
        public DateTime? FloattoDate
        {
            get { return _floattoDate; }
            set { _floattoDate = value; MarkColumnModified(ColumnNameFloattoDate); }
        }
        
        public const string ColumnNameFloatFromDate = "sh_fl_float_from_dt";
        private DateTime? _floatFromDate;
        [Column(ColumnNameFloatFromDate)]
        public DateTime? FloatFromDate
        {
            get { return _floatFromDate; }
            set { _floatFromDate = value; MarkColumnModified(ColumnNameFloatFromDate); }
        }
        
        public const string ColumnNameTrancheId = "sh_fl_lt_tranche_id";
        private int? _trancheId;
        [Column(ColumnNameTrancheId)]
        public int? TrancheId
        {
            get { return _trancheId; }
            set { _trancheId = value; MarkColumnModified(ColumnNameTrancheId); }
        }
        
        public const string ColumnNameNotional2 = "sh_fl_notional2";
        private decimal? _notional2;
        [Column(ColumnNameNotional2)]
        public decimal? Notional2
        {
            get { return _notional2; }
            set { _notional2 = value; MarkColumnModified(ColumnNameNotional2); }
        }
        
        public const string ColumnNameIndexRate2 = "sh_fl_index2_rate";
        private decimal? _indexRate2;
        [Column(ColumnNameIndexRate2)]
        public decimal? IndexRate2
        {
            get { return _indexRate2; }
            set { _indexRate2 = value; MarkColumnModified(ColumnNameIndexRate2); }
        }
        
        public const string ColumnNameSpread2 = "sh_fl_spread2";
        private decimal? _spread2;
        [Column(ColumnNameSpread2)]
        public decimal? Spread2
        {
            get { return _spread2; }
            set { _spread2 = value; MarkColumnModified(ColumnNameSpread2); }
        }
        
        public const string ColumnNameRateFixingDate2 = "sh_fl_rate_fixing_dt2";
        private DateTime? _rateFixingDate2;
        [Column(ColumnNameRateFixingDate2)]
        public DateTime? RateFixingDate2
        {
            get { return _rateFixingDate2; }
            set { _rateFixingDate2 = value; MarkColumnModified(ColumnNameRateFixingDate2); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_sched_det_resets")]
    [PrimaryKey("sr_sched_det_resets_id")]
    [ExplicitColumns]
    public class ScheduleDetailMultipleResetTableModel : TableModel
    {
        
        public const string ColumnNameId = "sr_sched_det_resets_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameScheduleDetailId = "sr_fl_ongoing_calc_id";
        private int _scheduleDetailId;
        [Column(ColumnNameScheduleDetailId)]
        public int ScheduleDetailId
        {
            get { return _scheduleDetailId; }
            set { _scheduleDetailId = value; MarkColumnModified(ColumnNameScheduleDetailId); }
        }
        
        public const string ColumnNameRateResetDate = "sr_rate_reset_dt";
        private DateTime? _rateResetDate;
        [Column(ColumnNameRateResetDate)]
        public DateTime? RateResetDate
        {
            get { return _rateResetDate; }
            set { _rateResetDate = value; MarkColumnModified(ColumnNameRateResetDate); }
        }
        
        public const string ColumnNameIndexRate = "sr_index_rate";
        private decimal? _indexRate;
        [Column(ColumnNameIndexRate)]
        public decimal? IndexRate
        {
            get { return _indexRate; }
            set { _indexRate = value; MarkColumnModified(ColumnNameIndexRate); }
        }
        
        public const string ColumnNameDaysInPeriod = "sr_days_in_pd";
        private int? _daysInPeriod;
        [Column(ColumnNameDaysInPeriod)]
        public int? DaysInPeriod
        {
            get { return _daysInPeriod; }
            set { _daysInPeriod = value; MarkColumnModified(ColumnNameDaysInPeriod); }
        }
        
        public const string ColumnNameRateFixingDate = "sr_rate_fixing_dt";
        private DateTime? _rateFixingDate;
        [Column(ColumnNameRateFixingDate)]
        public DateTime? RateFixingDate
        {
            get { return _rateFixingDate; }
            set { _rateFixingDate = value; MarkColumnModified(ColumnNameRateFixingDate); }
        }
        
        public const string ColumnNameScheduleDetailCompoundingId = "sr_sc_compound_id";
        private int? _scheduleDetailCompoundingId;
        [Column(ColumnNameScheduleDetailCompoundingId)]
        public int? ScheduleDetailCompoundingId
        {
            get { return _scheduleDetailCompoundingId; }
            set { _scheduleDetailCompoundingId = value; MarkColumnModified(ColumnNameScheduleDetailCompoundingId); }
        }
        
        public const string ColumnNameRateResetUnadjustedDate = "sr_rate_reset_unadjusted_dt";
        private DateTime? _rateResetUnadjustedDate;
        [Column(ColumnNameRateResetUnadjustedDate)]
        public DateTime? RateResetUnadjustedDate
        {
            get { return _rateResetUnadjustedDate; }
            set { _rateResetUnadjustedDate = value; MarkColumnModified(ColumnNameRateResetUnadjustedDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_schedule")]
    [PrimaryKey("se_schedule_id")]
    [ExplicitColumns]
    public class ScheduleTableModel : TableModel
    {
        
        public const string ColumnNameId = "se_schedule_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTranQuoteId = "se_tq_tran_quote_id";
        private int _tranQuoteId;
        [Column(ColumnNameTranQuoteId)]
        public int TranQuoteId
        {
            get { return _tranQuoteId; }
            set { _tranQuoteId = value; MarkColumnModified(ColumnNameTranQuoteId); }
        }
        
        public const string ColumnNameRollDay = "se_dd_roll_day";
        private int? _rollDay;
        [Column(ColumnNameRollDay)]
        public int? RollDay
        {
            get { return _rollDay; }
            set { _rollDay = value; MarkColumnModified(ColumnNameRollDay); }
        }
        
        public const string ColumnNameScheduleType = "se_dd_schedule";
        private string _scheduleType;
        [Column(ColumnNameScheduleType)]
        public string ScheduleType
        {
            get { return _scheduleType; }
            set { _scheduleType = value; MarkColumnModified(ColumnNameScheduleType); }
        }
        
        public const string ColumnNameLongFirstPeriod = "se_dd_long_first_prd";
        private string _longFirstPeriod;
        [Column(ColumnNameLongFirstPeriod)]
        public string LongFirstPeriod
        {
            get { return _longFirstPeriod; }
            set { _longFirstPeriod = value; MarkColumnModified(ColumnNameLongFirstPeriod); }
        }
        
        public const string ColumnNameLongLastPeriod = "se_dd_long_last_prd";
        private string _longLastPeriod;
        [Column(ColumnNameLongLastPeriod)]
        public string LongLastPeriod
        {
            get { return _longLastPeriod; }
            set { _longLastPeriod = value; MarkColumnModified(ColumnNameLongLastPeriod); }
        }
        
        public const string ColumnNameFrequency1 = "se_dd_frequency1";
        private string _frequency1;
        [Column(ColumnNameFrequency1)]
        public string Frequency1
        {
            get { return _frequency1; }
            set { _frequency1 = value; MarkColumnModified(ColumnNameFrequency1); }
        }
        
        public const string ColumnNameFrequency2 = "se_dd_frequency2";
        private string _frequency2;
        [Column(ColumnNameFrequency2)]
        public string Frequency2
        {
            get { return _frequency2; }
            set { _frequency2 = value; MarkColumnModified(ColumnNameFrequency2); }
        }
        
        public const string ColumnNameFrequency3 = "se_dd_frequency3";
        private string _frequency3;
        [Column(ColumnNameFrequency3)]
        public string Frequency3
        {
            get { return _frequency3; }
            set { _frequency3 = value; MarkColumnModified(ColumnNameFrequency3); }
        }
        
        public const string ColumnNameDayFraction1 = "se_dd_day_fraction1";
        private string _dayFraction1;
        [Column(ColumnNameDayFraction1)]
        public string DayFraction1
        {
            get { return _dayFraction1; }
            set { _dayFraction1 = value; MarkColumnModified(ColumnNameDayFraction1); }
        }
        
        public const string ColumnNameDayFraction2 = "se_dd_day_fraction2";
        private string _dayFraction2;
        [Column(ColumnNameDayFraction2)]
        public string DayFraction2
        {
            get { return _dayFraction2; }
            set { _dayFraction2 = value; MarkColumnModified(ColumnNameDayFraction2); }
        }
        
        public const string ColumnNameDayFraction3 = "se_dd_day_fraction3";
        private string _dayFraction3;
        [Column(ColumnNameDayFraction3)]
        public string DayFraction3
        {
            get { return _dayFraction3; }
            set { _dayFraction3 = value; MarkColumnModified(ColumnNameDayFraction3); }
        }
        
        public const string ColumnNamePaymentDay = "se_dd_payment_day";
        private int? _paymentDay;
        [Column(ColumnNamePaymentDay)]
        public int? PaymentDay
        {
            get { return _paymentDay; }
            set { _paymentDay = value; MarkColumnModified(ColumnNamePaymentDay); }
        }
        
        public const string ColumnNameFloatingPaymentDay = "se_float_pmnt_day";
        private int? _floatingPaymentDay;
        [Column(ColumnNameFloatingPaymentDay)]
        public int? FloatingPaymentDay
        {
            get { return _floatingPaymentDay; }
            set { _floatingPaymentDay = value; MarkColumnModified(ColumnNameFloatingPaymentDay); }
        }
        
        public const string ColumnNameNextRateDate = "se_next_rate_dt";
        private DateTime? _nextRateDate;
        [Column(ColumnNameNextRateDate)]
        public DateTime? NextRateDate
        {
            get { return _nextRateDate; }
            set { _nextRateDate = value; MarkColumnModified(ColumnNameNextRateDate); }
        }
        
        public const string ColumnNameCouponRate = "se_coupon_rate";
        private decimal? _couponRate;
        [Column(ColumnNameCouponRate)]
        public decimal? CouponRate
        {
            get { return _couponRate; }
            set { _couponRate = value; MarkColumnModified(ColumnNameCouponRate); }
        }
        
        public const string ColumnNameAmortizationTermInMonths = "se_amort_term_mnth";
        private int? _amortizationTermInMonths;
        [Column(ColumnNameAmortizationTermInMonths)]
        public int? AmortizationTermInMonths
        {
            get { return _amortizationTermInMonths; }
            set { _amortizationTermInMonths = value; MarkColumnModified(ColumnNameAmortizationTermInMonths); }
        }
        
        public const string ColumnNameBallonPayment = "se_balloon_pmnt";
        private decimal? _ballonPayment;
        [Column(ColumnNameBallonPayment)]
        public decimal? BallonPayment
        {
            get { return _ballonPayment; }
            set { _ballonPayment = value; MarkColumnModified(ColumnNameBallonPayment); }
        }
        
        public const string ColumnNameAmortizationPeriodAmount = "se_amort_pmnt_amt";
        private decimal? _amortizationPeriodAmount;
        [Column(ColumnNameAmortizationPeriodAmount)]
        public decimal? AmortizationPeriodAmount
        {
            get { return _amortizationPeriodAmount; }
            set { _amortizationPeriodAmount = value; MarkColumnModified(ColumnNameAmortizationPeriodAmount); }
        }
        
        public const string ColumnNameSplitSchedule = "se_dd_split_sched";
        private string _splitSchedule;
        [Column(ColumnNameSplitSchedule)]
        public string SplitSchedule
        {
            get { return _splitSchedule; }
            set { _splitSchedule = value; MarkColumnModified(ColumnNameSplitSchedule); }
        }
        
        public const string ColumnNameRateResetDay = "se_rate_reset_day";
        private int? _rateResetDay;
        [Column(ColumnNameRateResetDay)]
        public int? RateResetDay
        {
            get { return _rateResetDay; }
            set { _rateResetDay = value; MarkColumnModified(ColumnNameRateResetDay); }
        }
        
        public const string ColumnNameRateFloatingResetDay = "se_rate_float_reset_day";
        private int? _rateFloatingResetDay;
        [Column(ColumnNameRateFloatingResetDay)]
        public int? RateFloatingResetDay
        {
            get { return _rateFloatingResetDay; }
            set { _rateFloatingResetDay = value; MarkColumnModified(ColumnNameRateFloatingResetDay); }
        }
        
        public const string ColumnNameAmortizationIncrement = "se_amort_increment";
        private decimal? _amortizationIncrement;
        [Column(ColumnNameAmortizationIncrement)]
        public decimal? AmortizationIncrement
        {
            get { return _amortizationIncrement; }
            set { _amortizationIncrement = value; MarkColumnModified(ColumnNameAmortizationIncrement); }
        }
        
        public const string ColumnNameInitialNotional = "se_initial_notional";
        private decimal? _initialNotional;
        [Column(ColumnNameInitialNotional)]
        public decimal? InitialNotional
        {
            get { return _initialNotional; }
            set { _initialNotional = value; MarkColumnModified(ColumnNameInitialNotional); }
        }
        
        public const string ColumnNameAmortizationType = "se_dd_amort_type";
        private string _amortizationType;
        [Column(ColumnNameAmortizationType)]
        public string AmortizationType
        {
            get { return _amortizationType; }
            set { _amortizationType = value; MarkColumnModified(ColumnNameAmortizationType); }
        }
        
        public const string ColumnNameMultipleResets = "se_dd_multiple_resets";
        private string _multipleResets;
        [Column(ColumnNameMultipleResets)]
        public string MultipleResets
        {
            get { return _multipleResets; }
            set { _multipleResets = value; MarkColumnModified(ColumnNameMultipleResets); }
        }
        
        public const string ColumnNameRateResetFrequency = "se_dd_rate_reset_freq";
        private string _rateResetFrequency;
        [Column(ColumnNameRateResetFrequency)]
        public string RateResetFrequency
        {
            get { return _rateResetFrequency; }
            set { _rateResetFrequency = value; MarkColumnModified(ColumnNameRateResetFrequency); }
        }
        
        public const string ColumnNameFirstFixedRollDate = "se_first_fxd_roll_dt";
        private DateTime? _firstFixedRollDate;
        [Column(ColumnNameFirstFixedRollDate)]
        public DateTime? FirstFixedRollDate
        {
            get { return _firstFixedRollDate; }
            set { _firstFixedRollDate = value; MarkColumnModified(ColumnNameFirstFixedRollDate); }
        }
        
        public const string ColumnNameFirstFloatingRollDay = "se_first_fltg_roll_dt";
        private DateTime? _firstFloatingRollDay;
        [Column(ColumnNameFirstFloatingRollDay)]
        public DateTime? FirstFloatingRollDay
        {
            get { return _firstFloatingRollDay; }
            set { _firstFloatingRollDay = value; MarkColumnModified(ColumnNameFirstFloatingRollDay); }
        }
        
        public const string ColumnNameIndexId = "se_ix_index_id";
        private int? _indexId;
        [Column(ColumnNameIndexId)]
        public int? IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
        
        public const string ColumnNameMultipleTranches = "se_dd_mult_tranches";
        private string _multipleTranches;
        [Column(ColumnNameMultipleTranches)]
        public string MultipleTranches
        {
            get { return _multipleTranches; }
            set { _multipleTranches = value; MarkColumnModified(ColumnNameMultipleTranches); }
        }
        
        public const string ColumnNameIsCompounding = "se_dd_compound";
        private string _isCompounding;
        [Column(ColumnNameIsCompounding)]
        public string IsCompounding
        {
            get { return _isCompounding; }
            set { _isCompounding = value; MarkColumnModified(ColumnNameIsCompounding); }
        }
        
        public const string ColumnNameCompoundingFrequency = "se_compound_freq";
        private string _compoundingFrequency;
        [Column(ColumnNameCompoundingFrequency)]
        public string CompoundingFrequency
        {
            get { return _compoundingFrequency; }
            set { _compoundingFrequency = value; MarkColumnModified(ColumnNameCompoundingFrequency); }
        }
        
        public const string ColumnNameCompoundingMethod = "se_compound_method";
        private string _compoundingMethod;
        [Column(ColumnNameCompoundingMethod)]
        public string CompoundingMethod
        {
            get { return _compoundingMethod; }
            set { _compoundingMethod = value; MarkColumnModified(ColumnNameCompoundingMethod); }
        }
        
        public const string ColumnNameCompoundingStartDate = "se_compound_start_dt";
        private DateTime? _compoundingStartDate;
        [Column(ColumnNameCompoundingStartDate)]
        public DateTime? CompoundingStartDate
        {
            get { return _compoundingStartDate; }
            set { _compoundingStartDate = value; MarkColumnModified(ColumnNameCompoundingStartDate); }
        }
        
        public const string ColumnNameFirstFloatingPaymentDate = "se_first_float_payment_dt";
        private DateTime? _firstFloatingPaymentDate;
        [Column(ColumnNameFirstFloatingPaymentDate)]
        public DateTime? FirstFloatingPaymentDate
        {
            get { return _firstFloatingPaymentDate; }
            set { _firstFloatingPaymentDate = value; MarkColumnModified(ColumnNameFirstFloatingPaymentDate); }
        }
        
        public const string ColumnNameResetMethod = "se_dd_reset_spec_method";
        private int? _resetMethod;
        [Column(ColumnNameResetMethod)]
        public int? ResetMethod
        {
            get { return _resetMethod; }
            set { _resetMethod = value; MarkColumnModified(ColumnNameResetMethod); }
        }
        
        public const string ColumnNamePaymentMethod = "se_dd_pmt_spec_method";
        private int? _paymentMethod;
        [Column(ColumnNamePaymentMethod)]
        public int? PaymentMethod
        {
            get { return _paymentMethod; }
            set { _paymentMethod = value; MarkColumnModified(ColumnNamePaymentMethod); }
        }
        
        public const string ColumnNameResetPositionRelativeToRollDate = "se_reset_pos_relative_to_roll";
        private string _resetPositionRelativeToRollDate;
        [Column(ColumnNameResetPositionRelativeToRollDate)]
        public string ResetPositionRelativeToRollDate
        {
            get { return _resetPositionRelativeToRollDate; }
            set { _resetPositionRelativeToRollDate = value; MarkColumnModified(ColumnNameResetPositionRelativeToRollDate); }
        }
        
        public const string ColumnNameResetRelativeTo = "se_reset_relative_to";
        private string _resetRelativeTo;
        [Column(ColumnNameResetRelativeTo)]
        public string ResetRelativeTo
        {
            get { return _resetRelativeTo; }
            set { _resetRelativeTo = value; MarkColumnModified(ColumnNameResetRelativeTo); }
        }
        
        public const string ColumnNamePaymentPositionRelativeToRoll = "se_pmt_pos_relative_to_roll";
        private string _paymentPositionRelativeToRoll;
        [Column(ColumnNamePaymentPositionRelativeToRoll)]
        public string PaymentPositionRelativeToRoll
        {
            get { return _paymentPositionRelativeToRoll; }
            set { _paymentPositionRelativeToRoll = value; MarkColumnModified(ColumnNamePaymentPositionRelativeToRoll); }
        }
        
        public const string ColumnNamePaymentRelativeTo = "se_pmt_relative_to";
        private string _paymentRelativeTo;
        [Column(ColumnNamePaymentRelativeTo)]
        public string PaymentRelativeTo
        {
            get { return _paymentRelativeTo; }
            set { _paymentRelativeTo = value; MarkColumnModified(ColumnNamePaymentRelativeTo); }
        }
        
        public const string ColumnNameResetDayOfWeek = "se_dd_reset_day_of_week";
        private string _resetDayOfWeek;
        [Column(ColumnNameResetDayOfWeek)]
        public string ResetDayOfWeek
        {
            get { return _resetDayOfWeek; }
            set { _resetDayOfWeek = value; MarkColumnModified(ColumnNameResetDayOfWeek); }
        }
        
        public const string ColumnNameResetStub = "se_dd_reset_stub_yn";
        private string _resetStub;
        [Column(ColumnNameResetStub)]
        public string ResetStub
        {
            get { return _resetStub; }
            set { _resetStub = value; MarkColumnModified(ColumnNameResetStub); }
        }
        
        public const string ColumnNameResetPatternStartDate = "se_dd_reset_pattern_start_dt";
        private DateTime? _resetPatternStartDate;
        [Column(ColumnNameResetPatternStartDate)]
        public DateTime? ResetPatternStartDate
        {
            get { return _resetPatternStartDate; }
            set { _resetPatternStartDate = value; MarkColumnModified(ColumnNameResetPatternStartDate); }
        }
        
        public const string ColumnNameNextPaymentNoticeCreateDate = "se_next_pmt_notice_create_dt";
        private DateTime? _nextPaymentNoticeCreateDate;
        [Column(ColumnNameNextPaymentNoticeCreateDate)]
        public DateTime? NextPaymentNoticeCreateDate
        {
            get { return _nextPaymentNoticeCreateDate; }
            set { _nextPaymentNoticeCreateDate = value; MarkColumnModified(ColumnNameNextPaymentNoticeCreateDate); }
        }
        
        public const string ColumnNameNextPaymentNoticePaymentDate = "se_next_pmt_notice_pmt_dt";
        private DateTime? _nextPaymentNoticePaymentDate;
        [Column(ColumnNameNextPaymentNoticePaymentDate)]
        public DateTime? NextPaymentNoticePaymentDate
        {
            get { return _nextPaymentNoticePaymentDate; }
            set { _nextPaymentNoticePaymentDate = value; MarkColumnModified(ColumnNameNextPaymentNoticePaymentDate); }
        }
        
        public const string ColumnNameNextResetNoticeCreateDate = "se_next_reset_notice_create_dt";
        private DateTime? _nextResetNoticeCreateDate;
        [Column(ColumnNameNextResetNoticeCreateDate)]
        public DateTime? NextResetNoticeCreateDate
        {
            get { return _nextResetNoticeCreateDate; }
            set { _nextResetNoticeCreateDate = value; MarkColumnModified(ColumnNameNextResetNoticeCreateDate); }
        }
        
        public const string ColumnNameNextResetNoticePaymentDate = "se_next_reset_notice_pmt_dt";
        private DateTime? _nextResetNoticePaymentDate;
        [Column(ColumnNameNextResetNoticePaymentDate)]
        public DateTime? NextResetNoticePaymentDate
        {
            get { return _nextResetNoticePaymentDate; }
            set { _nextResetNoticePaymentDate = value; MarkColumnModified(ColumnNameNextResetNoticePaymentDate); }
        }
        
        public const string ColumnNameNextCombinedNoticeCreateDate = "se_next_combined_notice_create_dt";
        private DateTime? _nextCombinedNoticeCreateDate;
        [Column(ColumnNameNextCombinedNoticeCreateDate)]
        public DateTime? NextCombinedNoticeCreateDate
        {
            get { return _nextCombinedNoticeCreateDate; }
            set { _nextCombinedNoticeCreateDate = value; MarkColumnModified(ColumnNameNextCombinedNoticeCreateDate); }
        }
        
        public const string ColumnNameNextCombinedNoticePaymentDate = "se_next_combined_notice_pmt_dt";
        private DateTime? _nextCombinedNoticePaymentDate;
        [Column(ColumnNameNextCombinedNoticePaymentDate)]
        public DateTime? NextCombinedNoticePaymentDate
        {
            get { return _nextCombinedNoticePaymentDate; }
            set { _nextCombinedNoticePaymentDate = value; MarkColumnModified(ColumnNameNextCombinedNoticePaymentDate); }
        }
        
        public const string ColumnNameRateCutoffDays = "se_rate_cutoff_days";
        private int? _rateCutoffDays;
        [Column(ColumnNameRateCutoffDays)]
        public int? RateCutoffDays
        {
            get { return _rateCutoffDays; }
            set { _rateCutoffDays = value; MarkColumnModified(ColumnNameRateCutoffDays); }
        }
        
        public const string ColumnNameResetBusinessDayConvention = "se_rate_reset_bus_day_conv";
        private string _resetBusinessDayConvention;
        [Column(ColumnNameResetBusinessDayConvention)]
        public string ResetBusinessDayConvention
        {
            get { return _resetBusinessDayConvention; }
            set { _resetBusinessDayConvention = value; MarkColumnModified(ColumnNameResetBusinessDayConvention); }
        }
        
        public const string ColumnNameCompoundingBusinessDayConvention = "se_compound_bus_day_conv";
        private string _compoundingBusinessDayConvention;
        [Column(ColumnNameCompoundingBusinessDayConvention)]
        public string CompoundingBusinessDayConvention
        {
            get { return _compoundingBusinessDayConvention; }
            set { _compoundingBusinessDayConvention = value; MarkColumnModified(ColumnNameCompoundingBusinessDayConvention); }
        }
        
        public const string ColumnNameIsNoticesRequired = "se_notices_reqd_bit";
        private bool? _isNoticesRequired;
        [Column(ColumnNameIsNoticesRequired)]
        public bool? IsNoticesRequired
        {
            get { return _isNoticesRequired; }
            set { _isNoticesRequired = value; MarkColumnModified(ColumnNameIsNoticesRequired); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_schedule_detail")]
    [PrimaryKey("fl_ongoing_calc_id")]
    [ExplicitColumns]
    public class ScheduleDetailTableModel : TableModel
    {
        
        public const string ColumnNameId = "fl_ongoing_calc_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameScheduleId = "fl_se_schedule_id";
        private int _scheduleId;
        [Column(ColumnNameScheduleId)]
        public int ScheduleId
        {
            get { return _scheduleId; }
            set { _scheduleId = value; MarkColumnModified(ColumnNameScheduleId); }
        }
        
        public const string ColumnNamePrincipleNotionalAmount1 = "fl_prnc_notion_amt";
        private decimal? _principleNotionalAmount1;
        [Column(ColumnNamePrincipleNotionalAmount1)]
        public decimal? PrincipleNotionalAmount1
        {
            get { return _principleNotionalAmount1; }
            set { _principleNotionalAmount1 = value; MarkColumnModified(ColumnNamePrincipleNotionalAmount1); }
        }
        
        public const string ColumnNamePaymentAmount1 = "fl_payment_amt1";
        private decimal? _paymentAmount1;
        [Column(ColumnNamePaymentAmount1)]
        public decimal? PaymentAmount1
        {
            get { return _paymentAmount1; }
            set { _paymentAmount1 = value; MarkColumnModified(ColumnNamePaymentAmount1); }
        }
        
        public const string ColumnNamePaymentAmount2 = "fl_payment_amt2";
        private decimal? _paymentAmount2;
        [Column(ColumnNamePaymentAmount2)]
        public decimal? PaymentAmount2
        {
            get { return _paymentAmount2; }
            set { _paymentAmount2 = value; MarkColumnModified(ColumnNamePaymentAmount2); }
        }
        
        public const string ColumnNamePaymentAmount3 = "fl_payment_amt3";
        private decimal? _paymentAmount3;
        [Column(ColumnNamePaymentAmount3)]
        public decimal? PaymentAmount3
        {
            get { return _paymentAmount3; }
            set { _paymentAmount3 = value; MarkColumnModified(ColumnNamePaymentAmount3); }
        }
        
        public const string ColumnNameNetAmount = "fl_net_amt";
        private decimal? _netAmount;
        [Column(ColumnNameNetAmount)]
        public decimal? NetAmount
        {
            get { return _netAmount; }
            set { _netAmount = value; MarkColumnModified(ColumnNameNetAmount); }
        }
        
        public const string ColumnNamePaymentDate = "fl_payment_dt";
        private DateTime? _paymentDate;
        [Column(ColumnNamePaymentDate)]
        public DateTime? PaymentDate
        {
            get { return _paymentDate; }
            set { _paymentDate = value; MarkColumnModified(ColumnNamePaymentDate); }
        }
        
        public const string ColumnNameSpread1 = "fl_spread";
        private decimal? _spread1;
        [Column(ColumnNameSpread1)]
        public decimal? Spread1
        {
            get { return _spread1; }
            set { _spread1 = value; MarkColumnModified(ColumnNameSpread1); }
        }
        
        public const string ColumnNameStrikeRate1 = "fl_strike_rate1";
        private decimal? _strikeRate1;
        [Column(ColumnNameStrikeRate1)]
        public decimal? StrikeRate1
        {
            get { return _strikeRate1; }
            set { _strikeRate1 = value; MarkColumnModified(ColumnNameStrikeRate1); }
        }
        
        public const string ColumnNameStrikeRate2 = "fl_strike_rate2";
        private decimal? _strikeRate2;
        [Column(ColumnNameStrikeRate2)]
        public decimal? StrikeRate2
        {
            get { return _strikeRate2; }
            set { _strikeRate2 = value; MarkColumnModified(ColumnNameStrikeRate2); }
        }
        
        public const string ColumnNameStrikeAmount1 = "fl_strike_amt1";
        private decimal? _strikeAmount1;
        [Column(ColumnNameStrikeAmount1)]
        public decimal? StrikeAmount1
        {
            get { return _strikeAmount1; }
            set { _strikeAmount1 = value; MarkColumnModified(ColumnNameStrikeAmount1); }
        }
        
        public const string ColumnNameStrikeAmount2 = "fl_strike_amt2";
        private decimal? _strikeAmount2;
        [Column(ColumnNameStrikeAmount2)]
        public decimal? StrikeAmount2
        {
            get { return _strikeAmount2; }
            set { _strikeAmount2 = value; MarkColumnModified(ColumnNameStrikeAmount2); }
        }
        
        public const string ColumnNameIndexRate1 = "fl_index_rate";
        private decimal? _indexRate1;
        [Column(ColumnNameIndexRate1)]
        public decimal? IndexRate1
        {
            get { return _indexRate1; }
            set { _indexRate1 = value; MarkColumnModified(ColumnNameIndexRate1); }
        }
        
        public const string ColumnNameIndexAmount = "fl_index_amt";
        private decimal? _indexAmount;
        [Column(ColumnNameIndexAmount)]
        public decimal? IndexAmount
        {
            get { return _indexAmount; }
            set { _indexAmount = value; MarkColumnModified(ColumnNameIndexAmount); }
        }
        
        public const string ColumnNameRateResetDate = "fl_rate_reset_dt";
        private DateTime? _rateResetDate;
        [Column(ColumnNameRateResetDate)]
        public DateTime? RateResetDate
        {
            get { return _rateResetDate; }
            set { _rateResetDate = value; MarkColumnModified(ColumnNameRateResetDate); }
        }
        
        public const string ColumnNameToDate = "fl_to_dt";
        private DateTime? _toDate;
        [Column(ColumnNameToDate)]
        public DateTime? ToDate
        {
            get { return _toDate; }
            set { _toDate = value; MarkColumnModified(ColumnNameToDate); }
        }
        
        public const string ColumnNameFromDate = "fl_from_dt";
        private DateTime? _fromDate;
        [Column(ColumnNameFromDate)]
        public DateTime? FromDate
        {
            get { return _fromDate; }
            set { _fromDate = value; MarkColumnModified(ColumnNameFromDate); }
        }
        
        public const string ColumnNameFloatToDate = "fl_float_to_dt";
        private DateTime? _floatToDate;
        [Column(ColumnNameFloatToDate)]
        public DateTime? FloatToDate
        {
            get { return _floatToDate; }
            set { _floatToDate = value; MarkColumnModified(ColumnNameFloatToDate); }
        }
        
        public const string ColumnNameFloatFromDate = "fl_float_from_dt";
        private DateTime? _floatFromDate;
        [Column(ColumnNameFloatFromDate)]
        public DateTime? FloatFromDate
        {
            get { return _floatFromDate; }
            set { _floatFromDate = value; MarkColumnModified(ColumnNameFloatFromDate); }
        }
        
        public const string ColumnNameStrikeRate3 = "fl_strike_rate3";
        private decimal? _strikeRate3;
        [Column(ColumnNameStrikeRate3)]
        public decimal? StrikeRate3
        {
            get { return _strikeRate3; }
            set { _strikeRate3 = value; MarkColumnModified(ColumnNameStrikeRate3); }
        }
        
        public const string ColumnNameStrikeAmount3 = "fl_strike_amt3";
        private decimal? _strikeAmount3;
        [Column(ColumnNameStrikeAmount3)]
        public decimal? StrikeAmount3
        {
            get { return _strikeAmount3; }
            set { _strikeAmount3 = value; MarkColumnModified(ColumnNameStrikeAmount3); }
        }
        
        public const string ColumnNameTrancheId = "fl_lt_tranche_id";
        private int? _trancheId;
        [Column(ColumnNameTrancheId)]
        public int? TrancheId
        {
            get { return _trancheId; }
            set { _trancheId = value; MarkColumnModified(ColumnNameTrancheId); }
        }
        
        public const string ColumnNamePrincipalNotionalAmount2 = "fl_notional2";
        private decimal? _principalNotionalAmount2;
        [Column(ColumnNamePrincipalNotionalAmount2)]
        public decimal? PrincipalNotionalAmount2
        {
            get { return _principalNotionalAmount2; }
            set { _principalNotionalAmount2 = value; MarkColumnModified(ColumnNamePrincipalNotionalAmount2); }
        }
        
        public const string ColumnNameIndexRate2 = "fl_index2_rate";
        private decimal? _indexRate2;
        [Column(ColumnNameIndexRate2)]
        public decimal? IndexRate2
        {
            get { return _indexRate2; }
            set { _indexRate2 = value; MarkColumnModified(ColumnNameIndexRate2); }
        }
        
        public const string ColumnNameSpread2 = "fl_spread2";
        private decimal? _spread2;
        [Column(ColumnNameSpread2)]
        public decimal? Spread2
        {
            get { return _spread2; }
            set { _spread2 = value; MarkColumnModified(ColumnNameSpread2); }
        }
        
        public const string ColumnNameRateFixingDate2 = "fl_rate_fixing_dt2";
        private DateTime? _rateFixingDate2;
        [Column(ColumnNameRateFixingDate2)]
        public DateTime? RateFixingDate2
        {
            get { return _rateFixingDate2; }
            set { _rateFixingDate2 = value; MarkColumnModified(ColumnNameRateFixingDate2); }
        }
        
        public const string ColumnNamePrincipalPaymentAmount = "fl_principal_pmt_amt";
        private decimal? _principalPaymentAmount;
        [Column(ColumnNamePrincipalPaymentAmount)]
        public decimal? PrincipalPaymentAmount
        {
            get { return _principalPaymentAmount; }
            set { _principalPaymentAmount = value; MarkColumnModified(ColumnNamePrincipalPaymentAmount); }
        }
        
        public const string ColumnNameFromUnadjustedDate = "fl_from_unadjusted_dt";
        private DateTime? _fromUnadjustedDate;
        [Column(ColumnNameFromUnadjustedDate)]
        public DateTime? FromUnadjustedDate
        {
            get { return _fromUnadjustedDate; }
            set { _fromUnadjustedDate = value; MarkColumnModified(ColumnNameFromUnadjustedDate); }
        }
        
        public const string ColumnNameToUnadjustedDate = "fl_to_unadjusted_dt";
        private DateTime? _toUnadjustedDate;
        [Column(ColumnNameToUnadjustedDate)]
        public DateTime? ToUnadjustedDate
        {
            get { return _toUnadjustedDate; }
            set { _toUnadjustedDate = value; MarkColumnModified(ColumnNameToUnadjustedDate); }
        }
        
        public const string ColumnNameFloatFromUnadjustedDate = "fl_float_from_unadjusted_dt";
        private DateTime? _floatFromUnadjustedDate;
        [Column(ColumnNameFloatFromUnadjustedDate)]
        public DateTime? FloatFromUnadjustedDate
        {
            get { return _floatFromUnadjustedDate; }
            set { _floatFromUnadjustedDate = value; MarkColumnModified(ColumnNameFloatFromUnadjustedDate); }
        }
        
        public const string ColumnNameFloatToUnadjustedDate = "fl_float_to_unadjusted_dt";
        private DateTime? _floatToUnadjustedDate;
        [Column(ColumnNameFloatToUnadjustedDate)]
        public DateTime? FloatToUnadjustedDate
        {
            get { return _floatToUnadjustedDate; }
            set { _floatToUnadjustedDate = value; MarkColumnModified(ColumnNameFloatToUnadjustedDate); }
        }
        
        public const string ColumnNamePaymentUnadjustedDate = "fl_payment_unadjusted_dt";
        private DateTime? _paymentUnadjustedDate;
        [Column(ColumnNamePaymentUnadjustedDate)]
        public DateTime? PaymentUnadjustedDate
        {
            get { return _paymentUnadjustedDate; }
            set { _paymentUnadjustedDate = value; MarkColumnModified(ColumnNamePaymentUnadjustedDate); }
        }
        
        public const string ColumnNameRateFixingDate1 = "fl_rate_fixing1_dt";
        private DateTime? _rateFixingDate1;
        [Column(ColumnNameRateFixingDate1)]
        public DateTime? RateFixingDate1
        {
            get { return _rateFixingDate1; }
            set { _rateFixingDate1 = value; MarkColumnModified(ColumnNameRateFixingDate1); }
        }
        
        public const string ColumnNameRateResetDate1 = "fl_rate_reset1_dt";
        private DateTime? _rateResetDate1;
        [Column(ColumnNameRateResetDate1)]
        public DateTime? RateResetDate1
        {
            get { return _rateResetDate1; }
            set { _rateResetDate1 = value; MarkColumnModified(ColumnNameRateResetDate1); }
        }
        
        public const string ColumnNameRateResetUnadjustedDate = "fl_rate_reset1_unadjusted_dt";
        private DateTime? _rateResetUnadjustedDate;
        [Column(ColumnNameRateResetUnadjustedDate)]
        public DateTime? RateResetUnadjustedDate
        {
            get { return _rateResetUnadjustedDate; }
            set { _rateResetUnadjustedDate = value; MarkColumnModified(ColumnNameRateResetUnadjustedDate); }
        }
        
        public const string ColumnNameRateResetUnadjustedDate2 = "fl_rate_reset2_unadjusted_dt";
        private DateTime? _rateResetUnadjustedDate2;
        [Column(ColumnNameRateResetUnadjustedDate2)]
        public DateTime? RateResetUnadjustedDate2
        {
            get { return _rateResetUnadjustedDate2; }
            set { _rateResetUnadjustedDate2 = value; MarkColumnModified(ColumnNameRateResetUnadjustedDate2); }
        }
        
        public const string ColumnNameRateResetDate2 = "fl_rate_reset2_dt";
        private DateTime? _rateResetDate2;
        [Column(ColumnNameRateResetDate2)]
        public DateTime? RateResetDate2
        {
            get { return _rateResetDate2; }
            set { _rateResetDate2 = value; MarkColumnModified(ColumnNameRateResetDate2); }
        }
        
        public const string ColumnNameEffectiveInterestRate = "fl_eff_int_rate";
        private decimal? _effectiveInterestRate;
        [Column(ColumnNameEffectiveInterestRate)]
        public decimal? EffectiveInterestRate
        {
            get { return _effectiveInterestRate; }
            set { _effectiveInterestRate = value; MarkColumnModified(ColumnNameEffectiveInterestRate); }
        }
        
        public const string ColumnNameHedgedInterestRate = "fl_hedged_int_rate";
        private decimal? _hedgedInterestRate;
        [Column(ColumnNameHedgedInterestRate)]
        public decimal? HedgedInterestRate
        {
            get { return _hedgedInterestRate; }
            set { _hedgedInterestRate = value; MarkColumnModified(ColumnNameHedgedInterestRate); }
        }
        
        public const string ColumnNameOriginationCost = "fl_origination_costs";
        private decimal? _originationCost;
        [Column(ColumnNameOriginationCost)]
        public decimal? OriginationCost
        {
            get { return _originationCost; }
            set { _originationCost = value; MarkColumnModified(ColumnNameOriginationCost); }
        }
        
        public const string ColumnNameIssuanceCost = "fl_issuance_costs";
        private decimal? _issuanceCost;
        [Column(ColumnNameIssuanceCost)]
        public decimal? IssuanceCost
        {
            get { return _issuanceCost; }
            set { _issuanceCost = value; MarkColumnModified(ColumnNameIssuanceCost); }
        }
        
        public const string ColumnNamePremiumDiscount = "fl_premium_discount";
        private decimal? _premiumDiscount;
        [Column(ColumnNamePremiumDiscount)]
        public decimal? PremiumDiscount
        {
            get { return _premiumDiscount; }
            set { _premiumDiscount = value; MarkColumnModified(ColumnNamePremiumDiscount); }
        }
        
        public const string ColumnNamePurchaseAccountAdjustment = "fl_purch_acct_adj";
        private decimal? _purchaseAccountAdjustment;
        [Column(ColumnNamePurchaseAccountAdjustment)]
        public decimal? PurchaseAccountAdjustment
        {
            get { return _purchaseAccountAdjustment; }
            set { _purchaseAccountAdjustment = value; MarkColumnModified(ColumnNamePurchaseAccountAdjustment); }
        }
        
        public const string ColumnNameCostAmortizationAmount = "fl_cost_amort_amt";
        private decimal? _costAmortizationAmount;
        [Column(ColumnNameCostAmortizationAmount)]
        public decimal? CostAmortizationAmount
        {
            get { return _costAmortizationAmount; }
            set { _costAmortizationAmount = value; MarkColumnModified(ColumnNameCostAmortizationAmount); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_schedule_detail_adjustment")]
    [PrimaryKey("sda_schedule_detail_adjustment_id")]
    [ExplicitColumns]
    public class ScheduleRowAdjustmentTableModel : TableModel
    {
        
        public const string ColumnNameId = "sda_schedule_detail_adjustment_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameScheduleDetailId = "sda_fl_ongoing_calc_id";
        private int _scheduleDetailId;
        [Column(ColumnNameScheduleDetailId)]
        public int ScheduleDetailId
        {
            get { return _scheduleDetailId; }
            set { _scheduleDetailId = value; MarkColumnModified(ColumnNameScheduleDetailId); }
        }
        
        public const string ColumnNameInterestAdjustment = "sda_interest_adjustment";
        private decimal _interestAdjustment;
        [Column(ColumnNameInterestAdjustment)]
        public decimal InterestAdjustment
        {
            get { return _interestAdjustment; }
            set { _interestAdjustment = value; MarkColumnModified(ColumnNameInterestAdjustment); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_schedule_detail_commodity")]
    [PrimaryKey("sdc_schedule_detail_commodity_id")]
    [ExplicitColumns]
    public class ScheduleRowCommodityMetaTableModel : TableModel
    {
        
        public const string ColumnNameId = "sdc_schedule_detail_commodity_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameScheduleDetailId = "sdc_fl_ongoing_calc_id";
        private int _scheduleDetailId;
        [Column(ColumnNameScheduleDetailId)]
        public int ScheduleDetailId
        {
            get { return _scheduleDetailId; }
            set { _scheduleDetailId = value; MarkColumnModified(ColumnNameScheduleDetailId); }
        }
        
        public const string ColumnNameVolumeAmount = "sdc_volume_amt";
        private decimal? _volumeAmount;
        [Column(ColumnNameVolumeAmount)]
        public decimal? VolumeAmount
        {
            get { return _volumeAmount; }
            set { _volumeAmount = value; MarkColumnModified(ColumnNameVolumeAmount); }
        }
        
        public const string ColumnNameVolumeUnit = "sdc_rv_volume_unit";
        private int? _volumeUnit;
        [Column(ColumnNameVolumeUnit)]
        public int? VolumeUnit
        {
            get { return _volumeUnit; }
            set { _volumeUnit = value; MarkColumnModified(ColumnNameVolumeUnit); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_schedule_detail_orig")]
    [PrimaryKey("sdo_schedule_detail_orig_id")]
    [ExplicitColumns]
    public class ScheduleRowBaseTableModel : TableModel
    {
        
        public const string ColumnNameId = "sdo_schedule_detail_orig_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTrancheId = "sdo_lt_tranche_id";
        private int? _trancheId;
        [Column(ColumnNameTrancheId)]
        public int? TrancheId
        {
            get { return _trancheId; }
            set { _trancheId = value; MarkColumnModified(ColumnNameTrancheId); }
        }
        
        public const string ColumnNameScheduleId = "sdo_se_schedule_id";
        private int _scheduleId;
        [Column(ColumnNameScheduleId)]
        public int ScheduleId
        {
            get { return _scheduleId; }
            set { _scheduleId = value; MarkColumnModified(ColumnNameScheduleId); }
        }
        
        public const string ColumnNameFromDate = "sdo_from_dt";
        private DateTime _fromDate;
        [Column(ColumnNameFromDate)]
        public DateTime FromDate
        {
            get { return _fromDate; }
            set { _fromDate = value; MarkColumnModified(ColumnNameFromDate); }
        }
        
        public const string ColumnNameToDate = "sdo_to_dt";
        private DateTime _toDate;
        [Column(ColumnNameToDate)]
        public DateTime ToDate
        {
            get { return _toDate; }
            set { _toDate = value; MarkColumnModified(ColumnNameToDate); }
        }
        
        public const string ColumnNamePrincipalPayment = "sdo_principal_payment";
        private decimal? _principalPayment;
        [Column(ColumnNamePrincipalPayment)]
        public decimal? PrincipalPayment
        {
            get { return _principalPayment; }
            set { _principalPayment = value; MarkColumnModified(ColumnNamePrincipalPayment); }
        }
        
        public const string ColumnNameSpread = "sdo_spread";
        private decimal? _spread;
        [Column(ColumnNameSpread)]
        public decimal? Spread
        {
            get { return _spread; }
            set { _spread = value; MarkColumnModified(ColumnNameSpread); }
        }
        
        public const string ColumnNameIndexRate = "sdo_index_rate";
        private decimal? _indexRate;
        [Column(ColumnNameIndexRate)]
        public decimal? IndexRate
        {
            get { return _indexRate; }
            set { _indexRate = value; MarkColumnModified(ColumnNameIndexRate); }
        }
        
        public const string ColumnNameFloorRate = "sdo_floor_rate";
        private decimal? _floorRate;
        [Column(ColumnNameFloorRate)]
        public decimal? FloorRate
        {
            get { return _floorRate; }
            set { _floorRate = value; MarkColumnModified(ColumnNameFloorRate); }
        }
        
        public const string ColumnNameStrikeRate = "sdo_strike_rate";
        private decimal? _strikeRate;
        [Column(ColumnNameStrikeRate)]
        public decimal? StrikeRate
        {
            get { return _strikeRate; }
            set { _strikeRate = value; MarkColumnModified(ColumnNameStrikeRate); }
        }
        
        public const string ColumnNameCapRate = "sdo_cap_rate";
        private decimal? _capRate;
        [Column(ColumnNameCapRate)]
        public decimal? CapRate
        {
            get { return _capRate; }
            set { _capRate = value; MarkColumnModified(ColumnNameCapRate); }
        }
        
        public const string ColumnNamePaymentDate = "sdo_payment_dt";
        private DateTime? _paymentDate;
        [Column(ColumnNamePaymentDate)]
        public DateTime? PaymentDate
        {
            get { return _paymentDate; }
            set { _paymentDate = value; MarkColumnModified(ColumnNamePaymentDate); }
        }
        
        public const string ColumnNameRateResetDate = "sdo_rate_reset_dt";
        private DateTime? _rateResetDate;
        [Column(ColumnNameRateResetDate)]
        public DateTime? RateResetDate
        {
            get { return _rateResetDate; }
            set { _rateResetDate = value; MarkColumnModified(ColumnNameRateResetDate); }
        }
        
        public const string ColumnNameRateFixingDate = "sdo_rate_fixing_date";
        private DateTime? _rateFixingDate;
        [Column(ColumnNameRateFixingDate)]
        public DateTime? RateFixingDate
        {
            get { return _rateFixingDate; }
            set { _rateFixingDate = value; MarkColumnModified(ColumnNameRateFixingDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_sef_fix_message")]
    [PrimaryKey("sfm_sef_fix_message_id")]
    [ExplicitColumns]
    public class FIXMessageTableModel : TableModel
    {
        
        public const string ColumnNameId = "sfm_sef_fix_message_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "sfm_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameEntityId = "sfm_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameSendingTime = "sfm_sending_time";
        private DateTime _sendingTime;
        [Column(ColumnNameSendingTime)]
        public DateTime SendingTime
        {
            get { return _sendingTime; }
            set { _sendingTime = value; MarkColumnModified(ColumnNameSendingTime); }
        }
        
        public const string ColumnNameOriginalSendingTime = "sfm_original_sending_time";
        private DateTime? _originalSendingTime;
        [Column(ColumnNameOriginalSendingTime)]
        public DateTime? OriginalSendingTime
        {
            get { return _originalSendingTime; }
            set { _originalSendingTime = value; MarkColumnModified(ColumnNameOriginalSendingTime); }
        }
        
        public const string ColumnNameMessageType = "sfm_rv_message_type";
        private int? _messageType;
        [Column(ColumnNameMessageType)]
        public int? MessageType
        {
            get { return _messageType; }
            set { _messageType = value; MarkColumnModified(ColumnNameMessageType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_sef_fix_message_alias")]
    [PrimaryKey("sfma_sef_fix_message_alias_id")]
    [ExplicitColumns]
    public class FIXMessageAliasTableModel : TableModel
    {
        
        public const string ColumnNameId = "sfma_sef_fix_message_alias_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameFIXMessageId = "sfma_sfm_sef_fix_message_id";
        private int _fIXMessageId;
        [Column(ColumnNameFIXMessageId)]
        public int FIXMessageId
        {
            get { return _fIXMessageId; }
            set { _fIXMessageId = value; MarkColumnModified(ColumnNameFIXMessageId); }
        }
        
        public const string ColumnNameAlias = "sfma_sef_alias";
        private string _alias;
        [Column(ColumnNameAlias)]
        public string Alias
        {
            get { return _alias; }
            set { _alias = value; MarkColumnModified(ColumnNameAlias); }
        }
        
        public const string ColumnNameAliasType = "sfma_rv_alias_type";
        private int _aliasType;
        [Column(ColumnNameAliasType)]
        public int AliasType
        {
            get { return _aliasType; }
            set { _aliasType = value; MarkColumnModified(ColumnNameAliasType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_sef_fix_message_correction")]
    [PrimaryKey("sfmc_sef_fix_message_correction_id")]
    [ExplicitColumns]
    public class FIXMessageCorrectionTableModel : TableModel
    {
        
        public const string ColumnNameId = "sfmc_sef_fix_message_correction_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameFIXMessageId = "sfmc_sfm_sef_fix_message_id";
        private int _fIXMessageId;
        [Column(ColumnNameFIXMessageId)]
        public int FIXMessageId
        {
            get { return _fIXMessageId; }
            set { _fIXMessageId = value; MarkColumnModified(ColumnNameFIXMessageId); }
        }
        
        public const string ColumnNamePlatformId = "sfmc_platform_id";
        private string _platformId;
        [Column(ColumnNamePlatformId)]
        public string PlatformId
        {
            get { return _platformId; }
            set { _platformId = value; MarkColumnModified(ColumnNamePlatformId); }
        }
        
        public const string ColumnNameLifecycleType = "sfmc_rv_lifecycle_type";
        private int _lifecycleType;
        [Column(ColumnNameLifecycleType)]
        public int LifecycleType
        {
            get { return _lifecycleType; }
            set { _lifecycleType = value; MarkColumnModified(ColumnNameLifecycleType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_sef_fix_message_detail")]
    [PrimaryKey("sfmd_sef_fix_message_detail_id")]
    [ExplicitColumns]
    public class FIXMessageDetailTableModel : TableModel
    {
        
        public const string ColumnNameId = "sfmd_sef_fix_message_detail_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameFIXMessageId = "sfmd_sfm_sef_fix_message_id";
        private int _fIXMessageId;
        [Column(ColumnNameFIXMessageId)]
        public int FIXMessageId
        {
            get { return _fIXMessageId; }
            set { _fIXMessageId = value; MarkColumnModified(ColumnNameFIXMessageId); }
        }
        
        public const string ColumnNameTradeMandateType = "sfmd_rv_trade_mandate_type";
        private int? _tradeMandateType;
        [Column(ColumnNameTradeMandateType)]
        public int? TradeMandateType
        {
            get { return _tradeMandateType; }
            set { _tradeMandateType = value; MarkColumnModified(ColumnNameTradeMandateType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_settings")]
    [PrimaryKey("set_settings_id")]
    [ExplicitColumns]
    public class SettingTableModel : TableModel
    {
        
        public const string ColumnNameId = "set_settings_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameUserId = "set_us_user_id";
        private int _userId;
        [Column(ColumnNameUserId)]
        public int UserId
        {
            get { return _userId; }
            set { _userId = value; MarkColumnModified(ColumnNameUserId); }
        }
        
        public const string ColumnNameSettingGroup = "set_rv_settings_group";
        private int _settingGroup;
        [Column(ColumnNameSettingGroup)]
        public int SettingGroup
        {
            get { return _settingGroup; }
            set { _settingGroup = value; MarkColumnModified(ColumnNameSettingGroup); }
        }
        
        public const string ColumnNameSettingValues = "set_setting_values";
        private string _settingValues;
        [Column(ColumnNameSettingValues)]
        public string SettingValues
        {
            get { return _settingValues; }
            set { _settingValues = value; MarkColumnModified(ColumnNameSettingValues); }
        }
        
        public const string ColumnNameSettingType = "set_rv_setting_type";
        private int? _settingType;
        [Column(ColumnNameSettingType)]
        public int? SettingType
        {
            get { return _settingType; }
            set { _settingType = value; MarkColumnModified(ColumnNameSettingType); }
        }
        
        public const string ColumnNameSettingClass = "set_rv_settings_class";
        private int? _settingClass;
        [Column(ColumnNameSettingClass)]
        public int? SettingClass
        {
            get { return _settingClass; }
            set { _settingClass = value; MarkColumnModified(ColumnNameSettingClass); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_termination_hypo_fee")]
    [PrimaryKey("thf_termination_hypo_fee_id")]
    [ExplicitColumns]
    public class TerminationHypoFeeTableModel : TableModel
    {
        
        public const string ColumnNameId = "thf_termination_hypo_fee_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameProductValuationId = "thf_dh_daily_trans_hist_id";
        private int _productValuationId;
        [Column(ColumnNameProductValuationId)]
        public int ProductValuationId
        {
            get { return _productValuationId; }
            set { _productValuationId = value; MarkColumnModified(ColumnNameProductValuationId); }
        }
        
        public const string ColumnNameFee = "thf_fee";
        private decimal _fee;
        [Column(ColumnNameFee)]
        public decimal Fee
        {
            get { return _fee; }
            set { _fee = value; MarkColumnModified(ColumnNameFee); }
        }
        
        public const string ColumnNameFeeType = "thf_rv_fee_type";
        private int _feeType;
        [Column(ColumnNameFeeType)]
        public int FeeType
        {
            get { return _feeType; }
            set { _feeType = value; MarkColumnModified(ColumnNameFeeType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_tier_value")]
    [PrimaryKey("tv_tier_value_id")]
    [ExplicitColumns]
    public class LoanServicerFeeValueTableModel : TableModel
    {
        
        public const string ColumnNameId = "tv_tier_value_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameFeeName = "tv_rvs_tier_name";
        private int _feeName;
        [Column(ColumnNameFeeName)]
        public int FeeName
        {
            get { return _feeName; }
            set { _feeName = value; MarkColumnModified(ColumnNameFeeName); }
        }
        
        public const string ColumnNameMin = "rv_tier_min";
        private decimal? _min;
        [Column(ColumnNameMin)]
        public decimal? Min
        {
            get { return _min; }
            set { _min = value; MarkColumnModified(ColumnNameMin); }
        }
        
        public const string ColumnNameMax = "rv_tier_max";
        private decimal? _max;
        [Column(ColumnNameMax)]
        public decimal? Max
        {
            get { return _max; }
            set { _max = value; MarkColumnModified(ColumnNameMax); }
        }
        
        public const string ColumnNameFeeValue = "rv_tier_value";
        private decimal _feeValue;
        [Column(ColumnNameFeeValue)]
        public decimal FeeValue
        {
            get { return _feeValue; }
            set { _feeValue = value; MarkColumnModified(ColumnNameFeeValue); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_tran_link")]
    [PrimaryKey("ah_trans_link_id")]
    [ExplicitColumns]
    public class TransactionLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "ah_trans_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "ah_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameLinkedTransactionId = "ah_tr_trans_link_id";
        private int _linkedTransactionId;
        [Column(ColumnNameLinkedTransactionId)]
        public int LinkedTransactionId
        {
            get { return _linkedTransactionId; }
            set { _linkedTransactionId = value; MarkColumnModified(ColumnNameLinkedTransactionId); }
        }
        
        public const string ColumnNameLinkDirection = "ah_dd_link";
        private string _linkDirection;
        [Column(ColumnNameLinkDirection)]
        public string LinkDirection
        {
            get { return _linkDirection; }
            set { _linkDirection = value; MarkColumnModified(ColumnNameLinkDirection); }
        }
        
        public const string ColumnNameLinkType = "ah_rv_link_id";
        private int? _linkType;
        [Column(ColumnNameLinkType)]
        public int? LinkType
        {
            get { return _linkType; }
            set { _linkType = value; MarkColumnModified(ColumnNameLinkType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_tran_quote")]
    [PrimaryKey("tq_tran_quote_id")]
    [ExplicitColumns]
    public class TransactionQuoteTableModel : TableModel
    {
        
        public const string ColumnNameId = "tq_tran_quote_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "tq_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameStatus = "tq_dd_tran_qt_status";
        private string _status;
        [Column(ColumnNameStatus)]
        public string Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
        
        public const string ColumnNameExpectedClosing = "tq_expct_cls_dt";
        private DateTime? _expectedClosing;
        [Column(ColumnNameExpectedClosing)]
        public DateTime? ExpectedClosing
        {
            get { return _expectedClosing; }
            set { _expectedClosing = value; MarkColumnModified(ColumnNameExpectedClosing); }
        }
        
        public const string ColumnNameProduct = "tq_dd_product";
        private string _product;
        [Column(ColumnNameProduct)]
        public string Product
        {
            get { return _product; }
            set { _product = value; MarkColumnModified(ColumnNameProduct); }
        }
        
        public const string ColumnNameMidBidAsk = "tq_dd_mid_bid_ask";
        private string _midBidAsk;
        [Column(ColumnNameMidBidAsk)]
        public string MidBidAsk
        {
            get { return _midBidAsk; }
            set { _midBidAsk = value; MarkColumnModified(ColumnNameMidBidAsk); }
        }
        
        public const string ColumnNameDescriptiveNotional = "tq_nominal_notional";
        private string _descriptiveNotional;
        [Column(ColumnNameDescriptiveNotional)]
        public string DescriptiveNotional
        {
            get { return _descriptiveNotional; }
            set { _descriptiveNotional = value; MarkColumnModified(ColumnNameDescriptiveNotional); }
        }
        
        public const string ColumnNameDescriptiveStrike = "tq_nominal_strike";
        private string _descriptiveStrike;
        [Column(ColumnNameDescriptiveStrike)]
        public string DescriptiveStrike
        {
            get { return _descriptiveStrike; }
            set { _descriptiveStrike = value; MarkColumnModified(ColumnNameDescriptiveStrike); }
        }
        
        public const string ColumnNameDescriptiveSpread = "tq_nominal_spread";
        private string _descriptiveSpread;
        [Column(ColumnNameDescriptiveSpread)]
        public string DescriptiveSpread
        {
            get { return _descriptiveSpread; }
            set { _descriptiveSpread = value; MarkColumnModified(ColumnNameDescriptiveSpread); }
        }
        
        public const string ColumnNameNotionalCurrencyId = "tq_rv_nominal_curr_id";
        private int? _notionalCurrencyId;
        [Column(ColumnNameNotionalCurrencyId)]
        public int? NotionalCurrencyId
        {
            get { return _notionalCurrencyId; }
            set { _notionalCurrencyId = value; MarkColumnModified(ColumnNameNotionalCurrencyId); }
        }
        
        public const string ColumnNamePremiumPaymentCurrencyRefId = "tq_rv_prem_currency";
        private int? _premiumPaymentCurrencyRefId;
        [Column(ColumnNamePremiumPaymentCurrencyRefId)]
        public int? PremiumPaymentCurrencyRefId
        {
            get { return _premiumPaymentCurrencyRefId; }
            set { _premiumPaymentCurrencyRefId = value; MarkColumnModified(ColumnNamePremiumPaymentCurrencyRefId); }
        }
        
        public const string ColumnNamePremiumPaymentDate = "tq_premium_pmnt_dt";
        private DateTime? _premiumPaymentDate;
        [Column(ColumnNamePremiumPaymentDate)]
        public DateTime? PremiumPaymentDate
        {
            get { return _premiumPaymentDate; }
            set { _premiumPaymentDate = value; MarkColumnModified(ColumnNamePremiumPaymentDate); }
        }
        
        public const string ColumnNamePremiumPaymentAmount = "tq_premium_pmnt";
        private decimal? _premiumPaymentAmount;
        [Column(ColumnNamePremiumPaymentAmount)]
        public decimal? PremiumPaymentAmount
        {
            get { return _premiumPaymentAmount; }
            set { _premiumPaymentAmount = value; MarkColumnModified(ColumnNamePremiumPaymentAmount); }
        }
        
        public const string ColumnNameNotional = "tq_notional";
        private decimal? _notional;
        [Column(ColumnNameNotional)]
        public decimal? Notional
        {
            get { return _notional; }
            set { _notional = value; MarkColumnModified(ColumnNameNotional); }
        }
        
        public const string ColumnNameDescriptiveStrike2 = "tq_nominal_strike2";
        private string _descriptiveStrike2;
        [Column(ColumnNameDescriptiveStrike2)]
        public string DescriptiveStrike2
        {
            get { return _descriptiveStrike2; }
            set { _descriptiveStrike2 = value; MarkColumnModified(ColumnNameDescriptiveStrike2); }
        }
        
        public const string ColumnNameDescriptiveProduct = "tq_dd_nominal_product";
        private string _descriptiveProduct;
        [Column(ColumnNameDescriptiveProduct)]
        public string DescriptiveProduct
        {
            get { return _descriptiveProduct; }
            set { _descriptiveProduct = value; MarkColumnModified(ColumnNameDescriptiveProduct); }
        }
        
        public const string ColumnNameValuationCurrencyId = "tq_rv_valuation_curr";
        private int? _valuationCurrencyId;
        [Column(ColumnNameValuationCurrencyId)]
        public int? ValuationCurrencyId
        {
            get { return _valuationCurrencyId; }
            set { _valuationCurrencyId = value; MarkColumnModified(ColumnNameValuationCurrencyId); }
        }
        
        public const string ColumnNameValueMethod = "tq_dd_value_yn";
        private string _valueMethod;
        [Column(ColumnNameValueMethod)]
        public string ValueMethod
        {
            get { return _valueMethod; }
            set { _valueMethod = value; MarkColumnModified(ColumnNameValueMethod); }
        }
        
        public const string ColumnNameWebDisplay = "tq_dd_web_display_yn";
        private string _webDisplay;
        [Column(ColumnNameWebDisplay)]
        public string WebDisplay
        {
            get { return _webDisplay; }
            set { _webDisplay = value; MarkColumnModified(ColumnNameWebDisplay); }
        }
        
        public const string ColumnNameTerminationDate = "tq_termination_dt";
        private DateTime? _terminationDate;
        [Column(ColumnNameTerminationDate)]
        public DateTime? TerminationDate
        {
            get { return _terminationDate; }
            set { _terminationDate = value; MarkColumnModified(ColumnNameTerminationDate); }
        }
        
        public const string ColumnNameTerminationPremiumAmount = "tq_term_prem_amt";
        private decimal? _terminationPremiumAmount;
        [Column(ColumnNameTerminationPremiumAmount)]
        public decimal? TerminationPremiumAmount
        {
            get { return _terminationPremiumAmount; }
            set { _terminationPremiumAmount = value; MarkColumnModified(ColumnNameTerminationPremiumAmount); }
        }
        
        public const string ColumnNameTerminationPremiumCurrencyId = "tq_rv_term_prem_curr";
        private int? _terminationPremiumCurrencyId;
        [Column(ColumnNameTerminationPremiumCurrencyId)]
        public int? TerminationPremiumCurrencyId
        {
            get { return _terminationPremiumCurrencyId; }
            set { _terminationPremiumCurrencyId = value; MarkColumnModified(ColumnNameTerminationPremiumCurrencyId); }
        }
        
        public const string ColumnNameBuyOrSell = "tq_dd_buy_sell";
        private string _buyOrSell;
        [Column(ColumnNameBuyOrSell)]
        public string BuyOrSell
        {
            get { return _buyOrSell; }
            set { _buyOrSell = value; MarkColumnModified(ColumnNameBuyOrSell); }
        }
        
        public const string ColumnNameTransactionDrillDown = "tq_dd_drilldown_yn";
        private string _transactionDrillDown;
        [Column(ColumnNameTransactionDrillDown)]
        public string TransactionDrillDown
        {
            get { return _transactionDrillDown; }
            set { _transactionDrillDown = value; MarkColumnModified(ColumnNameTransactionDrillDown); }
        }
        
        public const string ColumnNamePartialTerminationNotional = "tq_partial_term_notional";
        private decimal? _partialTerminationNotional;
        [Column(ColumnNamePartialTerminationNotional)]
        public decimal? PartialTerminationNotional
        {
            get { return _partialTerminationNotional; }
            set { _partialTerminationNotional = value; MarkColumnModified(ColumnNamePartialTerminationNotional); }
        }
        
        public const string ColumnNameParentTransactionQuoteId = "tq_parent_tq_tran_quote_id";
        private int? _parentTransactionQuoteId;
        [Column(ColumnNameParentTransactionQuoteId)]
        public int? ParentTransactionQuoteId
        {
            get { return _parentTransactionQuoteId; }
            set { _parentTransactionQuoteId = value; MarkColumnModified(ColumnNameParentTransactionQuoteId); }
        }
        
        public const string ColumnNameTerminationTradeDate = "tq_term_trade_dt";
        private DateTime? _terminationTradeDate;
        [Column(ColumnNameTerminationTradeDate)]
        public DateTime? TerminationTradeDate
        {
            get { return _terminationTradeDate; }
            set { _terminationTradeDate = value; MarkColumnModified(ColumnNameTerminationTradeDate); }
        }
        
        public const string ColumnNameCashSettlementDate = "tq_cash_settle_dt";
        private DateTime? _cashSettlementDate;
        [Column(ColumnNameCashSettlementDate)]
        public DateTime? CashSettlementDate
        {
            get { return _cashSettlementDate; }
            set { _cashSettlementDate = value; MarkColumnModified(ColumnNameCashSettlementDate); }
        }
        
        public const string ColumnNameDescriptiveIndex = "tq_nominal_index";
        private string _descriptiveIndex;
        [Column(ColumnNameDescriptiveIndex)]
        public string DescriptiveIndex
        {
            get { return _descriptiveIndex; }
            set { _descriptiveIndex = value; MarkColumnModified(ColumnNameDescriptiveIndex); }
        }
        
        public const string ColumnNameTerminationPremiumDate = "tq_term_prem_pmt_dt";
        private DateTime? _terminationPremiumDate;
        [Column(ColumnNameTerminationPremiumDate)]
        public DateTime? TerminationPremiumDate
        {
            get { return _terminationPremiumDate; }
            set { _terminationPremiumDate = value; MarkColumnModified(ColumnNameTerminationPremiumDate); }
        }
        
        public const string ColumnNamePeriodicNotionalExchange = "tq_xccy_periodic_principal_exchange_bit";
        private bool? _periodicNotionalExchange;
        [Column(ColumnNamePeriodicNotionalExchange)]
        public bool? PeriodicNotionalExchange
        {
            get { return _periodicNotionalExchange; }
            set { _periodicNotionalExchange = value; MarkColumnModified(ColumnNamePeriodicNotionalExchange); }
        }
        
        public const string ColumnNameProductTypeRefId = "tq_rv_product";
        private int? _productTypeRefId;
        [Column(ColumnNameProductTypeRefId)]
        public int? ProductTypeRefId
        {
            get { return _productTypeRefId; }
            set { _productTypeRefId = value; MarkColumnModified(ColumnNameProductTypeRefId); }
        }
        
        public const string ColumnNameTerminationSpotRate = "tq_termination_spot_rate";
        private decimal? _terminationSpotRate;
        [Column(ColumnNameTerminationSpotRate)]
        public decimal? TerminationSpotRate
        {
            get { return _terminationSpotRate; }
            set { _terminationSpotRate = value; MarkColumnModified(ColumnNameTerminationSpotRate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_trans_closing_info")]
    [PrimaryKey("ci_closing_info_id")]
    [ExplicitColumns]
    public class TransactionClosingInfoTableModel : TableModel
    {
        
        public const string ColumnNameId = "ci_closing_info_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "ci_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameSpread = "ci_closing_spread";
        private decimal? _spread;
        [Column(ColumnNameSpread)]
        public decimal? Spread
        {
            get { return _spread; }
            set { _spread = value; MarkColumnModified(ColumnNameSpread); }
        }
        
        public const string ColumnNameKeyRate = "ci_key_rate_cls";
        private decimal? _keyRate;
        [Column(ColumnNameKeyRate)]
        public decimal? KeyRate
        {
            get { return _keyRate; }
            set { _keyRate = value; MarkColumnModified(ColumnNameKeyRate); }
        }
        
        public const string ColumnNameKeySwapRate = "ci_key_swap_rate_cls";
        private decimal? _keySwapRate;
        [Column(ColumnNameKeySwapRate)]
        public decimal? KeySwapRate
        {
            get { return _keySwapRate; }
            set { _keySwapRate = value; MarkColumnModified(ColumnNameKeySwapRate); }
        }
        
        public const string ColumnNameKeySwapSpreadRate = "ci_key_swp_sprd_rate_cls";
        private decimal? _keySwapSpreadRate;
        [Column(ColumnNameKeySwapSpreadRate)]
        public decimal? KeySwapSpreadRate
        {
            get { return _keySwapSpreadRate; }
            set { _keySwapSpreadRate = value; MarkColumnModified(ColumnNameKeySwapSpreadRate); }
        }
        
        public const string ColumnNameBondInformationId = "ci_bd_bond_det";
        private int? _bondInformationId;
        [Column(ColumnNameBondInformationId)]
        public int? BondInformationId
        {
            get { return _bondInformationId; }
            set { _bondInformationId = value; MarkColumnModified(ColumnNameBondInformationId); }
        }
        
        public const string ColumnNameKeySwapId = "ci_rv_key_swap_id";
        private int? _keySwapId;
        [Column(ColumnNameKeySwapId)]
        public int? KeySwapId
        {
            get { return _keySwapId; }
            set { _keySwapId = value; MarkColumnModified(ColumnNameKeySwapId); }
        }
        
        public const string ColumnNameKeySwapSpreadId = "ci_rv_key_swp_sprd_id";
        private int? _keySwapSpreadId;
        [Column(ColumnNameKeySwapSpreadId)]
        public int? KeySwapSpreadId
        {
            get { return _keySwapSpreadId; }
            set { _keySwapSpreadId = value; MarkColumnModified(ColumnNameKeySwapSpreadId); }
        }
        
        public const string ColumnNameMidMarketAmount = "ci_mid_mkt_amt";
        private decimal? _midMarketAmount;
        [Column(ColumnNameMidMarketAmount)]
        public decimal? MidMarketAmount
        {
            get { return _midMarketAmount; }
            set { _midMarketAmount = value; MarkColumnModified(ColumnNameMidMarketAmount); }
        }
        
        public const string ColumnNameMidMarketRate = "ci_mid_mkt_rate";
        private decimal? _midMarketRate;
        [Column(ColumnNameMidMarketRate)]
        public decimal? MidMarketRate
        {
            get { return _midMarketRate; }
            set { _midMarketRate = value; MarkColumnModified(ColumnNameMidMarketRate); }
        }
        
        public const string ColumnNameAuctionNote = "ci_auction_note";
        private string _auctionNote;
        [Column(ColumnNameAuctionNote)]
        public string AuctionNote
        {
            get { return _auctionNote; }
            set { _auctionNote = value; MarkColumnModified(ColumnNameAuctionNote); }
        }
        
        public const string ColumnNameAuctionType = "ci_dd_negot_auction";
        private string _auctionType;
        [Column(ColumnNameAuctionType)]
        public string AuctionType
        {
            get { return _auctionType; }
            set { _auctionType = value; MarkColumnModified(ColumnNameAuctionType); }
        }
        
        public const string ColumnNameBankWireReference = "ci_bnk_wire_ref";
        private string _bankWireReference;
        [Column(ColumnNameBankWireReference)]
        public string BankWireReference
        {
            get { return _bankWireReference; }
            set { _bankWireReference = value; MarkColumnModified(ColumnNameBankWireReference); }
        }
        
        public const string ColumnNameSponsorWireReference = "ci_spnsr_wire_ref";
        private string _sponsorWireReference;
        [Column(ColumnNameSponsorWireReference)]
        public string SponsorWireReference
        {
            get { return _sponsorWireReference; }
            set { _sponsorWireReference = value; MarkColumnModified(ColumnNameSponsorWireReference); }
        }
        
        public const string ColumnNameClosingDate = "ci_closing_dt";
        private DateTime? _closingDate;
        [Column(ColumnNameClosingDate)]
        public DateTime? ClosingDate
        {
            get { return _closingDate; }
            set { _closingDate = value; MarkColumnModified(ColumnNameClosingDate); }
        }
        
        public const string ColumnNameClosingType = "ci_dd_closing_type";
        private string _closingType;
        [Column(ColumnNameClosingType)]
        public string ClosingType
        {
            get { return _closingType; }
            set { _closingType = value; MarkColumnModified(ColumnNameClosingType); }
        }
        
        public const string ColumnNameAuctionElapsedTimeBids = "ci_elapsed_time_bids";
        private int? _auctionElapsedTimeBids;
        [Column(ColumnNameAuctionElapsedTimeBids)]
        public int? AuctionElapsedTimeBids
        {
            get { return _auctionElapsedTimeBids; }
            set { _auctionElapsedTimeBids = value; MarkColumnModified(ColumnNameAuctionElapsedTimeBids); }
        }
        
        public const string ColumnNameAuctionElapsedTimeTotal = "ci_elapsed_time_total";
        private int? _auctionElapsedTimeTotal;
        [Column(ColumnNameAuctionElapsedTimeTotal)]
        public int? AuctionElapsedTimeTotal
        {
            get { return _auctionElapsedTimeTotal; }
            set { _auctionElapsedTimeTotal = value; MarkColumnModified(ColumnNameAuctionElapsedTimeTotal); }
        }
        
        public const string ColumnNameBidType = "ci_rv_bid_type";
        private int? _bidType;
        [Column(ColumnNameBidType)]
        public int? BidType
        {
            get { return _bidType; }
            set { _bidType = value; MarkColumnModified(ColumnNameBidType); }
        }
        
        public const string ColumnNameAuthorizedById = "ci_authorized_id";
        private int? _authorizedById;
        [Column(ColumnNameAuthorizedById)]
        public int? AuthorizedById
        {
            get { return _authorizedById; }
            set { _authorizedById = value; MarkColumnModified(ColumnNameAuthorizedById); }
        }
        
        public const string ColumnNameAuthorizedDate = "ci_authorized_dt";
        private DateTime? _authorizedDate;
        [Column(ColumnNameAuthorizedDate)]
        public DateTime? AuthorizedDate
        {
            get { return _authorizedDate; }
            set { _authorizedDate = value; MarkColumnModified(ColumnNameAuthorizedDate); }
        }
        
        public const string ColumnNameAuthorizationReceivedById = "ci_authorized_rcvd_id";
        private int? _authorizationReceivedById;
        [Column(ColumnNameAuthorizationReceivedById)]
        public int? AuthorizationReceivedById
        {
            get { return _authorizationReceivedById; }
            set { _authorizationReceivedById = value; MarkColumnModified(ColumnNameAuthorizationReceivedById); }
        }
        
        public const string ColumnNameAuctionManagerContactId = "ci_auction_mgr_rc_contact_id";
        private int? _auctionManagerContactId;
        [Column(ColumnNameAuctionManagerContactId)]
        public int? AuctionManagerContactId
        {
            get { return _auctionManagerContactId; }
            set { _auctionManagerContactId = value; MarkColumnModified(ColumnNameAuctionManagerContactId); }
        }
        
        public const string ColumnNameDv01 = "ci_mid_mkt_dv01";
        private decimal? _dv01;
        [Column(ColumnNameDv01)]
        public decimal? Dv01
        {
            get { return _dv01; }
            set { _dv01 = value; MarkColumnModified(ColumnNameDv01); }
        }
        
        public const string ColumnNameMidMarketSource = "ci_rv_mid_market_source";
        private int? _midMarketSource;
        [Column(ColumnNameMidMarketSource)]
        public int? MidMarketSource
        {
            get { return _midMarketSource; }
            set { _midMarketSource = value; MarkColumnModified(ColumnNameMidMarketSource); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_trans_contact_rel")]
    [PrimaryKey("tc_contact_rel_id")]
    [ExplicitColumns]
    public class ContactTransactionRelationshipTableModel : TableModel
    {
        
        public const string ColumnNameId = "tc_contact_rel_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityTransactionRelationship = "tc_te_trans_relation_id";
        private int _entityTransactionRelationship;
        [Column(ColumnNameEntityTransactionRelationship)]
        public int EntityTransactionRelationship
        {
            get { return _entityTransactionRelationship; }
            set { _entityTransactionRelationship = value; MarkColumnModified(ColumnNameEntityTransactionRelationship); }
        }
        
        public const string ColumnNameContactId = "tc_rc_contact_id";
        private int _contactId;
        [Column(ColumnNameContactId)]
        public int ContactId
        {
            get { return _contactId; }
            set { _contactId = value; MarkColumnModified(ColumnNameContactId); }
        }
        
        public const string ColumnNameContactRelationship = "tc_rv_rel_type_id";
        private int? _contactRelationship;
        [Column(ColumnNameContactRelationship)]
        public int? ContactRelationship
        {
            get { return _contactRelationship; }
            set { _contactRelationship = value; MarkColumnModified(ColumnNameContactRelationship); }
        }
        
        public const string ColumnNameNoticeDeliveryMethod = "tc_rv_notice_delivery_method_id";
        private int? _noticeDeliveryMethod;
        [Column(ColumnNameNoticeDeliveryMethod)]
        public int? NoticeDeliveryMethod
        {
            get { return _noticeDeliveryMethod; }
            set { _noticeDeliveryMethod = value; MarkColumnModified(ColumnNameNoticeDeliveryMethod); }
        }
        
        public const string ColumnNameBorrowerReportDeliveryMethod = "tc_rv_borrower_report_delivery_method";
        private int? _borrowerReportDeliveryMethod;
        [Column(ColumnNameBorrowerReportDeliveryMethod)]
        public int? BorrowerReportDeliveryMethod
        {
            get { return _borrowerReportDeliveryMethod; }
            set { _borrowerReportDeliveryMethod = value; MarkColumnModified(ColumnNameBorrowerReportDeliveryMethod); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_trans_entity_rel")]
    [PrimaryKey("te_trans_relation_id")]
    [ExplicitColumns]
    public class EntityTransactionRelationshipTableModel : TableModel
    {
        
        public const string ColumnNameId = "te_trans_relation_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "te_co_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameTransactionId = "te_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameEntityRelationshipRefId = "te_rv_rel_type_id";
        private int? _entityRelationshipRefId;
        [Column(ColumnNameEntityRelationshipRefId)]
        public int? EntityRelationshipRefId
        {
            get { return _entityRelationshipRefId; }
            set { _entityRelationshipRefId = value; MarkColumnModified(ColumnNameEntityRelationshipRefId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_trans_payment")]
    [PrimaryKey("tp_trans_payment_id")]
    [ExplicitColumns]
    public class TransactionPaymentTableModel : TableModel
    {
        
        public const string ColumnNameId = "tp_trans_payment_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "tp_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameBankPaymentGridId = "tp_bp_bnk_pmnt_grid_id";
        private int? _bankPaymentGridId;
        [Column(ColumnNameBankPaymentGridId)]
        public int? BankPaymentGridId
        {
            get { return _bankPaymentGridId; }
            set { _bankPaymentGridId = value; MarkColumnModified(ColumnNameBankPaymentGridId); }
        }
        
        public const string ColumnNamePaymentType = "tp_dd_sp_bnk";
        private string _paymentType;
        [Column(ColumnNamePaymentType)]
        public string PaymentType
        {
            get { return _paymentType; }
            set { _paymentType = value; MarkColumnModified(ColumnNamePaymentType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_transaction")]
    [PrimaryKey("tr_transaction_id")]
    [ExplicitColumns]
    public class TransactionTableModel : TableModel
    {
        
        public const string ColumnNameId = "tr_transaction_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameChathamGroupId = "tr_cg_chatham_grp_id";
        private int? _chathamGroupId;
        [Column(ColumnNameChathamGroupId)]
        public int? ChathamGroupId
        {
            get { return _chathamGroupId; }
            set { _chathamGroupId = value; MarkColumnModified(ColumnNameChathamGroupId); }
        }
        
        public const string ColumnNameChathamDeal = "tr_dd_chatham_deal";
        private string _chathamDeal;
        [Column(ColumnNameChathamDeal)]
        public string ChathamDeal
        {
            get { return _chathamDeal; }
            set { _chathamDeal = value; MarkColumnModified(ColumnNameChathamDeal); }
        }
        
        public const string ColumnNameNickname = "tr_nickname";
        private string _nickname;
        [Column(ColumnNameNickname)]
        public string Nickname
        {
            get { return _nickname; }
            set { _nickname = value; MarkColumnModified(ColumnNameNickname); }
        }
        
        public const string ColumnNameCRN = "tr_reference_nbr";
        private string _cRN;
        [Column(ColumnNameCRN)]
        public string CRN
        {
            get { return _cRN; }
            set { _cRN = value; MarkColumnModified(ColumnNameCRN); }
        }
        
        public const string ColumnNameTradeDate = "tr_trade_dt";
        private DateTime? _tradeDate;
        [Column(ColumnNameTradeDate)]
        public DateTime? TradeDate
        {
            get { return _tradeDate; }
            set { _tradeDate = value; MarkColumnModified(ColumnNameTradeDate); }
        }
        
        public const string ColumnNamePortfolio1Id = "tr_rv_portfolio1_id";
        private int? _portfolio1Id;
        [Column(ColumnNamePortfolio1Id)]
        public int? Portfolio1Id
        {
            get { return _portfolio1Id; }
            set { _portfolio1Id = value; MarkColumnModified(ColumnNamePortfolio1Id); }
        }
        
        public const string ColumnNamePortfolio2Id = "tr_rv_portfolio2_id";
        private int? _portfolio2Id;
        [Column(ColumnNamePortfolio2Id)]
        public int? Portfolio2Id
        {
            get { return _portfolio2Id; }
            set { _portfolio2Id = value; MarkColumnModified(ColumnNamePortfolio2Id); }
        }
        
        public const string ColumnNamePortfolio3Id = "tr_rv_portfolio3_id";
        private int? _portfolio3Id;
        [Column(ColumnNamePortfolio3Id)]
        public int? Portfolio3Id
        {
            get { return _portfolio3Id; }
            set { _portfolio3Id = value; MarkColumnModified(ColumnNamePortfolio3Id); }
        }
        
        public const string ColumnNameDescription = "tr_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameCreatedDate = "tr_create_dt";
        [ResultColumn(ColumnNameCreatedDate)]
        public DateTime? CreatedDate { get; set; }
        
        public const string ColumnNameCreatedByUserId = "tr_create_nm_id";
        [ResultColumn(ColumnNameCreatedByUserId)]
        public int? CreatedByUserId { get; set; }
        
        public const string ColumnNameClientReferenceNumber = "tr_client_ref_nbr";
        private string _clientReferenceNumber;
        [Column(ColumnNameClientReferenceNumber)]
        public string ClientReferenceNumber
        {
            get { return _clientReferenceNumber; }
            set { _clientReferenceNumber = value; MarkColumnModified(ColumnNameClientReferenceNumber); }
        }
        
        public const string ColumnNameRateManagerDeal = "tr_dd_ratemgr_deal_yn";
        private bool? _rateManagerDeal;
        [Column(ColumnNameRateManagerDeal)]
        public bool? RateManagerDeal
        {
            get { return _rateManagerDeal; }
            set { _rateManagerDeal = value; MarkColumnModified(ColumnNameRateManagerDeal); }
        }
        
        public const string ColumnNameBankReferenceNumber = "tr_bank_reference_nbr";
        private string _bankReferenceNumber;
        [Column(ColumnNameBankReferenceNumber)]
        public string BankReferenceNumber
        {
            get { return _bankReferenceNumber; }
            set { _bankReferenceNumber = value; MarkColumnModified(ColumnNameBankReferenceNumber); }
        }
        
        public const string ColumnNameBorrower = "tr_borrower";
        private string _borrower;
        [Column(ColumnNameBorrower)]
        public string Borrower
        {
            get { return _borrower; }
            set { _borrower = value; MarkColumnModified(ColumnNameBorrower); }
        }
        
        public const string ColumnNameHedgedItem = "tr_hedged_item";
        private string _hedgedItem;
        [Column(ColumnNameHedgedItem)]
        public string HedgedItem
        {
            get { return _hedgedItem; }
            set { _hedgedItem = value; MarkColumnModified(ColumnNameHedgedItem); }
        }
        
        public const string ColumnNameIsHypo = "tr_hypothetical_deal_bit";
        private bool? _isHypo;
        [Column(ColumnNameIsHypo)]
        public bool? IsHypo
        {
            get { return _isHypo; }
            set { _isHypo = value; MarkColumnModified(ColumnNameIsHypo); }
        }
        
        public const string ColumnNameGreatPlainsTransactionType = "tr_rv_transxn_type";
        private int? _greatPlainsTransactionType;
        [Column(ColumnNameGreatPlainsTransactionType)]
        public int? GreatPlainsTransactionType
        {
            get { return _greatPlainsTransactionType; }
            set { _greatPlainsTransactionType = value; MarkColumnModified(ColumnNameGreatPlainsTransactionType); }
        }
        
        public const string ColumnNameJurisdictionCountry = "tr_jurisdiction_country";
        private int? _jurisdictionCountry;
        [Column(ColumnNameJurisdictionCountry)]
        public int? JurisdictionCountry
        {
            get { return _jurisdictionCountry; }
            set { _jurisdictionCountry = value; MarkColumnModified(ColumnNameJurisdictionCountry); }
        }
        
        public const string ColumnNameLegacyShowOnValuationReportOverrideStartDate = "tr_show_on_valuation_report_override_start_dt";
        private DateTime? _legacyShowOnValuationReportOverrideStartDate;
        [Column(ColumnNameLegacyShowOnValuationReportOverrideStartDate)]
        public DateTime? LegacyShowOnValuationReportOverrideStartDate
        {
            get { return _legacyShowOnValuationReportOverrideStartDate; }
            set { _legacyShowOnValuationReportOverrideStartDate = value; MarkColumnModified(ColumnNameLegacyShowOnValuationReportOverrideStartDate); }
        }
        
        public const string ColumnNameLegacyShowOnValuationReportOverrideEndDate = "tr_show_on_valuation_report_override_end_dt";
        private DateTime? _legacyShowOnValuationReportOverrideEndDate;
        [Column(ColumnNameLegacyShowOnValuationReportOverrideEndDate)]
        public DateTime? LegacyShowOnValuationReportOverrideEndDate
        {
            get { return _legacyShowOnValuationReportOverrideEndDate; }
            set { _legacyShowOnValuationReportOverrideEndDate = value; MarkColumnModified(ColumnNameLegacyShowOnValuationReportOverrideEndDate); }
        }
        
        public const string ColumnNameLoanReferenceNumber = "tr_loan_reference_nbr";
        private string _loanReferenceNumber;
        [Column(ColumnNameLoanReferenceNumber)]
        public string LoanReferenceNumber
        {
            get { return _loanReferenceNumber; }
            set { _loanReferenceNumber = value; MarkColumnModified(ColumnNameLoanReferenceNumber); }
        }
        
        public const string ColumnNameTradeMatchingStatus = "tr_rv_misys_status";
        private int? _tradeMatchingStatus;
        [Column(ColumnNameTradeMatchingStatus)]
        public int? TradeMatchingStatus
        {
            get { return _tradeMatchingStatus; }
            set { _tradeMatchingStatus = value; MarkColumnModified(ColumnNameTradeMatchingStatus); }
        }
        
        public const string ColumnNameTradeMatchSentTo = "tr_sent_to_misys_rc_contact_id";
        private int? _tradeMatchSentTo;
        [Column(ColumnNameTradeMatchSentTo)]
        public int? TradeMatchSentTo
        {
            get { return _tradeMatchSentTo; }
            set { _tradeMatchSentTo = value; MarkColumnModified(ColumnNameTradeMatchSentTo); }
        }
        
        public const string ColumnNameTradeMatchSentToDate = "tr_sent_to_misys_dt";
        private DateTime? _tradeMatchSentToDate;
        [Column(ColumnNameTradeMatchSentToDate)]
        public DateTime? TradeMatchSentToDate
        {
            get { return _tradeMatchSentToDate; }
            set { _tradeMatchSentToDate = value; MarkColumnModified(ColumnNameTradeMatchSentToDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_transaction_active_date")]
    [PrimaryKey("tad_transaction_active_date_id")]
    [ExplicitColumns]
    public class TransactionActiveDateTableModel : TableModel
    {
        
        public const string ColumnNameId = "tad_transaction_active_date_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "tad_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameDateType = "tad_rv_date_type";
        private int _dateType;
        [Column(ColumnNameDateType)]
        public int DateType
        {
            get { return _dateType; }
            set { _dateType = value; MarkColumnModified(ColumnNameDateType); }
        }
        
        public const string ColumnNameStartDate = "tad_start_dt";
        private DateTime? _startDate;
        [Column(ColumnNameStartDate)]
        public DateTime? StartDate
        {
            get { return _startDate; }
            set { _startDate = value; MarkColumnModified(ColumnNameStartDate); }
        }
        
        public const string ColumnNameEndDate = "tad_end_dt";
        private DateTime? _endDate;
        [Column(ColumnNameEndDate)]
        public DateTime? EndDate
        {
            get { return _endDate; }
            set { _endDate = value; MarkColumnModified(ColumnNameEndDate); }
        }
        
        public const string ColumnNameAutoUpdate = "tad_auto_update_bit";
        private bool _autoUpdate;
        [Column(ColumnNameAutoUpdate)]
        public bool AutoUpdate
        {
            get { return _autoUpdate; }
            set { _autoUpdate = value; MarkColumnModified(ColumnNameAutoUpdate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_transaction_allocation")]
    [PrimaryKey("ta_allocation_id")]
    [ExplicitColumns]
    public class TransactionAllocationTableModel : TableModel
    {
        
        public const string ColumnNameId = "ta_allocation_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameInvoiceId = "ta_ind_invoice_id";
        private int _invoiceId;
        [Column(ColumnNameInvoiceId)]
        public int InvoiceId
        {
            get { return _invoiceId; }
            set { _invoiceId = value; MarkColumnModified(ColumnNameInvoiceId); }
        }
        
        public const string ColumnNameOfficeId = "ta_rv_office_id";
        private int _officeId;
        [Column(ColumnNameOfficeId)]
        public int OfficeId
        {
            get { return _officeId; }
            set { _officeId = value; MarkColumnModified(ColumnNameOfficeId); }
        }
        
        public const string ColumnNameAllocationPercent = "ta_allocation_percent";
        private decimal _allocationPercent;
        [Column(ColumnNameAllocationPercent)]
        public decimal AllocationPercent
        {
            get { return _allocationPercent; }
            set { _allocationPercent = value; MarkColumnModified(ColumnNameAllocationPercent); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_transaction_clearing")]
    [PrimaryKey("trc_transaction_clearing_id")]
    [ExplicitColumns]
    public class ClearingTableModel : TableModel
    {
        
        public const string ColumnNameId = "trc_transaction_clearing_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "trc_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameClearingCategory = "trc_rv_clearing_category";
        private int? _clearingCategory;
        [Column(ColumnNameClearingCategory)]
        public int? ClearingCategory
        {
            get { return _clearingCategory; }
            set { _clearingCategory = value; MarkColumnModified(ColumnNameClearingCategory); }
        }
        
        public const string ColumnNameClearingStatus = "trc_rv_clearing_status";
        private int? _clearingStatus;
        [Column(ColumnNameClearingStatus)]
        public int? ClearingStatus
        {
            get { return _clearingStatus; }
            set { _clearingStatus = value; MarkColumnModified(ColumnNameClearingStatus); }
        }
        
        public const string ColumnNameClearingSelection = "trc_rv_clearing_selection";
        private int? _clearingSelection;
        [Column(ColumnNameClearingSelection)]
        public int? ClearingSelection
        {
            get { return _clearingSelection; }
            set { _clearingSelection = value; MarkColumnModified(ColumnNameClearingSelection); }
        }
        
        public const string ColumnNameClearedDate = "trc_cleared_utc";
        private DateTime? _clearedDate;
        [Column(ColumnNameClearedDate)]
        public DateTime? ClearedDate
        {
            get { return _clearedDate; }
            set { _clearedDate = value; MarkColumnModified(ColumnNameClearedDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_transaction_fee")]
    [PrimaryKey("trf_transaction_fee_id")]
    [ExplicitColumns]
    public class TransactionFeeTableModel : TableModel
    {
        
        public const string ColumnNameId = "trf_transaction_fee_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameFeeCommentLinkId = "trf_fcl_fee_comment_link_id";
        private int? _feeCommentLinkId;
        [Column(ColumnNameFeeCommentLinkId)]
        public int? FeeCommentLinkId
        {
            get { return _feeCommentLinkId; }
            set { _feeCommentLinkId = value; MarkColumnModified(ColumnNameFeeCommentLinkId); }
        }
        
        public const string ColumnNameFeeType = "trf_rv_fee_type";
        private int? _feeType;
        [Column(ColumnNameFeeType)]
        public int? FeeType
        {
            get { return _feeType; }
            set { _feeType = value; MarkColumnModified(ColumnNameFeeType); }
        }
        
        public const string ColumnNameFeeAmount = "trf_fee_amount";
        private decimal? _feeAmount;
        [Column(ColumnNameFeeAmount)]
        public decimal? FeeAmount
        {
            get { return _feeAmount; }
            set { _feeAmount = value; MarkColumnModified(ColumnNameFeeAmount); }
        }
        
        public const string ColumnNameCreatedBy = "trf_create_nm_id";
        private int? _createdBy;
        [Column(ColumnNameCreatedBy)]
        public int? CreatedBy
        {
            get { return _createdBy; }
            set { _createdBy = value; MarkColumnModified(ColumnNameCreatedBy); }
        }
        
        public const string ColumnNameCreatedDate = "trf_create_dt";
        private DateTime? _createdDate;
        [Column(ColumnNameCreatedDate)]
        public DateTime? CreatedDate
        {
            get { return _createdDate; }
            set { _createdDate = value; MarkColumnModified(ColumnNameCreatedDate); }
        }
        
        public const string ColumnNameModifiedBy = "trf_modify_nm_id";
        private int? _modifiedBy;
        [Column(ColumnNameModifiedBy)]
        public int? ModifiedBy
        {
            get { return _modifiedBy; }
            set { _modifiedBy = value; MarkColumnModified(ColumnNameModifiedBy); }
        }
        
        public const string ColumnNameModifiedDate = "trf_modify_dt";
        private DateTime? _modifiedDate;
        [Column(ColumnNameModifiedDate)]
        public DateTime? ModifiedDate
        {
            get { return _modifiedDate; }
            set { _modifiedDate = value; MarkColumnModified(ColumnNameModifiedDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_transaction_identifier")]
    [PrimaryKey("ti_transaction_identifier_id")]
    [ExplicitColumns]
    public class TransactionIdentifierTableModel : TableModel
    {
        
        public const string ColumnNameId = "ti_transaction_identifier_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameIdentifier = "ti_identifier";
        private string _identifier;
        [Column(ColumnNameIdentifier)]
        public string Identifier
        {
            get { return _identifier; }
            set { _identifier = value; MarkColumnModified(ColumnNameIdentifier); }
        }
        
        public const string ColumnNameComponentId = "ti_cm_component_id";
        private int _componentId;
        [Column(ColumnNameComponentId)]
        public int ComponentId
        {
            get { return _componentId; }
            set { _componentId = value; MarkColumnModified(ColumnNameComponentId); }
        }
        
        public const string ColumnNameTransactionIdentifierType = "ti_rv_transaction_identifier_type_id";
        private int _transactionIdentifierType;
        [Column(ColumnNameTransactionIdentifierType)]
        public int TransactionIdentifierType
        {
            get { return _transactionIdentifierType; }
            set { _transactionIdentifierType = value; MarkColumnModified(ColumnNameTransactionIdentifierType); }
        }
        
        public const string ColumnNamePrefix = "ti_prefix";
        private string _prefix;
        [Column(ColumnNamePrefix)]
        public string Prefix
        {
            get { return _prefix; }
            set { _prefix = value; MarkColumnModified(ColumnNamePrefix); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_transaction_platform_history")]
    [PrimaryKey("tph_transaction_platform_history_id")]
    [ExplicitColumns]
    public class PlatformHistoryTableModel : TableModel
    {
        
        public const string ColumnNameId = "tph_transaction_platform_history_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "tph_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameVendorPlatformId = "tph_rvpl_vendor_platform_id";
        private int _vendorPlatformId;
        [Column(ColumnNameVendorPlatformId)]
        public int VendorPlatformId
        {
            get { return _vendorPlatformId; }
            set { _vendorPlatformId = value; MarkColumnModified(ColumnNameVendorPlatformId); }
        }
        
        public const string ColumnNameStatus = "tph_rv_status";
        private int _status;
        [Column(ColumnNameStatus)]
        public int Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
        
        public const string ColumnNameEnteredBy = "tph_entered_by_nm_id";
        private int _enteredBy;
        [Column(ColumnNameEnteredBy)]
        public int EnteredBy
        {
            get { return _enteredBy; }
            set { _enteredBy = value; MarkColumnModified(ColumnNameEnteredBy); }
        }
        
        public const string ColumnNameEnteredTimeUTC = "tph_entered_utc";
        private DateTime _enteredTimeUTC;
        [Column(ColumnNameEnteredTimeUTC)]
        public DateTime EnteredTimeUTC
        {
            get { return _enteredTimeUTC; }
            set { _enteredTimeUTC = value; MarkColumnModified(ColumnNameEnteredTimeUTC); }
        }
        
        public const string ColumnNamePlatformReferenceNumber = "tph_vendor_platform_reference_number";
        private string _platformReferenceNumber;
        [Column(ColumnNamePlatformReferenceNumber)]
        public string PlatformReferenceNumber
        {
            get { return _platformReferenceNumber; }
            set { _platformReferenceNumber = value; MarkColumnModified(ColumnNamePlatformReferenceNumber); }
        }
        
        public const string ColumnNameReportType = "tph_rv_report_type";
        private int? _reportType;
        [Column(ColumnNameReportType)]
        public int? ReportType
        {
            get { return _reportType; }
            set { _reportType = value; MarkColumnModified(ColumnNameReportType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_transaction_regulation_detail")]
    [PrimaryKey("trd_transaction_regulation_detail_id")]
    [ExplicitColumns]
    public class TransactionRegulationDetailTableModel : TableModel
    {
        
        public const string ColumnNameId = "trd_transaction_regulation_detail_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "trd_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameIsEUELinkExempt = "trd_eue_link_exempt_bit";
        private bool _isEUELinkExempt;
        [Column(ColumnNameIsEUELinkExempt)]
        public bool IsEUELinkExempt
        {
            get { return _isEUELinkExempt; }
            set { _isEUELinkExempt = value; MarkColumnModified(ColumnNameIsEUELinkExempt); }
        }
        
        public const string ColumnNameIsComfirmationReportExempt = "trd_confirmation_report_exempt_bit";
        private bool _isComfirmationReportExempt;
        [Column(ColumnNameIsComfirmationReportExempt)]
        public bool IsComfirmationReportExempt
        {
            get { return _isComfirmationReportExempt; }
            set { _isComfirmationReportExempt = value; MarkColumnModified(ColumnNameIsComfirmationReportExempt); }
        }
        
        public const string ColumnNameIsReportingSuppressed = "trd_report_exempt_bit";
        private bool _isReportingSuppressed;
        [Column(ColumnNameIsReportingSuppressed)]
        public bool IsReportingSuppressed
        {
            get { return _isReportingSuppressed; }
            set { _isReportingSuppressed = value; MarkColumnModified(ColumnNameIsReportingSuppressed); }
        }
        
        public const string ColumnNameIsInitialReportingManual = "trd_manual_initial_report_bit";
        private bool _isInitialReportingManual;
        [Column(ColumnNameIsInitialReportingManual)]
        public bool IsInitialReportingManual
        {
            get { return _isInitialReportingManual; }
            set { _isInitialReportingManual = value; MarkColumnModified(ColumnNameIsInitialReportingManual); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_transaction_salesforce_link")]
    [PrimaryKey("tsl_transaction_salesforce_link_id")]
    [ExplicitColumns]
    public class SalesforceTransactionJoinTableModel : TableModel
    {
        
        public const string ColumnNameId = "tsl_transaction_salesforce_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "tsl_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameSalesforceId = "tsl_salesforce_id";
        private string _salesforceId;
        [Column(ColumnNameSalesforceId)]
        public string SalesforceId
        {
            get { return _salesforceId; }
            set { _salesforceId = value; MarkColumnModified(ColumnNameSalesforceId); }
        }
        
        public const string ColumnNameLastSyncDate = "tsl_last_sync_dt";
        private DateTime _lastSyncDate;
        [Column(ColumnNameLastSyncDate)]
        public DateTime LastSyncDate
        {
            get { return _lastSyncDate; }
            set { _lastSyncDate = value; MarkColumnModified(ColumnNameLastSyncDate); }
        }
        
        public const string ColumnNameCreatedById = "tsl_create_nm_id";
        private int? _createdById;
        [Column(ColumnNameCreatedById)]
        public int? CreatedById
        {
            get { return _createdById; }
            set { _createdById = value; MarkColumnModified(ColumnNameCreatedById); }
        }
        
        public const string ColumnNameCreatedDate = "tsl_create_dto";
        private DateTimeOffset _createdDate;
        [Column(ColumnNameCreatedDate)]
        public DateTimeOffset CreatedDate
        {
            get { return _createdDate; }
            set { _createdDate = value; MarkColumnModified(ColumnNameCreatedDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_transaction_termination_workflow")]
    [PrimaryKey("ttw_transaction_termination_workflow_id")]
    [ExplicitColumns]
    public class TransactionTerminationWorkflowTableModel : TableModel
    {
        
        public const string ColumnNameId = "ttw_transaction_termination_workflow_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "ttw_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameStatus = "ttw_rv_status";
        private int _status;
        [Column(ColumnNameStatus)]
        public int Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
        
        public const string ColumnNameAssigneeContactId = "ttw_rc_contact_id_assignee";
        private int _assigneeContactId;
        [Column(ColumnNameAssigneeContactId)]
        public int AssigneeContactId
        {
            get { return _assigneeContactId; }
            set { _assigneeContactId = value; MarkColumnModified(ColumnNameAssigneeContactId); }
        }
        
        public const string ColumnNameStatusDate = "ttw_status_dto";
        private DateTimeOffset? _statusDate;
        [Column(ColumnNameStatusDate)]
        public DateTimeOffset? StatusDate
        {
            get { return _statusDate; }
            set { _statusDate = value; MarkColumnModified(ColumnNameStatusDate); }
        }
        
        public const string ColumnNameCreatedById = "ttw_create_nm_id";
        private int? _createdById;
        [Column(ColumnNameCreatedById)]
        public int? CreatedById
        {
            get { return _createdById; }
            set { _createdById = value; MarkColumnModified(ColumnNameCreatedById); }
        }
        
        public const string ColumnNameCreatedDate = "ttw_create_dto";
        private DateTimeOffset? _createdDate;
        [Column(ColumnNameCreatedDate)]
        public DateTimeOffset? CreatedDate
        {
            get { return _createdDate; }
            set { _createdDate = value; MarkColumnModified(ColumnNameCreatedDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_transaction_version")]
    [PrimaryKey("ver_transaction_version_id")]
    [ExplicitColumns]
    public class TransactionVersionTableModel : TableModel
    {
        
        public const string ColumnNameId = "ver_transaction_version_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "ver_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameLastUpdatedDate = "ver_last_updated_dto";
        private DateTimeOffset _lastUpdatedDate;
        [Column(ColumnNameLastUpdatedDate)]
        public DateTimeOffset LastUpdatedDate
        {
            get { return _lastUpdatedDate; }
            set { _lastUpdatedDate = value; MarkColumnModified(ColumnNameLastUpdatedDate); }
        }
        
        public const string ColumnNameCreatedBy = "ver_create_nm_id";
        private int? _createdBy;
        [Column(ColumnNameCreatedBy)]
        public int? CreatedBy
        {
            get { return _createdBy; }
            set { _createdBy = value; MarkColumnModified(ColumnNameCreatedBy); }
        }
        
        public const string ColumnNameCreatedDate = "ver_create_dto";
        private DateTimeOffset? _createdDate;
        [Column(ColumnNameCreatedDate)]
        public DateTimeOffset? CreatedDate
        {
            get { return _createdDate; }
            set { _createdDate = value; MarkColumnModified(ColumnNameCreatedDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_user")]
    [PrimaryKey("us_user_id")]
    [ExplicitColumns]
    public class UserTableModel : TableModel
    {
        
        public const string ColumnNameId = "us_user_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameContactId = "us_rc_contact_id";
        private int? _contactId;
        [Column(ColumnNameContactId)]
        public int? ContactId
        {
            get { return _contactId; }
            set { _contactId = value; MarkColumnModified(ColumnNameContactId); }
        }
        
        public const string ColumnNameLogonName = "us_logon_name";
        private string _logonName;
        [Column(ColumnNameLogonName)]
        public string LogonName
        {
            get { return _logonName; }
            set { _logonName = value; MarkColumnModified(ColumnNameLogonName); }
        }
        
        public const string ColumnNameEncryptedPassword = "us_encrypt_pswd";
        private string _encryptedPassword;
        [Column(ColumnNameEncryptedPassword)]
        public string EncryptedPassword
        {
            get { return _encryptedPassword; }
            set { _encryptedPassword = value; MarkColumnModified(ColumnNameEncryptedPassword); }
        }
        
        public const string ColumnNameEntityId = "us_rs_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameCreatedByContactId = "us_create_nm_id";
        private int? _createdByContactId;
        [Column(ColumnNameCreatedByContactId)]
        public int? CreatedByContactId
        {
            get { return _createdByContactId; }
            set { _createdByContactId = value; MarkColumnModified(ColumnNameCreatedByContactId); }
        }
        
        public const string ColumnNamePasswordExpiration = "us_pwd_expiration_dt";
        private DateTime _passwordExpiration;
        [Column(ColumnNamePasswordExpiration)]
        public DateTime PasswordExpiration
        {
            get { return _passwordExpiration; }
            set { _passwordExpiration = value; MarkColumnModified(ColumnNamePasswordExpiration); }
        }
        
        public const string ColumnNameHomePageId = "us_rv_homepage_id";
        private int? _homePageId;
        [Column(ColumnNameHomePageId)]
        public int? HomePageId
        {
            get { return _homePageId; }
            set { _homePageId = value; MarkColumnModified(ColumnNameHomePageId); }
        }
        
        public const string ColumnNameLocaleId = "us_wl_locale_id";
        private int? _localeId;
        [Column(ColumnNameLocaleId)]
        public int? LocaleId
        {
            get { return _localeId; }
            set { _localeId = value; MarkColumnModified(ColumnNameLocaleId); }
        }
        
        public const string ColumnNameActive = "us_active_user_bit";
        private bool? _active;
        [Column(ColumnNameActive)]
        public bool? Active
        {
            get { return _active; }
            set { _active = value; MarkColumnModified(ColumnNameActive); }
        }
        
        public const string ColumnNameLocked = "us_locked_bit";
        private bool _locked;
        [Column(ColumnNameLocked)]
        public bool Locked
        {
            get { return _locked; }
            set { _locked = value; MarkColumnModified(ColumnNameLocked); }
        }
        
        public const string ColumnNameAuthorizedByContactId = "us_rc_contact_id_authorized_by";
        private int? _authorizedByContactId;
        [Column(ColumnNameAuthorizedByContactId)]
        public int? AuthorizedByContactId
        {
            get { return _authorizedByContactId; }
            set { _authorizedByContactId = value; MarkColumnModified(ColumnNameAuthorizedByContactId); }
        }
        
        public const string ColumnNameNoteId = "us_nt_note_id";
        private int? _noteId;
        [Column(ColumnNameNoteId)]
        public int? NoteId
        {
            get { return _noteId; }
            set { _noteId = value; MarkColumnModified(ColumnNameNoteId); }
        }
        
        public const string ColumnNameHashingAlgorithm = "us_rv_hashing_algorithm";
        private int _hashingAlgorithm;
        [Column(ColumnNameHashingAlgorithm)]
        public int HashingAlgorithm
        {
            get { return _hashingAlgorithm; }
            set { _hashingAlgorithm = value; MarkColumnModified(ColumnNameHashingAlgorithm); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_user_entity_link")]
    [PrimaryKey("uel_user_entity_link_id")]
    [ExplicitColumns]
    public class UserEntityLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "uel_user_entity_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameUserId = "uel_us_user_id";
        private int _userId;
        [Column(ColumnNameUserId)]
        public int UserId
        {
            get { return _userId; }
            set { _userId = value; MarkColumnModified(ColumnNameUserId); }
        }
        
        public const string ColumnNameEntityId = "uel_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_user_password_history")]
    [PrimaryKey("uph_user_password_history_id")]
    [ExplicitColumns]
    public class UserPasswordHistoryTableModel : TableModel
    {
        
        public const string ColumnNameId = "uph_user_password_history_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameUserId = "uph_us_user_id";
        private int _userId;
        [Column(ColumnNameUserId)]
        public int UserId
        {
            get { return _userId; }
            set { _userId = value; MarkColumnModified(ColumnNameUserId); }
        }
        
        public const string ColumnNameEncryptedPassword = "uph_encrypt_pswd";
        private string _encryptedPassword;
        [Column(ColumnNameEncryptedPassword)]
        public string EncryptedPassword
        {
            get { return _encryptedPassword; }
            set { _encryptedPassword = value; MarkColumnModified(ColumnNameEncryptedPassword); }
        }
        
        public const string ColumnNamePasswordChangedDateUtc = "uph_password_change_utc";
        private DateTime _passwordChangedDateUtc;
        [Column(ColumnNamePasswordChangedDateUtc)]
        public DateTime PasswordChangedDateUtc
        {
            get { return _passwordChangedDateUtc; }
            set { _passwordChangedDateUtc = value; MarkColumnModified(ColumnNamePasswordChangedDateUtc); }
        }
        
        public const string ColumnNameHashingAlgorithm = "uph_rv_hashing_algorithm";
        private int _hashingAlgorithm;
        [Column(ColumnNameHashingAlgorithm)]
        public int HashingAlgorithm
        {
            get { return _hashingAlgorithm; }
            set { _hashingAlgorithm = value; MarkColumnModified(ColumnNameHashingAlgorithm); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_valuation_param")]
    [PrimaryKey("vp_valuation_param_id")]
    [ExplicitColumns]
    public class ValuationParameterTableModel : TableModel
    {
        
        public const string ColumnNameId = "vp_valuation_param_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTranQuoteId = "vp_tq_tran_quote_id";
        private int _tranQuoteId;
        [Column(ColumnNameTranQuoteId)]
        public int TranQuoteId
        {
            get { return _tranQuoteId; }
            set { _tranQuoteId = value; MarkColumnModified(ColumnNameTranQuoteId); }
        }
        
        public const string ColumnNameCurrency = "vp_rv_currency";
        private int _currency;
        [Column(ColumnNameCurrency)]
        public int Currency
        {
            get { return _currency; }
            set { _currency = value; MarkColumnModified(ColumnNameCurrency); }
        }
        
        public const string ColumnNameMethodology = "vp_rv_bootstrap_methodology";
        private int _methodology;
        [Column(ColumnNameMethodology)]
        public int Methodology
        {
            get { return _methodology; }
            set { _methodology = value; MarkColumnModified(ColumnNameMethodology); }
        }
        
        public const string ColumnNameMidBidAsk = "vp_rv_market_side";
        private int _midBidAsk;
        [Column(ColumnNameMidBidAsk)]
        public int MidBidAsk
        {
            get { return _midBidAsk; }
            set { _midBidAsk = value; MarkColumnModified(ColumnNameMidBidAsk); }
        }
        
        public const string ColumnNameEffectiveDate = "vp_effective_dto";
        private DateTimeOffset _effectiveDate;
        [Column(ColumnNameEffectiveDate)]
        public DateTimeOffset EffectiveDate
        {
            get { return _effectiveDate; }
            set { _effectiveDate = value; MarkColumnModified(ColumnNameEffectiveDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_valuation_process_override")]
    [PrimaryKey("vpo_valuation_process_override_id")]
    [ExplicitColumns]
    public class ProcessOverrideTableModel : TableModel
    {
        
        public const string ColumnNameId = "vpo_valuation_process_override_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameDailyTransHistId = "vpo_dh_daily_trans_hist_id";
        private int _dailyTransHistId;
        [Column(ColumnNameDailyTransHistId)]
        public int DailyTransHistId
        {
            get { return _dailyTransHistId; }
            set { _dailyTransHistId = value; MarkColumnModified(ColumnNameDailyTransHistId); }
        }
        
        public const string ColumnNameOverrideType = "vpo_rv_override_type";
        private int? _overrideType;
        [Column(ColumnNameOverrideType)]
        public int? OverrideType
        {
            get { return _overrideType; }
            set { _overrideType = value; MarkColumnModified(ColumnNameOverrideType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.cfo_web_alert")]
    [PrimaryKey("wa_alert_id")]
    [ExplicitColumns]
    public class WebAlertTableModel : TableModel
    {
        
        public const string ColumnNameId = "wa_alert_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameName = "wa_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
        
        public const string ColumnNameShortDescription = "wa_short_description";
        private string _shortDescription;
        [Column(ColumnNameShortDescription)]
        public string ShortDescription
        {
            get { return _shortDescription; }
            set { _shortDescription = value; MarkColumnModified(ColumnNameShortDescription); }
        }
        
        public const string ColumnNameLongDescription = "wa_description";
        private string _longDescription;
        [Column(ColumnNameLongDescription)]
        public string LongDescription
        {
            get { return _longDescription; }
            set { _longDescription = value; MarkColumnModified(ColumnNameLongDescription); }
        }
        
        public const string ColumnNameStartDate = "wa_active_start_dt";
        private DateTime? _startDate;
        [Column(ColumnNameStartDate)]
        public DateTime? StartDate
        {
            get { return _startDate; }
            set { _startDate = value; MarkColumnModified(ColumnNameStartDate); }
        }
        
        public const string ColumnNameEndDate = "wa_active_end_dt";
        private DateTime? _endDate;
        [Column(ColumnNameEndDate)]
        public DateTime? EndDate
        {
            get { return _endDate; }
            set { _endDate = value; MarkColumnModified(ColumnNameEndDate); }
        }
        
        public const string ColumnNameStartMinutesPastMidnight = "wa_visible_start_minutes_past_midnight";
        private int? _startMinutesPastMidnight;
        [Column(ColumnNameStartMinutesPastMidnight)]
        public int? StartMinutesPastMidnight
        {
            get { return _startMinutesPastMidnight; }
            set { _startMinutesPastMidnight = value; MarkColumnModified(ColumnNameStartMinutesPastMidnight); }
        }
        
        public const string ColumnNameEndMinutesPastMidnight = "wa_visible_end_minutes_past_midnight";
        private int? _endMinutesPastMidnight;
        [Column(ColumnNameEndMinutesPastMidnight)]
        public int? EndMinutesPastMidnight
        {
            get { return _endMinutesPastMidnight; }
            set { _endMinutesPastMidnight = value; MarkColumnModified(ColumnNameEndMinutesPastMidnight); }
        }
        
        public const string ColumnNameWebsite = "wa_rv_website";
        private int _website;
        [Column(ColumnNameWebsite)]
        public int Website
        {
            get { return _website; }
            set { _website = value; MarkColumnModified(ColumnNameWebsite); }
        }
        
        public const string ColumnNameType = "wa_rv_type";
        private int _type;
        [Column(ColumnNameType)]
        public int Type
        {
            get { return _type; }
            set { _type = value; MarkColumnModified(ColumnNameType); }
        }
        
        public const string ColumnNameIsActive = "wa_active_bit";
        private bool _isActive;
        [Column(ColumnNameIsActive)]
        public bool IsActive
        {
            get { return _isActive; }
            set { _isActive = value; MarkColumnModified(ColumnNameIsActive); }
        }
        
        public const string ColumnNameAccessLevel = "wa_rv_access_level";
        private int _accessLevel;
        [Column(ColumnNameAccessLevel)]
        public int AccessLevel
        {
            get { return _accessLevel; }
            set { _accessLevel = value; MarkColumnModified(ColumnNameAccessLevel); }
        }
        
        public const string ColumnNameIsForAllRegions = "wa_all_regions_bit";
        private bool _isForAllRegions;
        [Column(ColumnNameIsForAllRegions)]
        public bool IsForAllRegions
        {
            get { return _isForAllRegions; }
            set { _isForAllRegions = value; MarkColumnModified(ColumnNameIsForAllRegions); }
        }
        
        public const string ColumnNameRegionUrls = "wa_page_urls";
        private string _regionUrls;
        [Column(ColumnNameRegionUrls)]
        public string RegionUrls
        {
            get { return _regionUrls; }
            set { _regionUrls = value; MarkColumnModified(ColumnNameRegionUrls); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_accounting")]
    [PrimaryKey("ca_accounting_id")]
    [ExplicitColumns]
    public class AccountingRequirementTableModel : TableModel
    {
        
        public const string ColumnNameId = "ca_accounting_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "ca_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameAccountingManagerId = "ca_chatham_mgr_rc_contact_id";
        private int? _accountingManagerId;
        [Column(ColumnNameAccountingManagerId)]
        public int? AccountingManagerId
        {
            get { return _accountingManagerId; }
            set { _accountingManagerId = value; MarkColumnModified(ColumnNameAccountingManagerId); }
        }
        
        public const string ColumnNameAuditFirmId = "ca_audit_firm_re_entity_id";
        private int? _auditFirmId;
        [Column(ColumnNameAuditFirmId)]
        public int? AuditFirmId
        {
            get { return _auditFirmId; }
            set { _auditFirmId = value; MarkColumnModified(ColumnNameAuditFirmId); }
        }
        
        public const string ColumnNameAuditPartnerContactId = "ca_audit_ptnr_rc_contact_id";
        private int? _auditPartnerContactId;
        [Column(ColumnNameAuditPartnerContactId)]
        public int? AuditPartnerContactId
        {
            get { return _auditPartnerContactId; }
            set { _auditPartnerContactId = value; MarkColumnModified(ColumnNameAuditPartnerContactId); }
        }
        
        public const string ColumnNameAuditPartnerSecondContactId = "ca_audit_ptnr2_rc_contact_id";
        private int? _auditPartnerSecondContactId;
        [Column(ColumnNameAuditPartnerSecondContactId)]
        public int? AuditPartnerSecondContactId
        {
            get { return _auditPartnerSecondContactId; }
            set { _auditPartnerSecondContactId = value; MarkColumnModified(ColumnNameAuditPartnerSecondContactId); }
        }
        
        public const string ColumnNameAccountingSensitive = "ca_acctg_sensitive_bit";
        private bool? _accountingSensitive;
        [Column(ColumnNameAccountingSensitive)]
        public bool? AccountingSensitive
        {
            get { return _accountingSensitive; }
            set { _accountingSensitive = value; MarkColumnModified(ColumnNameAccountingSensitive); }
        }
        
        public const string ColumnNameAccrualJournalEntriesRequired = "ca_accrual_jes_required_bit";
        private bool? _accrualJournalEntriesRequired;
        [Column(ColumnNameAccrualJournalEntriesRequired)]
        public bool? AccrualJournalEntriesRequired
        {
            get { return _accrualJournalEntriesRequired; }
            set { _accrualJournalEntriesRequired = value; MarkColumnModified(ColumnNameAccrualJournalEntriesRequired); }
        }
        
        public const string ColumnNameFunctionalCurrencyId = "ca_rv_functional_currency_id";
        private int? _functionalCurrencyId;
        [Column(ColumnNameFunctionalCurrencyId)]
        public int? FunctionalCurrencyId
        {
            get { return _functionalCurrencyId; }
            set { _functionalCurrencyId = value; MarkColumnModified(ColumnNameFunctionalCurrencyId); }
        }
        
        public const string ColumnNameMaterialityCutoffAmmount = "ca_materiality_cutoff_amt";
        private decimal? _materialityCutoffAmmount;
        [Column(ColumnNameMaterialityCutoffAmmount)]
        public decimal? MaterialityCutoffAmmount
        {
            get { return _materialityCutoffAmmount; }
            set { _materialityCutoffAmmount = value; MarkColumnModified(ColumnNameMaterialityCutoffAmmount); }
        }
        
        public const string ColumnNameToleranceEffectivenessScore = "ca_tolerance_effscore_div0";
        private decimal? _toleranceEffectivenessScore;
        [Column(ColumnNameToleranceEffectivenessScore)]
        public decimal? ToleranceEffectivenessScore
        {
            get { return _toleranceEffectivenessScore; }
            set { _toleranceEffectivenessScore = value; MarkColumnModified(ColumnNameToleranceEffectivenessScore); }
        }
        
        public const string ColumnNameToleranceAccrualJournalEntries = "ca_tolerance_accrualjes";
        private decimal? _toleranceAccrualJournalEntries;
        [Column(ColumnNameToleranceAccrualJournalEntries)]
        public decimal? ToleranceAccrualJournalEntries
        {
            get { return _toleranceAccrualJournalEntries; }
            set { _toleranceAccrualJournalEntries = value; MarkColumnModified(ColumnNameToleranceAccrualJournalEntries); }
        }
        
        public const string ColumnNameFiscalYearEndDate = "ca_fiscal_year_end_date";
        private DateTime? _fiscalYearEndDate;
        [Column(ColumnNameFiscalYearEndDate)]
        public DateTime? FiscalYearEndDate
        {
            get { return _fiscalYearEndDate; }
            set { _fiscalYearEndDate = value; MarkColumnModified(ColumnNameFiscalYearEndDate); }
        }
        
        public const string ColumnNameHolidayCityId = "ca_hc_holiday_city_id";
        private int? _holidayCityId;
        [Column(ColumnNameHolidayCityId)]
        public int? HolidayCityId
        {
            get { return _holidayCityId; }
            set { _holidayCityId = value; MarkColumnModified(ColumnNameHolidayCityId); }
        }
        
        public const string ColumnNameValuationReportFrequency = "ca_rv_valn_report_freq_id";
        private int? _valuationReportFrequency;
        [Column(ColumnNameValuationReportFrequency)]
        public int? ValuationReportFrequency
        {
            get { return _valuationReportFrequency; }
            set { _valuationReportFrequency = value; MarkColumnModified(ColumnNameValuationReportFrequency); }
        }
        
        public const string ColumnNameJournalEntryReportFrequency = "ca_rv_journal_report_freq_id";
        private int? _journalEntryReportFrequency;
        [Column(ColumnNameJournalEntryReportFrequency)]
        public int? JournalEntryReportFrequency
        {
            get { return _journalEntryReportFrequency; }
            set { _journalEntryReportFrequency = value; MarkColumnModified(ColumnNameJournalEntryReportFrequency); }
        }
        
        public const string ColumnNameAuditReportFrequency = "ca_rv_audit_report_freq_id";
        private int? _auditReportFrequency;
        [Column(ColumnNameAuditReportFrequency)]
        public int? AuditReportFrequency
        {
            get { return _auditReportFrequency; }
            set { _auditReportFrequency = value; MarkColumnModified(ColumnNameAuditReportFrequency); }
        }
        
        public const string ColumnNameAccountingConcerns = "ca_rv_acctg_concerns_id";
        private int? _accountingConcerns;
        [Column(ColumnNameAccountingConcerns)]
        public int? AccountingConcerns
        {
            get { return _accountingConcerns; }
            set { _accountingConcerns = value; MarkColumnModified(ColumnNameAccountingConcerns); }
        }
        
        public const string ColumnNameNotes = "ca_notes";
        private string _notes;
        [Column(ColumnNameNotes)]
        public string Notes
        {
            get { return _notes; }
            set { _notes = value; MarkColumnModified(ColumnNameNotes); }
        }
        
        public const string ColumnNameJournalEntryDeadline = "ca_je_deadline_dt";
        private DateTime? _journalEntryDeadline;
        [Column(ColumnNameJournalEntryDeadline)]
        public DateTime? JournalEntryDeadline
        {
            get { return _journalEntryDeadline; }
            set { _journalEntryDeadline = value; MarkColumnModified(ColumnNameJournalEntryDeadline); }
        }
        
        public const string ColumnNameJournalEntriesRequiredInDays = "ca_jes_reqd_in_days";
        private int? _journalEntriesRequiredInDays;
        [Column(ColumnNameJournalEntriesRequiredInDays)]
        public int? JournalEntriesRequiredInDays
        {
            get { return _journalEntriesRequiredInDays; }
            set { _journalEntriesRequiredInDays = value; MarkColumnModified(ColumnNameJournalEntriesRequiredInDays); }
        }
        
        public const string ColumnNameJournalEntriesRequired = "ca_jes_required_bit";
        private bool? _journalEntriesRequired;
        [Column(ColumnNameJournalEntriesRequired)]
        public bool? JournalEntriesRequired
        {
            get { return _journalEntriesRequired; }
            set { _journalEntriesRequired = value; MarkColumnModified(ColumnNameJournalEntriesRequired); }
        }
        
        public const string ColumnNameDisclosureDeadline = "ca_disclsr_deadline_dt";
        private DateTime? _disclosureDeadline;
        [Column(ColumnNameDisclosureDeadline)]
        public DateTime? DisclosureDeadline
        {
            get { return _disclosureDeadline; }
            set { _disclosureDeadline = value; MarkColumnModified(ColumnNameDisclosureDeadline); }
        }
        
        public const string ColumnNameDisclosureDeadlineInDays = "ca_disclsr_reqd_in_days";
        private int? _disclosureDeadlineInDays;
        [Column(ColumnNameDisclosureDeadlineInDays)]
        public int? DisclosureDeadlineInDays
        {
            get { return _disclosureDeadlineInDays; }
            set { _disclosureDeadlineInDays = value; MarkColumnModified(ColumnNameDisclosureDeadlineInDays); }
        }
        
        public const string ColumnNameEffectivenessTestsRequired = "ca_eff_tests_required_bit";
        private bool? _effectivenessTestsRequired;
        [Column(ColumnNameEffectivenessTestsRequired)]
        public bool? EffectivenessTestsRequired
        {
            get { return _effectivenessTestsRequired; }
            set { _effectivenessTestsRequired = value; MarkColumnModified(ColumnNameEffectivenessTestsRequired); }
        }
        
        public const string ColumnNameGoverningAccountingStandard = "ca_dd_governing_acctg_standard";
        private string _governingAccountingStandard;
        [Column(ColumnNameGoverningAccountingStandard)]
        public string GoverningAccountingStandard
        {
            get { return _governingAccountingStandard; }
            set { _governingAccountingStandard = value; MarkColumnModified(ColumnNameGoverningAccountingStandard); }
        }
        
        public const string ColumnNameAccruedInterestExpenseEntriesRequired = "ca_accrdint_expense_entries_bit";
        private bool? _accruedInterestExpenseEntriesRequired;
        [Column(ColumnNameAccruedInterestExpenseEntriesRequired)]
        public bool? AccruedInterestExpenseEntriesRequired
        {
            get { return _accruedInterestExpenseEntriesRequired; }
            set { _accruedInterestExpenseEntriesRequired = value; MarkColumnModified(ColumnNameAccruedInterestExpenseEntriesRequired); }
        }
        
        public const string ColumnNameHedgeDesignationMemoRequired = "ca_hdm_required_bit";
        private bool? _hedgeDesignationMemoRequired;
        [Column(ColumnNameHedgeDesignationMemoRequired)]
        public bool? HedgeDesignationMemoRequired
        {
            get { return _hedgeDesignationMemoRequired; }
            set { _hedgeDesignationMemoRequired = value; MarkColumnModified(ColumnNameHedgeDesignationMemoRequired); }
        }
        
        public const string ColumnNameDisclosuresRequired = "ca_disclosures_bit";
        private bool? _disclosuresRequired;
        [Column(ColumnNameDisclosuresRequired)]
        public bool? DisclosuresRequired
        {
            get { return _disclosuresRequired; }
            set { _disclosuresRequired = value; MarkColumnModified(ColumnNameDisclosuresRequired); }
        }
        
        public const string ColumnNameEffectivenessTestsFrequency = "ca_rv_eff_tests_freq_id";
        private int? _effectivenessTestsFrequency;
        [Column(ColumnNameEffectivenessTestsFrequency)]
        public int? EffectivenessTestsFrequency
        {
            get { return _effectivenessTestsFrequency; }
            set { _effectivenessTestsFrequency = value; MarkColumnModified(ColumnNameEffectivenessTestsFrequency); }
        }
        
        public const string ColumnNameFas133LastReview = "ca_fas133_last_review_dt";
        private DateTime? _fas133LastReview;
        [Column(ColumnNameFas133LastReview)]
        public DateTime? Fas133LastReview
        {
            get { return _fas133LastReview; }
            set { _fas133LastReview = value; MarkColumnModified(ColumnNameFas133LastReview); }
        }
        
        public const string ColumnNameFas133ReviewerContactId = "ca_fas133_cfc_reviewer_rc_contact_id";
        private int? _fas133ReviewerContactId;
        [Column(ColumnNameFas133ReviewerContactId)]
        public int? Fas133ReviewerContactId
        {
            get { return _fas133ReviewerContactId; }
            set { _fas133ReviewerContactId = value; MarkColumnModified(ColumnNameFas133ReviewerContactId); }
        }
        
        public const string ColumnNameFas133ApprovedRiskClassesMap = "ca_fas133_approved_risk_classes_bitmap";
        private int? _fas133ApprovedRiskClassesMap;
        [Column(ColumnNameFas133ApprovedRiskClassesMap)]
        public int? Fas133ApprovedRiskClassesMap
        {
            get { return _fas133ApprovedRiskClassesMap; }
            set { _fas133ApprovedRiskClassesMap = value; MarkColumnModified(ColumnNameFas133ApprovedRiskClassesMap); }
        }
        
        public const string ColumnNameFas133ApprovedDesignationsMap = "ca_fas133_approved_designations_bitmap";
        private int? _fas133ApprovedDesignationsMap;
        [Column(ColumnNameFas133ApprovedDesignationsMap)]
        public int? Fas133ApprovedDesignationsMap
        {
            get { return _fas133ApprovedDesignationsMap; }
            set { _fas133ApprovedDesignationsMap = value; MarkColumnModified(ColumnNameFas133ApprovedDesignationsMap); }
        }
        
        public const string ColumnNameIAS39LastReview = "ca_ias39_last_review_dt";
        private DateTime? _iAS39LastReview;
        [Column(ColumnNameIAS39LastReview)]
        public DateTime? IAS39LastReview
        {
            get { return _iAS39LastReview; }
            set { _iAS39LastReview = value; MarkColumnModified(ColumnNameIAS39LastReview); }
        }
        
        public const string ColumnNameIAS39ReviewerContactId = "ca_ias39_cfc_reviewer_rc_contact_id";
        private int? _iAS39ReviewerContactId;
        [Column(ColumnNameIAS39ReviewerContactId)]
        public int? IAS39ReviewerContactId
        {
            get { return _iAS39ReviewerContactId; }
            set { _iAS39ReviewerContactId = value; MarkColumnModified(ColumnNameIAS39ReviewerContactId); }
        }
        
        public const string ColumnNameIAS39ApprovedRiskClassesMap = "ca_ias39_approved_risk_classes_bitmap";
        private int? _iAS39ApprovedRiskClassesMap;
        [Column(ColumnNameIAS39ApprovedRiskClassesMap)]
        public int? IAS39ApprovedRiskClassesMap
        {
            get { return _iAS39ApprovedRiskClassesMap; }
            set { _iAS39ApprovedRiskClassesMap = value; MarkColumnModified(ColumnNameIAS39ApprovedRiskClassesMap); }
        }
        
        public const string ColumnNameIAS39ApprovedDesignationsMap = "ca_ias39_approved_designations_bitmap";
        private int? _iAS39ApprovedDesignationsMap;
        [Column(ColumnNameIAS39ApprovedDesignationsMap)]
        public int? IAS39ApprovedDesignationsMap
        {
            get { return _iAS39ApprovedDesignationsMap; }
            set { _iAS39ApprovedDesignationsMap = value; MarkColumnModified(ColumnNameIAS39ApprovedDesignationsMap); }
        }
        
        public const string ColumnNameIAS39LastApproved = "ca_ias39_last_approved_dt";
        private DateTime? _iAS39LastApproved;
        [Column(ColumnNameIAS39LastApproved)]
        public DateTime? IAS39LastApproved
        {
            get { return _iAS39LastApproved; }
            set { _iAS39LastApproved = value; MarkColumnModified(ColumnNameIAS39LastApproved); }
        }
        
        public const string ColumnNameFas133LastApproved = "ca_fas133_last_approved_dt";
        private DateTime? _fas133LastApproved;
        [Column(ColumnNameFas133LastApproved)]
        public DateTime? Fas133LastApproved
        {
            get { return _fas133LastApproved; }
            set { _fas133LastApproved = value; MarkColumnModified(ColumnNameFas133LastApproved); }
        }
        
        public const string ColumnNameIAS39Note = "ca_ias39_note";
        private string _iAS39Note;
        [Column(ColumnNameIAS39Note)]
        public string IAS39Note
        {
            get { return _iAS39Note; }
            set { _iAS39Note = value; MarkColumnModified(ColumnNameIAS39Note); }
        }
        
        public const string ColumnNameFAS133Note = "ca_fas133_note";
        private string _fAS133Note;
        [Column(ColumnNameFAS133Note)]
        public string FAS133Note
        {
            get { return _fAS133Note; }
            set { _fAS133Note = value; MarkColumnModified(ColumnNameFAS133Note); }
        }
        
        public const string ColumnNameEffectivenessTestsRequiredInDays = "ca_eff_tests_reqd_in_days";
        private int? _effectivenessTestsRequiredInDays;
        [Column(ColumnNameEffectivenessTestsRequiredInDays)]
        public int? EffectivenessTestsRequiredInDays
        {
            get { return _effectivenessTestsRequiredInDays; }
            set { _effectivenessTestsRequiredInDays = value; MarkColumnModified(ColumnNameEffectivenessTestsRequiredInDays); }
        }
        
        public const string ColumnNameEffectivenessTestsDeadline = "ca_eff_tests_deadline_dt";
        private DateTime? _effectivenessTestsDeadline;
        [Column(ColumnNameEffectivenessTestsDeadline)]
        public DateTime? EffectivenessTestsDeadline
        {
            get { return _effectivenessTestsDeadline; }
            set { _effectivenessTestsDeadline = value; MarkColumnModified(ColumnNameEffectivenessTestsDeadline); }
        }
        
        public const string ColumnNameTaxDesignationStatement = "ca_tax_designation_statement";
        private string _taxDesignationStatement;
        [Column(ColumnNameTaxDesignationStatement)]
        public string TaxDesignationStatement
        {
            get { return _taxDesignationStatement; }
            set { _taxDesignationStatement = value; MarkColumnModified(ColumnNameTaxDesignationStatement); }
        }
        
        public const string ColumnNameReportAtTotalPrice = "ca_report_at_total_price_bit";
        private bool? _reportAtTotalPrice;
        [Column(ColumnNameReportAtTotalPrice)]
        public bool? ReportAtTotalPrice
        {
            get { return _reportAtTotalPrice; }
            set { _reportAtTotalPrice = value; MarkColumnModified(ColumnNameReportAtTotalPrice); }
        }
        
        public const string ColumnNameCombineOffsettingFvJe = "ca_combine_offsttng_FV_JEs_bit";
        private bool? _combineOffsettingFvJe;
        [Column(ColumnNameCombineOffsettingFvJe)]
        public bool? CombineOffsettingFvJe
        {
            get { return _combineOffsettingFvJe; }
            set { _combineOffsettingFvJe = value; MarkColumnModified(ColumnNameCombineOffsettingFvJe); }
        }
        
        public const string ColumnNameSegregateDerivativeIntoAL = "ca_segregate_deriv_into_AL_bit";
        private bool? _segregateDerivativeIntoAL;
        [Column(ColumnNameSegregateDerivativeIntoAL)]
        public bool? SegregateDerivativeIntoAL
        {
            get { return _segregateDerivativeIntoAL; }
            set { _segregateDerivativeIntoAL = value; MarkColumnModified(ColumnNameSegregateDerivativeIntoAL); }
        }
        
        public const string ColumnNameSecondaryAccountingManagerId = "ca_chatham_secondary_mgr_rc_contact_id";
        private int? _secondaryAccountingManagerId;
        [Column(ColumnNameSecondaryAccountingManagerId)]
        public int? SecondaryAccountingManagerId
        {
            get { return _secondaryAccountingManagerId; }
            set { _secondaryAccountingManagerId = value; MarkColumnModified(ColumnNameSecondaryAccountingManagerId); }
        }
        
        public const string ColumnNameFas157Client = "ca_fas157_client_bit";
        private bool? _fas157Client;
        [Column(ColumnNameFas157Client)]
        public bool? Fas157Client
        {
            get { return _fas157Client; }
            set { _fas157Client = value; MarkColumnModified(ColumnNameFas157Client); }
        }
        
        public const string ColumnNameFas157Priority = "ca_FAS157_priority";
        private int? _fas157Priority;
        [Column(ColumnNameFas157Priority)]
        public int? Fas157Priority
        {
            get { return _fas157Priority; }
            set { _fas157Priority = value; MarkColumnModified(ColumnNameFas157Priority); }
        }
        
        public const string ColumnNameAssessmentTestRequiresCVA = "ca_assessment_test_requires_cva_bit";
        private bool? _assessmentTestRequiresCVA;
        [Column(ColumnNameAssessmentTestRequiresCVA)]
        public bool? AssessmentTestRequiresCVA
        {
            get { return _assessmentTestRequiresCVA; }
            set { _assessmentTestRequiresCVA = value; MarkColumnModified(ColumnNameAssessmentTestRequiresCVA); }
        }
        
        public const string ColumnNameFas157Default = "ca_fas157_default_bit";
        private bool? _fas157Default;
        [Column(ColumnNameFas157Default)]
        public bool? Fas157Default
        {
            get { return _fas157Default; }
            set { _fas157Default = value; MarkColumnModified(ColumnNameFas157Default); }
        }
        
        public const string ColumnNameFas157DailyRun = "ca_fas157_daily_run_bit";
        private bool _fas157DailyRun;
        [Column(ColumnNameFas157DailyRun)]
        public bool Fas157DailyRun
        {
            get { return _fas157DailyRun; }
            set { _fas157DailyRun = value; MarkColumnModified(ColumnNameFas157DailyRun); }
        }
        
        public const string ColumnNameCombineAssetLiability = "ca_combine_asset_liability_bit";
        private bool? _combineAssetLiability;
        [Column(ColumnNameCombineAssetLiability)]
        public bool? CombineAssetLiability
        {
            get { return _combineAssetLiability; }
            set { _combineAssetLiability = value; MarkColumnModified(ColumnNameCombineAssetLiability); }
        }
        
        public const string ColumnNameEffectiveTaxRateApplies = "ca_effective_tax_rate_applies_bit";
        private bool? _effectiveTaxRateApplies;
        [Column(ColumnNameEffectiveTaxRateApplies)]
        public bool? EffectiveTaxRateApplies
        {
            get { return _effectiveTaxRateApplies; }
            set { _effectiveTaxRateApplies = value; MarkColumnModified(ColumnNameEffectiveTaxRateApplies); }
        }
        
        public const string ColumnNameShortTermLongTermSplit = "ca_split_short_term_long_term_bit";
        private bool? _shortTermLongTermSplit;
        [Column(ColumnNameShortTermLongTermSplit)]
        public bool? ShortTermLongTermSplit
        {
            get { return _shortTermLongTermSplit; }
            set { _shortTermLongTermSplit = value; MarkColumnModified(ColumnNameShortTermLongTermSplit); }
        }
        
        public const string ColumnNameShortTermLongTermMethod = "ca_rv_short_term_long_term_method";
        private int? _shortTermLongTermMethod;
        [Column(ColumnNameShortTermLongTermMethod)]
        public int? ShortTermLongTermMethod
        {
            get { return _shortTermLongTermMethod; }
            set { _shortTermLongTermMethod = value; MarkColumnModified(ColumnNameShortTermLongTermMethod); }
        }
        
        public const string ColumnNameRunPaymentSummaryEntries = "ca_run_payment_summary_entries_bit";
        private bool? _runPaymentSummaryEntries;
        [Column(ColumnNameRunPaymentSummaryEntries)]
        public bool? RunPaymentSummaryEntries
        {
            get { return _runPaymentSummaryEntries; }
            set { _runPaymentSummaryEntries = value; MarkColumnModified(ColumnNameRunPaymentSummaryEntries); }
        }
        
        public const string ColumnNameFas157ReportFrequency = "ca_rv_fas157_report_frequency";
        private int? _fas157ReportFrequency;
        [Column(ColumnNameFas157ReportFrequency)]
        public int? Fas157ReportFrequency
        {
            get { return _fas157ReportFrequency; }
            set { _fas157ReportFrequency = value; MarkColumnModified(ColumnNameFas157ReportFrequency); }
        }
        
        public const string ColumnNameAutoMonthlyCVA = "ca_auto_monthly_cva_bit";
        private bool? _autoMonthlyCVA;
        [Column(ColumnNameAutoMonthlyCVA)]
        public bool? AutoMonthlyCVA
        {
            get { return _autoMonthlyCVA; }
            set { _autoMonthlyCVA = value; MarkColumnModified(ColumnNameAutoMonthlyCVA); }
        }
        
        public const string ColumnNameCashPremium = "ca_cash_premium_bit";
        private bool? _cashPremium;
        [Column(ColumnNameCashPremium)]
        public bool? CashPremium
        {
            get { return _cashPremium; }
            set { _cashPremium = value; MarkColumnModified(ColumnNameCashPremium); }
        }
        
        public const string ColumnNameCashNetSettlement = "ca_cash_net_settlement_bit";
        private bool? _cashNetSettlement;
        [Column(ColumnNameCashNetSettlement)]
        public bool? CashNetSettlement
        {
            get { return _cashNetSettlement; }
            set { _cashNetSettlement = value; MarkColumnModified(ColumnNameCashNetSettlement); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_accounting_exposure_link")]
    [PrimaryKey("ael_accounting_exposure_link_id")]
    [ExplicitColumns]
    public class FxDefaultExposureLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "ael_accounting_exposure_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameAccountingFxDefaultId = "ael_cafd_accounting_fx_default_id";
        private int _accountingFxDefaultId;
        [Column(ColumnNameAccountingFxDefaultId)]
        public int AccountingFxDefaultId
        {
            get { return _accountingFxDefaultId; }
            set { _accountingFxDefaultId = value; MarkColumnModified(ColumnNameAccountingFxDefaultId); }
        }
        
        public const string ColumnNamePlanningCycleExposureBucketsId = "ael_pceb_planning_cycle_exposure_buckets_id";
        private int _planningCycleExposureBucketsId;
        [Column(ColumnNamePlanningCycleExposureBucketsId)]
        public int PlanningCycleExposureBucketsId
        {
            get { return _planningCycleExposureBucketsId; }
            set { _planningCycleExposureBucketsId = value; MarkColumnModified(ColumnNamePlanningCycleExposureBucketsId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_accounting_fx_default")]
    [PrimaryKey("cafd_accounting_fx_default_id")]
    [ExplicitColumns]
    public class FxPoliciesTableModel : TableModel
    {
        
        public const string ColumnNameId = "cafd_accounting_fx_default_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameAccountingInformationId = "cafd_ca_accounting_id";
        private int _accountingInformationId;
        [Column(ColumnNameAccountingInformationId)]
        public int AccountingInformationId
        {
            get { return _accountingInformationId; }
            set { _accountingInformationId = value; MarkColumnModified(ColumnNameAccountingInformationId); }
        }
        
        public const string ColumnNameHedgeDesignationId = "cafd_aad_accounting_default_id";
        private int _hedgeDesignationId;
        [Column(ColumnNameHedgeDesignationId)]
        public int HedgeDesignationId
        {
            get { return _hedgeDesignationId; }
            set { _hedgeDesignationId = value; MarkColumnModified(ColumnNameHedgeDesignationId); }
        }
        
        public const string ColumnNameAccountingPolicy = "cafd_accounting_policy";
        private string _accountingPolicy;
        [Column(ColumnNameAccountingPolicy)]
        public string AccountingPolicy
        {
            get { return _accountingPolicy; }
            set { _accountingPolicy = value; MarkColumnModified(ColumnNameAccountingPolicy); }
        }
        
        public const string ColumnNameHypoMonthAdjusted = "cafd_hypo_value_months_adjusted";
        private int? _hypoMonthAdjusted;
        [Column(ColumnNameHypoMonthAdjusted)]
        public int? HypoMonthAdjusted
        {
            get { return _hypoMonthAdjusted; }
            set { _hypoMonthAdjusted = value; MarkColumnModified(ColumnNameHypoMonthAdjusted); }
        }
        
        public const string ColumnNameHypoDayOfMonth = "cafd_hypo_value_day_of_month";
        private int? _hypoDayOfMonth;
        [Column(ColumnNameHypoDayOfMonth)]
        public int? HypoDayOfMonth
        {
            get { return _hypoDayOfMonth; }
            set { _hypoDayOfMonth = value; MarkColumnModified(ColumnNameHypoDayOfMonth); }
        }
        
        public const string ColumnNameAccountingTreatmentMonthAdjusted = "cafd_accounting_treatment_months_adjust";
        private int? _accountingTreatmentMonthAdjusted;
        [Column(ColumnNameAccountingTreatmentMonthAdjusted)]
        public int? AccountingTreatmentMonthAdjusted
        {
            get { return _accountingTreatmentMonthAdjusted; }
            set { _accountingTreatmentMonthAdjusted = value; MarkColumnModified(ColumnNameAccountingTreatmentMonthAdjusted); }
        }
        
        public const string ColumnNameAccountingTreatmentDayOfMonth = "cafd_accounting_treatment_day_of_month";
        private int? _accountingTreatmentDayOfMonth;
        [Column(ColumnNameAccountingTreatmentDayOfMonth)]
        public int? AccountingTreatmentDayOfMonth
        {
            get { return _accountingTreatmentDayOfMonth; }
            set { _accountingTreatmentDayOfMonth = value; MarkColumnModified(ColumnNameAccountingTreatmentDayOfMonth); }
        }
        
        public const string ColumnNameOciMonthAdjusted = "cafd_oci_months_adjust";
        private int? _ociMonthAdjusted;
        [Column(ColumnNameOciMonthAdjusted)]
        public int? OciMonthAdjusted
        {
            get { return _ociMonthAdjusted; }
            set { _ociMonthAdjusted = value; MarkColumnModified(ColumnNameOciMonthAdjusted); }
        }
        
        public const string ColumnNameOciDayOfMonth = "cafd_oci_day_of_month";
        private int? _ociDayOfMonth;
        [Column(ColumnNameOciDayOfMonth)]
        public int? OciDayOfMonth
        {
            get { return _ociDayOfMonth; }
            set { _ociDayOfMonth = value; MarkColumnModified(ColumnNameOciDayOfMonth); }
        }
        
        public const string ColumnNameHDMTemplateID = "cafd_mt_merge_template_id";
        private int? _hDMTemplateID;
        [Column(ColumnNameHDMTemplateID)]
        public int? HDMTemplateID
        {
            get { return _hDMTemplateID; }
            set { _hDMTemplateID = value; MarkColumnModified(ColumnNameHDMTemplateID); }
        }
        
        public const string ColumnNameCalendarType = "cafd_rv_calendar_type";
        private int? _calendarType;
        [Column(ColumnNameCalendarType)]
        public int? CalendarType
        {
            get { return _calendarType; }
            set { _calendarType = value; MarkColumnModified(ColumnNameCalendarType); }
        }
        
        public const string ColumnNameBegHypoMonthAdjusted = "cafd_beg_hypo_value_months_adjusted";
        private int? _begHypoMonthAdjusted;
        [Column(ColumnNameBegHypoMonthAdjusted)]
        public int? BegHypoMonthAdjusted
        {
            get { return _begHypoMonthAdjusted; }
            set { _begHypoMonthAdjusted = value; MarkColumnModified(ColumnNameBegHypoMonthAdjusted); }
        }
        
        public const string ColumnNameBegHypoDayOfMonth = "cafd_beg_hypo_value_day_of_month";
        private int? _begHypoDayOfMonth;
        [Column(ColumnNameBegHypoDayOfMonth)]
        public int? BegHypoDayOfMonth
        {
            get { return _begHypoDayOfMonth; }
            set { _begHypoDayOfMonth = value; MarkColumnModified(ColumnNameBegHypoDayOfMonth); }
        }
        
        public const string ColumnNameEndHypoMonthAdjusted = "cafd_end_hypo_value_months_adjusted";
        private int? _endHypoMonthAdjusted;
        [Column(ColumnNameEndHypoMonthAdjusted)]
        public int? EndHypoMonthAdjusted
        {
            get { return _endHypoMonthAdjusted; }
            set { _endHypoMonthAdjusted = value; MarkColumnModified(ColumnNameEndHypoMonthAdjusted); }
        }
        
        public const string ColumnNameEndHypoDayOfMonth = "cafd_end_hypo_value_day_of_month";
        private int? _endHypoDayOfMonth;
        [Column(ColumnNameEndHypoDayOfMonth)]
        public int? EndHypoDayOfMonth
        {
            get { return _endHypoDayOfMonth; }
            set { _endHypoDayOfMonth = value; MarkColumnModified(ColumnNameEndHypoDayOfMonth); }
        }
        
        public const string ColumnNameAccountingRegressionType = "cafd_rv_accounting_regression_type";
        private int? _accountingRegressionType;
        [Column(ColumnNameAccountingRegressionType)]
        public int? AccountingRegressionType
        {
            get { return _accountingRegressionType; }
            set { _accountingRegressionType = value; MarkColumnModified(ColumnNameAccountingRegressionType); }
        }
        
        public const string ColumnNameRegressionDataPointFrequency = "cafd_rv_regression_data_point_frequency";
        private int? _regressionDataPointFrequency;
        [Column(ColumnNameRegressionDataPointFrequency)]
        public int? RegressionDataPointFrequency
        {
            get { return _regressionDataPointFrequency; }
            set { _regressionDataPointFrequency = value; MarkColumnModified(ColumnNameRegressionDataPointFrequency); }
        }
        
        public const string ColumnNameRegressionNumberOfDataPoints = "cafd_regression_data_point_count";
        private int? _regressionNumberOfDataPoints;
        [Column(ColumnNameRegressionNumberOfDataPoints)]
        public int? RegressionNumberOfDataPoints
        {
            get { return _regressionNumberOfDataPoints; }
            set { _regressionNumberOfDataPoints = value; MarkColumnModified(ColumnNameRegressionNumberOfDataPoints); }
        }
        
        public const string ColumnNameEntryAccountIneffectiveness = "cafd_rv_entry_account_ineffectiveness";
        private int? _entryAccountIneffectiveness;
        [Column(ColumnNameEntryAccountIneffectiveness)]
        public int? EntryAccountIneffectiveness
        {
            get { return _entryAccountIneffectiveness; }
            set { _entryAccountIneffectiveness = value; MarkColumnModified(ColumnNameEntryAccountIneffectiveness); }
        }
        
        public const string ColumnNameEntryAccountAmortization = "cafd_rv_entry_account_amortization";
        private int? _entryAccountAmortization;
        [Column(ColumnNameEntryAccountAmortization)]
        public int? EntryAccountAmortization
        {
            get { return _entryAccountAmortization; }
            set { _entryAccountAmortization = value; MarkColumnModified(ColumnNameEntryAccountAmortization); }
        }
        
        public const string ColumnNameEntryAccountOci = "cafd_rv_entry_account_oci";
        private int? _entryAccountOci;
        [Column(ColumnNameEntryAccountOci)]
        public int? EntryAccountOci
        {
            get { return _entryAccountOci; }
            set { _entryAccountOci = value; MarkColumnModified(ColumnNameEntryAccountOci); }
        }
        
        public const string ColumnNameInceptionDataPointFrequency = "cafd_rv_inception_data_point_frequency";
        private int? _inceptionDataPointFrequency;
        [Column(ColumnNameInceptionDataPointFrequency)]
        public int? InceptionDataPointFrequency
        {
            get { return _inceptionDataPointFrequency; }
            set { _inceptionDataPointFrequency = value; MarkColumnModified(ColumnNameInceptionDataPointFrequency); }
        }
        
        public const string ColumnNameInceptionDataPointCount = "cafd_inception_data_point_count";
        private int? _inceptionDataPointCount;
        [Column(ColumnNameInceptionDataPointCount)]
        public int? InceptionDataPointCount
        {
            get { return _inceptionDataPointCount; }
            set { _inceptionDataPointCount = value; MarkColumnModified(ColumnNameInceptionDataPointCount); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_accounting_fx_default_poc")]
    [PrimaryKey("fdpoc_accounting_fx_default_poc_id")]
    [ExplicitColumns]
    public class FxDefaultPocTableModel : TableModel
    {
        
        public const string ColumnNameId = "fdpoc_accounting_fx_default_poc_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameFxDefaultId = "fdpoc_cafd_accounting_fx_default_id";
        private int _fxDefaultId;
        [Column(ColumnNameFxDefaultId)]
        public int FxDefaultId
        {
            get { return _fxDefaultId; }
            set { _fxDefaultId = value; MarkColumnModified(ColumnNameFxDefaultId); }
        }
        
        public const string ColumnNameRemeasurementOfDeferred = "fdpoc_rv_remeasurement_deferred";
        private int? _remeasurementOfDeferred;
        [Column(ColumnNameRemeasurementOfDeferred)]
        public int? RemeasurementOfDeferred
        {
            get { return _remeasurementOfDeferred; }
            set { _remeasurementOfDeferred = value; MarkColumnModified(ColumnNameRemeasurementOfDeferred); }
        }
        
        public const string ColumnNameRateForRecognition = "fdpoc_rv_rate_for_recognition";
        private int? _rateForRecognition;
        [Column(ColumnNameRateForRecognition)]
        public int? RateForRecognition
        {
            get { return _rateForRecognition; }
            set { _rateForRecognition = value; MarkColumnModified(ColumnNameRateForRecognition); }
        }
        
        public const string ColumnNameRateForCash = "fdpoc_rv_rate_for_cash";
        private int? _rateForCash;
        [Column(ColumnNameRateForCash)]
        public int? RateForCash
        {
            get { return _rateForCash; }
            set { _rateForCash = value; MarkColumnModified(ColumnNameRateForCash); }
        }
        
        public const string ColumnNameRateForRemeasurement = "fdpoc_rv_rate_for_remeasurement";
        private int? _rateForRemeasurement;
        [Column(ColumnNameRateForRemeasurement)]
        public int? RateForRemeasurement
        {
            get { return _rateForRemeasurement; }
            set { _rateForRemeasurement = value; MarkColumnModified(ColumnNameRateForRemeasurement); }
        }
        
        public const string ColumnNameRateForFinalSettlement = "fdpoc_rv_rate_for_final_settlement";
        private int? _rateForFinalSettlement;
        [Column(ColumnNameRateForFinalSettlement)]
        public int? RateForFinalSettlement
        {
            get { return _rateForFinalSettlement; }
            set { _rateForFinalSettlement = value; MarkColumnModified(ColumnNameRateForFinalSettlement); }
        }
        
        public const string ColumnNameRateForDedesignation = "fdpoc_rv_rate_for_dedesignation";
        private int? _rateForDedesignation;
        [Column(ColumnNameRateForDedesignation)]
        public int? RateForDedesignation
        {
            get { return _rateForDedesignation; }
            set { _rateForDedesignation = value; MarkColumnModified(ColumnNameRateForDedesignation); }
        }
        
        public const string ColumnNameRateForFxDerivativeOci = "fdpoc_rv_rate_for_fx_derivative_oci";
        private int? _rateForFxDerivativeOci;
        [Column(ColumnNameRateForFxDerivativeOci)]
        public int? RateForFxDerivativeOci
        {
            get { return _rateForFxDerivativeOci; }
            set { _rateForFxDerivativeOci = value; MarkColumnModified(ColumnNameRateForFxDerivativeOci); }
        }
        
        public const string ColumnNameRateForInvoice = "fdpoc_rv_rate_for_invoice";
        private int? _rateForInvoice;
        [Column(ColumnNameRateForInvoice)]
        public int? RateForInvoice
        {
            get { return _rateForInvoice; }
            set { _rateForInvoice = value; MarkColumnModified(ColumnNameRateForInvoice); }
        }
        
        public const string ColumnNameRemeasureUnbilled = "fdpoc_rv_remeasure_unbilled";
        private int? _remeasureUnbilled;
        [Column(ColumnNameRemeasureUnbilled)]
        public int? RemeasureUnbilled
        {
            get { return _remeasureUnbilled; }
            set { _remeasureUnbilled = value; MarkColumnModified(ColumnNameRemeasureUnbilled); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_accounting_fx_default_portfolio")]
    [PrimaryKey("cafdp_accounting_fx_default_portfolio_id")]
    [ExplicitColumns]
    public class FxDefaultPortfolioTableModel : TableModel
    {
        
        public const string ColumnNameId = "cafdp_accounting_fx_default_portfolio_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameFxDefaultId = "cafdp_cafd_accounting_fx_default_id";
        private int _fxDefaultId;
        [Column(ColumnNameFxDefaultId)]
        public int FxDefaultId
        {
            get { return _fxDefaultId; }
            set { _fxDefaultId = value; MarkColumnModified(ColumnNameFxDefaultId); }
        }
        
        public const string ColumnNameName = "cafdp_portfolio_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_address")]
    [PrimaryKey("ad_address_id")]
    [ExplicitColumns]
    public class AddressTableModel : TableModel
    {
        
        public const string ColumnNameId = "ad_address_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameStreetAddress = "ad_address_block";
        private string _streetAddress;
        [Column(ColumnNameStreetAddress)]
        public string StreetAddress
        {
            get { return _streetAddress; }
            set { _streetAddress = value; MarkColumnModified(ColumnNameStreetAddress); }
        }
        
        public const string ColumnNameCity = "ad_city";
        private string _city;
        [Column(ColumnNameCity)]
        public string City
        {
            get { return _city; }
            set { _city = value; MarkColumnModified(ColumnNameCity); }
        }
        
        public const string ColumnNameStateId = "ad_st_state_id";
        private int? _stateId;
        [Column(ColumnNameStateId)]
        public int? StateId
        {
            get { return _stateId; }
            set { _stateId = value; MarkColumnModified(ColumnNameStateId); }
        }
        
        public const string ColumnNameZip = "ad_zp_zip_code_desc";
        private string _zip;
        [Column(ColumnNameZip)]
        public string Zip
        {
            get { return _zip; }
            set { _zip = value; MarkColumnModified(ColumnNameZip); }
        }
        
        public const string ColumnNameCountryId = "ad_cn_country_id";
        private int? _countryId;
        [Column(ColumnNameCountryId)]
        public int? CountryId
        {
            get { return _countryId; }
            set { _countryId = value; MarkColumnModified(ColumnNameCountryId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_address_links")]
    [PrimaryKey("adl_address_links_id")]
    [ExplicitColumns]
    public class AddressLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "adl_address_links_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameAddressId = "adl_ad_address_id";
        private int _addressId;
        [Column(ColumnNameAddressId)]
        public int AddressId
        {
            get { return _addressId; }
            set { _addressId = value; MarkColumnModified(ColumnNameAddressId); }
        }
        
        public const string ColumnNameEntityId = "adl_re_entity_id";
        private int? _entityId;
        [Column(ColumnNameEntityId)]
        public int? EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameContactId = "adl_rc_contact_id";
        private int? _contactId;
        [Column(ColumnNameContactId)]
        public int? ContactId
        {
            get { return _contactId; }
            set { _contactId = value; MarkColumnModified(ColumnNameContactId); }
        }
        
        public const string ColumnNameAddressTypeRefId = "adl_rv_address_type_id";
        private int? _addressTypeRefId;
        [Column(ColumnNameAddressTypeRefId)]
        public int? AddressTypeRefId
        {
            get { return _addressTypeRefId; }
            set { _addressTypeRefId = value; MarkColumnModified(ColumnNameAddressTypeRefId); }
        }
        
        public const string ColumnNameDescription = "adl_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameReadOnly = "adl_readonly_bit";
        private bool? _readOnly;
        [Column(ColumnNameReadOnly)]
        public bool? ReadOnly
        {
            get { return _readOnly; }
            set { _readOnly = value; MarkColumnModified(ColumnNameReadOnly); }
        }
        
        public const string ColumnNamePrimary = "adl_primary_bit";
        private bool? _primary;
        [Column(ColumnNamePrimary)]
        public bool? Primary
        {
            get { return _primary; }
            set { _primary = value; MarkColumnModified(ColumnNamePrimary); }
        }
        
        public const string ColumnNameAssetId = "adl_as_asset_id";
        private int? _assetId;
        [Column(ColumnNameAssetId)]
        public int? AssetId
        {
            get { return _assetId; }
            set { _assetId = value; MarkColumnModified(ColumnNameAssetId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_asset")]
    [PrimaryKey("as_asset_id")]
    [ExplicitColumns]
    public class AssetTableModel : TableModel
    {
        
        public const string ColumnNameId = "as_asset_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameName = "as_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
        
        public const string ColumnNameDescription = "as_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameTypeRefId = "as_rv_type_id";
        private int? _typeRefId;
        [Column(ColumnNameTypeRefId)]
        public int? TypeRefId
        {
            get { return _typeRefId; }
            set { _typeRefId = value; MarkColumnModified(ColumnNameTypeRefId); }
        }
        
        public const string ColumnNameURL = "as_url";
        private string _uRL;
        [Column(ColumnNameURL)]
        public string URL
        {
            get { return _uRL; }
            set { _uRL = value; MarkColumnModified(ColumnNameURL); }
        }
        
        public const string ColumnNameNote = "as_note";
        private string _note;
        [Column(ColumnNameNote)]
        public string Note
        {
            get { return _note; }
            set { _note = value; MarkColumnModified(ColumnNameNote); }
        }
        
        public const string ColumnNameClassRefId = "as_rv_class";
        private int? _classRefId;
        [Column(ColumnNameClassRefId)]
        public int? ClassRefId
        {
            get { return _classRefId; }
            set { _classRefId = value; MarkColumnModified(ColumnNameClassRefId); }
        }
        
        public const string ColumnNameYearBuilt = "as_year_built";
        private int? _yearBuilt;
        [Column(ColumnNameYearBuilt)]
        public int? YearBuilt
        {
            get { return _yearBuilt; }
            set { _yearBuilt = value; MarkColumnModified(ColumnNameYearBuilt); }
        }
        
        public const string ColumnNameAssessmentDate = "as_assessment_dt";
        private DateTime? _assessmentDate;
        [Column(ColumnNameAssessmentDate)]
        public DateTime? AssessmentDate
        {
            get { return _assessmentDate; }
            set { _assessmentDate = value; MarkColumnModified(ColumnNameAssessmentDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_asset_info")]
    [PrimaryKey("ai_asset_info_id")]
    [ExplicitColumns]
    public class AssetInfoTableModel : TableModel
    {
        
        public const string ColumnNameId = "ai_asset_info_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameAssetId = "ai_as_asset_id";
        private int _assetId;
        [Column(ColumnNameAssetId)]
        public int AssetId
        {
            get { return _assetId; }
            set { _assetId = value; MarkColumnModified(ColumnNameAssetId); }
        }
        
        public const string ColumnNameTypeRefId = "ai_rv_type";
        private int _typeRefId;
        [Column(ColumnNameTypeRefId)]
        public int TypeRefId
        {
            get { return _typeRefId; }
            set { _typeRefId = value; MarkColumnModified(ColumnNameTypeRefId); }
        }
        
        public const string ColumnNameAmount = "ai_value";
        private decimal _amount;
        [Column(ColumnNameAmount)]
        public decimal Amount
        {
            get { return _amount; }
            set { _amount = value; MarkColumnModified(ColumnNameAmount); }
        }
        
        public const string ColumnNameCurrencyRefId = "ai_rv_currency_id";
        private int? _currencyRefId;
        [Column(ColumnNameCurrencyRefId)]
        public int? CurrencyRefId
        {
            get { return _currencyRefId; }
            set { _currencyRefId = value; MarkColumnModified(ColumnNameCurrencyRefId); }
        }
        
        public const string ColumnNameEffecitveDate = "ai_effective_dt";
        private DateTime? _effecitveDate;
        [Column(ColumnNameEffecitveDate)]
        public DateTime? EffecitveDate
        {
            get { return _effecitveDate; }
            set { _effecitveDate = value; MarkColumnModified(ColumnNameEffecitveDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_asset_links")]
    [PrimaryKey("al_asset_link_id")]
    [ExplicitColumns]
    public class AssetLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "al_asset_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameAssetId = "al_as_asset_id";
        private int _assetId;
        [Column(ColumnNameAssetId)]
        public int AssetId
        {
            get { return _assetId; }
            set { _assetId = value; MarkColumnModified(ColumnNameAssetId); }
        }
        
        public const string ColumnNameTransactionId = "al_tr_transaction_id";
        private int? _transactionId;
        [Column(ColumnNameTransactionId)]
        public int? TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameEntityId = "al_re_entity_id";
        private int? _entityId;
        [Column(ColumnNameEntityId)]
        public int? EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_asset_links_real_estate_credit_spread")]
    [PrimaryKey("alcs_asset_links_real_estate_credit_spread_id")]
    [ExplicitColumns]
    public class AssetLinkRealEstateCreditSpreadTableModel : TableModel
    {
        
        public const string ColumnNameId = "alcs_asset_links_real_estate_credit_spread_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameAssetLinkId = "alcs_al_asset_link_id";
        private int _assetLinkId;
        [Column(ColumnNameAssetLinkId)]
        public int AssetLinkId
        {
            get { return _assetLinkId; }
            set { _assetLinkId = value; MarkColumnModified(ColumnNameAssetLinkId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_asset_real_estate")]
    [PrimaryKey("asr_asset_real_estate_id")]
    [ExplicitColumns]
    public class RealEstateMetaTableModel : TableModel
    {
        
        public const string ColumnNameId = "asr_asset_real_estate_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameAssetId = "asr_as_asset_id";
        private int _assetId;
        [Column(ColumnNameAssetId)]
        public int AssetId
        {
            get { return _assetId; }
            set { _assetId = value; MarkColumnModified(ColumnNameAssetId); }
        }
        
        public const string ColumnNameClientPropertyKey = "asr_client_property_key";
        private string _clientPropertyKey;
        [Column(ColumnNameClientPropertyKey)]
        public string ClientPropertyKey
        {
            get { return _clientPropertyKey; }
            set { _clientPropertyKey = value; MarkColumnModified(ColumnNameClientPropertyKey); }
        }
        
        public const string ColumnNameDescription = "asr_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameTypeRefId = "asr_rv_type";
        private int? _typeRefId;
        [Column(ColumnNameTypeRefId)]
        public int? TypeRefId
        {
            get { return _typeRefId; }
            set { _typeRefId = value; MarkColumnModified(ColumnNameTypeRefId); }
        }
        
        public const string ColumnNameNcreifTypeRefId = "asr_rv_ncreif_type";
        private int? _ncreifTypeRefId;
        [Column(ColumnNameNcreifTypeRefId)]
        public int? NcreifTypeRefId
        {
            get { return _ncreifTypeRefId; }
            set { _ncreifTypeRefId = value; MarkColumnModified(ColumnNameNcreifTypeRefId); }
        }
        
        public const string ColumnNameNcreifSubtypeRefId = "asr_rvs_ncreif_type_sub";
        private int? _ncreifSubtypeRefId;
        [Column(ColumnNameNcreifSubtypeRefId)]
        public int? NcreifSubtypeRefId
        {
            get { return _ncreifSubtypeRefId; }
            set { _ncreifSubtypeRefId = value; MarkColumnModified(ColumnNameNcreifSubtypeRefId); }
        }
        
        public const string ColumnNameURL = "asr_url";
        private string _uRL;
        [Column(ColumnNameURL)]
        public string URL
        {
            get { return _uRL; }
            set { _uRL = value; MarkColumnModified(ColumnNameURL); }
        }
        
        public const string ColumnNameNote = "asr_note";
        private string _note;
        [Column(ColumnNameNote)]
        public string Note
        {
            get { return _note; }
            set { _note = value; MarkColumnModified(ColumnNameNote); }
        }
        
        public const string ColumnNameClassRefId = "asr_rv_class";
        private int? _classRefId;
        [Column(ColumnNameClassRefId)]
        public int? ClassRefId
        {
            get { return _classRefId; }
            set { _classRefId = value; MarkColumnModified(ColumnNameClassRefId); }
        }
        
        public const string ColumnNameYearBuilt = "asr_year_built";
        private int? _yearBuilt;
        [Column(ColumnNameYearBuilt)]
        public int? YearBuilt
        {
            get { return _yearBuilt; }
            set { _yearBuilt = value; MarkColumnModified(ColumnNameYearBuilt); }
        }
        
        public const string ColumnNameSourceDescriptionRefId = "asr_rv_source";
        private int _sourceDescriptionRefId;
        [Column(ColumnNameSourceDescriptionRefId)]
        public int SourceDescriptionRefId
        {
            get { return _sourceDescriptionRefId; }
            set { _sourceDescriptionRefId = value; MarkColumnModified(ColumnNameSourceDescriptionRefId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_contact")]
    [PrimaryKey("rc_contact_id")]
    [ExplicitColumns]
    public class ContactTableModel : TableModel
    {
        
        public const string ColumnNameId = "rc_contact_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameContactFullName = "rc_name_full";
        [ResultColumn(ColumnNameContactFullName)]
        public string ContactFullName { get; set; }
        
        public const string ColumnNameStatus = "rc_rv_status_id";
        private int _status;
        [Column(ColumnNameStatus)]
        public int Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
        
        public const string ColumnNameEntityId = "rc_re_entity_id";
        private int? _entityId;
        [Column(ColumnNameEntityId)]
        public int? EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameContactLastName = "rc_last_name";
        private string _contactLastName;
        [Column(ColumnNameContactLastName)]
        public string ContactLastName
        {
            get { return _contactLastName; }
            set { _contactLastName = value; MarkColumnModified(ColumnNameContactLastName); }
        }
        
        public const string ColumnNameContactFirstName = "rc_first_name";
        private string _contactFirstName;
        [Column(ColumnNameContactFirstName)]
        public string ContactFirstName
        {
            get { return _contactFirstName; }
            set { _contactFirstName = value; MarkColumnModified(ColumnNameContactFirstName); }
        }
        
        public const string ColumnNameContactEmail = "rc_email";
        private string _contactEmail;
        [Column(ColumnNameContactEmail)]
        public string ContactEmail
        {
            get { return _contactEmail; }
            set { _contactEmail = value; MarkColumnModified(ColumnNameContactEmail); }
        }
        
        public const string ColumnNameSalesforceId = "rc_salesforce_id";
        private string _salesforceId;
        [Column(ColumnNameSalesforceId)]
        public string SalesforceId
        {
            get { return _salesforceId; }
            set { _salesforceId = value; MarkColumnModified(ColumnNameSalesforceId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_country")]
    [PrimaryKey("cn_country_id")]
    [ExplicitColumns]
    public class CountryTableModel : TableModel
    {
        
        public const string ColumnNameId = "cn_country_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameName = "cn_country_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
        
        public const string ColumnNameCountryAbbreviation = "cn_country_abrv";
        private string _countryAbbreviation;
        [Column(ColumnNameCountryAbbreviation)]
        public string CountryAbbreviation
        {
            get { return _countryAbbreviation; }
            set { _countryAbbreviation = value; MarkColumnModified(ColumnNameCountryAbbreviation); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_country_regulation")]
    [PrimaryKey("cnr_country_regulation_id")]
    [ExplicitColumns]
    public class CountryRegulationTableModel : TableModel
    {
        
        public const string ColumnNameId = "cnr_country_regulation_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameCountryId = "cnr_cn_country_id";
        private int _countryId;
        [Column(ColumnNameCountryId)]
        public int CountryId
        {
            get { return _countryId; }
            set { _countryId = value; MarkColumnModified(ColumnNameCountryId); }
        }
        
        public const string ColumnNameScopeRefId = "cnr_rv_regulation";
        private int _scopeRefId;
        [Column(ColumnNameScopeRefId)]
        public int ScopeRefId
        {
            get { return _scopeRefId; }
            set { _scopeRefId = value; MarkColumnModified(ColumnNameScopeRefId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_date_timezone")]
    [PrimaryKey("dtz_date_timezone_id")]
    [ExplicitColumns]
    public class DateTimezoneTableModel : TableModel
    {
        
        public const string ColumnNameId = "dtz_date_timezone_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "dtz_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameTimezoneDateType = "dtz_rv_date_type";
        private int _timezoneDateType;
        [Column(ColumnNameTimezoneDateType)]
        public int TimezoneDateType
        {
            get { return _timezoneDateType; }
            set { _timezoneDateType = value; MarkColumnModified(ColumnNameTimezoneDateType); }
        }
        
        public const string ColumnNameDateTimeZone = "dtz_rv_timezone";
        private int _dateTimeZone;
        [Column(ColumnNameDateTimeZone)]
        public int DateTimeZone
        {
            get { return _dateTimeZone; }
            set { _dateTimeZone = value; MarkColumnModified(ColumnNameDateTimeZone); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_document")]
    [PrimaryKey("do_document_id")]
    [ExplicitColumns]
    public class DocumentTableModel : TableModel
    {
        
        public const string ColumnNameId = "do_document_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameFileName = "do_filename";
        private string _fileName;
        [Column(ColumnNameFileName)]
        public string FileName
        {
            get { return _fileName; }
            set { _fileName = value; MarkColumnModified(ColumnNameFileName); }
        }
        
        public const string ColumnNameDocumentType = "do_rv_doc_type";
        private int? _documentType;
        [Column(ColumnNameDocumentType)]
        public int? DocumentType
        {
            get { return _documentType; }
            set { _documentType = value; MarkColumnModified(ColumnNameDocumentType); }
        }
        
        public const string ColumnNameDocumentSubType = "do_rvs_doc_subtype";
        private int? _documentSubType;
        [Column(ColumnNameDocumentSubType)]
        public int? DocumentSubType
        {
            get { return _documentSubType; }
            set { _documentSubType = value; MarkColumnModified(ColumnNameDocumentSubType); }
        }
        
        public const string ColumnNameDocumentStatus = "do_rv_doc_status";
        private int? _documentStatus;
        [Column(ColumnNameDocumentStatus)]
        public int? DocumentStatus
        {
            get { return _documentStatus; }
            set { _documentStatus = value; MarkColumnModified(ColumnNameDocumentStatus); }
        }
        
        public const string ColumnNameStatusDate = "do_status_dt";
        private DateTime? _statusDate;
        [Column(ColumnNameStatusDate)]
        public DateTime? StatusDate
        {
            get { return _statusDate; }
            set { _statusDate = value; MarkColumnModified(ColumnNameStatusDate); }
        }
        
        public const string ColumnNameShowOnWeb = "do_rv_show_on_web";
        private int? _showOnWeb;
        [Column(ColumnNameShowOnWeb)]
        public int? ShowOnWeb
        {
            get { return _showOnWeb; }
            set { _showOnWeb = value; MarkColumnModified(ColumnNameShowOnWeb); }
        }
        
        public const string ColumnNameTrackHistory = "do_track_history_bit";
        private bool _trackHistory;
        [Column(ColumnNameTrackHistory)]
        public bool TrackHistory
        {
            get { return _trackHistory; }
            set { _trackHistory = value; MarkColumnModified(ColumnNameTrackHistory); }
        }
        
        public const string ColumnNameModifiedDate = "do_modify_dt";
        private DateTime? _modifiedDate;
        [Column(ColumnNameModifiedDate)]
        public DateTime? ModifiedDate
        {
            get { return _modifiedDate; }
            set { _modifiedDate = value; MarkColumnModified(ColumnNameModifiedDate); }
        }
        
        public const string ColumnNameActualFileName = "do_actual_filename";
        private string _actualFileName;
        [Column(ColumnNameActualFileName)]
        public string ActualFileName
        {
            get { return _actualFileName; }
            set { _actualFileName = value; MarkColumnModified(ColumnNameActualFileName); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_document_links")]
    [PrimaryKey("dol_document_link_id")]
    [ExplicitColumns]
    public class DocumentLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "dol_document_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameDocumentId = "dol_do_document_id";
        private int _documentId;
        [Column(ColumnNameDocumentId)]
        public int DocumentId
        {
            get { return _documentId; }
            set { _documentId = value; MarkColumnModified(ColumnNameDocumentId); }
        }
        
        public const string ColumnNameEntityId = "dol_re_entity_id";
        private int? _entityId;
        [Column(ColumnNameEntityId)]
        public int? EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameContactId = "dol_rc_contact_id";
        private int? _contactId;
        [Column(ColumnNameContactId)]
        public int? ContactId
        {
            get { return _contactId; }
            set { _contactId = value; MarkColumnModified(ColumnNameContactId); }
        }
        
        public const string ColumnNameTransactionId = "dol_tr_transaction_id";
        private int? _transactionId;
        [Column(ColumnNameTransactionId)]
        public int? TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameLegalEntityId = "dol_le_legal_entity_id";
        private int? _legalEntityId;
        [Column(ColumnNameLegalEntityId)]
        public int? LegalEntityId
        {
            get { return _legalEntityId; }
            set { _legalEntityId = value; MarkColumnModified(ColumnNameLegalEntityId); }
        }
        
        public const string ColumnNamePrimaryLink = "dol_primary_link_bit";
        private bool? _primaryLink;
        [Column(ColumnNamePrimaryLink)]
        public bool? PrimaryLink
        {
            get { return _primaryLink; }
            set { _primaryLink = value; MarkColumnModified(ColumnNamePrimaryLink); }
        }
        
        public const string ColumnNameOngoingCalcId = "dol_fl_ongoing_calc_id";
        private int? _ongoingCalcId;
        [Column(ColumnNameOngoingCalcId)]
        public int? OngoingCalcId
        {
            get { return _ongoingCalcId; }
            set { _ongoingCalcId = value; MarkColumnModified(ColumnNameOngoingCalcId); }
        }
        
        public const string ColumnNameDealTicketDocumentLinkId = "dol_dl_document_link_id";
        private int? _dealTicketDocumentLinkId;
        [Column(ColumnNameDealTicketDocumentLinkId)]
        public int? DealTicketDocumentLinkId
        {
            get { return _dealTicketDocumentLinkId; }
            set { _dealTicketDocumentLinkId = value; MarkColumnModified(ColumnNameDealTicketDocumentLinkId); }
        }
        
        public const string ColumnNameReportId = "dol_rep_report_id";
        private int? _reportId;
        [Column(ColumnNameReportId)]
        public int? ReportId
        {
            get { return _reportId; }
            set { _reportId = value; MarkColumnModified(ColumnNameReportId); }
        }
        
        public const string ColumnNameTicketMessageId = "dol_tkm_ticket_message_id";
        private int? _ticketMessageId;
        [Column(ColumnNameTicketMessageId)]
        public int? TicketMessageId
        {
            get { return _ticketMessageId; }
            set { _ticketMessageId = value; MarkColumnModified(ColumnNameTicketMessageId); }
        }
        
        public const string ColumnNameAccountingFxDefaultId = "dol_cafd_accounting_fx_default_id";
        private int? _accountingFxDefaultId;
        [Column(ColumnNameAccountingFxDefaultId)]
        public int? AccountingFxDefaultId
        {
            get { return _accountingFxDefaultId; }
            set { _accountingFxDefaultId = value; MarkColumnModified(ColumnNameAccountingFxDefaultId); }
        }
        
        public const string ColumnNameEndUserExemptionId = "dol_eue_end_user_exemption_id";
        private int? _endUserExemptionId;
        [Column(ColumnNameEndUserExemptionId)]
        public int? EndUserExemptionId
        {
            get { return _endUserExemptionId; }
            set { _endUserExemptionId = value; MarkColumnModified(ColumnNameEndUserExemptionId); }
        }
        
        public const string ColumnNameEligibleContractParticipantId = "dol_ecp_eligible_contract_participant_id";
        private int? _eligibleContractParticipantId;
        [Column(ColumnNameEligibleContractParticipantId)]
        public int? EligibleContractParticipantId
        {
            get { return _eligibleContractParticipantId; }
            set { _eligibleContractParticipantId = value; MarkColumnModified(ColumnNameEligibleContractParticipantId); }
        }
        
        public const string ColumnNameFileId = "dol_achf_file_id";
        private int? _fileId;
        [Column(ColumnNameFileId)]
        public int? FileId
        {
            get { return _fileId; }
            set { _fileId = value; MarkColumnModified(ColumnNameFileId); }
        }
        
        public const string ColumnNameAchPrenoteFileId = "dol_achpr_ach_prenote_file_id";
        private int? _achPrenoteFileId;
        [Column(ColumnNameAchPrenoteFileId)]
        public int? AchPrenoteFileId
        {
            get { return _achPrenoteFileId; }
            set { _achPrenoteFileId = value; MarkColumnModified(ColumnNameAchPrenoteFileId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_document_note_link")]
    [PrimaryKey("dnl_document_note_link_id")]
    [ExplicitColumns]
    public class DocumentNoteLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "dnl_document_note_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameDocumentId = "dnl_do_document_id";
        private int _documentId;
        [Column(ColumnNameDocumentId)]
        public int DocumentId
        {
            get { return _documentId; }
            set { _documentId = value; MarkColumnModified(ColumnNameDocumentId); }
        }
        
        public const string ColumnNameNoteId = "dnl_nt_note_id";
        private int _noteId;
        [Column(ColumnNameNoteId)]
        public int NoteId
        {
            get { return _noteId; }
            set { _noteId = value; MarkColumnModified(ColumnNameNoteId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_entity")]
    [PrimaryKey("re_entity_id")]
    [ExplicitColumns]
    public class EntityTableModel : TableModel
    {
        
        public const string ColumnNameId = "re_entity_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameCompanyName = "re_company_name";
        private string _companyName;
        [Column(ColumnNameCompanyName)]
        public string CompanyName
        {
            get { return _companyName; }
            set { _companyName = value; MarkColumnModified(ColumnNameCompanyName); }
        }
        
        public const string ColumnNameEntityType = "re_dd_entity_type";
        private string _entityType;
        [Column(ColumnNameEntityType)]
        public string EntityType
        {
            get { return _entityType; }
            set { _entityType = value; MarkColumnModified(ColumnNameEntityType); }
        }
        
        public const string ColumnNameCompanyStatus = "re_rv_status_id";
        private int _companyStatus;
        [Column(ColumnNameCompanyStatus)]
        public int CompanyStatus
        {
            get { return _companyStatus; }
            set { _companyStatus = value; MarkColumnModified(ColumnNameCompanyStatus); }
        }
        
        public const string ColumnNameFriendlyName = "re_friendly_name";
        private string _friendlyName;
        [Column(ColumnNameFriendlyName)]
        public string FriendlyName
        {
            get { return _friendlyName; }
            set { _friendlyName = value; MarkColumnModified(ColumnNameFriendlyName); }
        }
        
        public const string ColumnNameGreatPlainsCustomerClass = "re_rvs_greatplains_cust_class";
        private int? _greatPlainsCustomerClass;
        [Column(ColumnNameGreatPlainsCustomerClass)]
        public int? GreatPlainsCustomerClass
        {
            get { return _greatPlainsCustomerClass; }
            set { _greatPlainsCustomerClass = value; MarkColumnModified(ColumnNameGreatPlainsCustomerClass); }
        }
        
        public const string ColumnNameFictitious = "re_fictitious_bit";
        private bool _fictitious;
        [Column(ColumnNameFictitious)]
        public bool Fictitious
        {
            get { return _fictitious; }
            set { _fictitious = value; MarkColumnModified(ColumnNameFictitious); }
        }
        
        public const string ColumnNameDataOwnerEntityId = "re_data_owner_re_entity_id";
        private int _dataOwnerEntityId;
        [Column(ColumnNameDataOwnerEntityId)]
        public int DataOwnerEntityId
        {
            get { return _dataOwnerEntityId; }
            set { _dataOwnerEntityId = value; MarkColumnModified(ColumnNameDataOwnerEntityId); }
        }
        
        public const string ColumnNameSalesforceId = "re_salesforce_id";
        private string _salesforceId;
        [Column(ColumnNameSalesforceId)]
        public string SalesforceId
        {
            get { return _salesforceId; }
            set { _salesforceId = value; MarkColumnModified(ColumnNameSalesforceId); }
        }
        
        public const string ColumnNameAllowedToHedge = "re_allowed_to_hedge_bit";
        private bool? _allowedToHedge;
        [Column(ColumnNameAllowedToHedge)]
        public bool? AllowedToHedge
        {
            get { return _allowedToHedge; }
            set { _allowedToHedge = value; MarkColumnModified(ColumnNameAllowedToHedge); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_entity_email_delivery_config")]
    [PrimaryKey("edc_entity_email_delivery_config_id")]
    [ExplicitColumns]
    public class EmailDeliveryConfigurationTableModel : TableModel
    {
        
        public const string ColumnNameId = "edc_entity_email_delivery_config_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "edc_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameEmailDeliveryConfigType = "edc_rv_email_delivery_config";
        private int _emailDeliveryConfigType;
        [Column(ColumnNameEmailDeliveryConfigType)]
        public int EmailDeliveryConfigType
        {
            get { return _emailDeliveryConfigType; }
            set { _emailDeliveryConfigType = value; MarkColumnModified(ColumnNameEmailDeliveryConfigType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_entity_email_delivery_whitelabel_config")]
    [PrimaryKey("edwc_entity_email_delivery_whitelabel_config_id")]
    [ExplicitColumns]
    public class EmailDeliveryWhitelabelConfigurationTableModel : TableModel
    {
        
        public const string ColumnNameId = "edwc_entity_email_delivery_whitelabel_config_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "edwc_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameUsername = "edwc_username";
        private string _username;
        [Column(ColumnNameUsername)]
        public string Username
        {
            get { return _username; }
            set { _username = value; MarkColumnModified(ColumnNameUsername); }
        }
        
        public const string ColumnNamePassword = "edwc_password";
        private string _password;
        [Column(ColumnNamePassword)]
        public string Password
        {
            get { return _password; }
            set { _password = value; MarkColumnModified(ColumnNamePassword); }
        }
        
        public const string ColumnNameIpAddress = "edwc_ip_address";
        private string _ipAddress;
        [Column(ColumnNameIpAddress)]
        public string IpAddress
        {
            get { return _ipAddress; }
            set { _ipAddress = value; MarkColumnModified(ColumnNameIpAddress); }
        }
        
        public const string ColumnNameCName = "edwc_cname";
        private string _cName;
        [Column(ColumnNameCName)]
        public string CName
        {
            get { return _cName; }
            set { _cName = value; MarkColumnModified(ColumnNameCName); }
        }
        
        public const string ColumnNameDomain = "edwc_domain";
        private string _domain;
        [Column(ColumnNameDomain)]
        public string Domain
        {
            get { return _domain; }
            set { _domain = value; MarkColumnModified(ColumnNameDomain); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_entity_email_delivery_whitelabel_workflow")]
    [PrimaryKey("edww_entity_email_delivery_whitelabel_workflow_id")]
    [ExplicitColumns]
    public class EmailDeliveryWhitelabelWorkflowTableModel : TableModel
    {
        
        public const string ColumnNameId = "edww_entity_email_delivery_whitelabel_workflow_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "edww_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameWhitelabelConfiguration = "edww_rv_whitelabel_config";
        private int _whitelabelConfiguration;
        [Column(ColumnNameWhitelabelConfiguration)]
        public int WhitelabelConfiguration
        {
            get { return _whitelabelConfiguration; }
            set { _whitelabelConfiguration = value; MarkColumnModified(ColumnNameWhitelabelConfiguration); }
        }
        
        public const string ColumnNameWhitelabelWorkflowDate = "edww_whitelabel_workflow_dto";
        private DateTimeOffset _whitelabelWorkflowDate;
        [Column(ColumnNameWhitelabelWorkflowDate)]
        public DateTimeOffset WhitelabelWorkflowDate
        {
            get { return _whitelabelWorkflowDate; }
            set { _whitelabelWorkflowDate = value; MarkColumnModified(ColumnNameWhitelabelWorkflowDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_entity_regulation")]
    [PrimaryKey("rer_entity_regulation_id")]
    [ExplicitColumns]
    public class EntityRegulationTableModel : TableModel
    {
        
        public const string ColumnNameId = "rer_entity_regulation_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "rer_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameCountryId = "rer_cn_country_id";
        private int? _countryId;
        [Column(ColumnNameCountryId)]
        public int? CountryId
        {
            get { return _countryId; }
            set { _countryId = value; MarkColumnModified(ColumnNameCountryId); }
        }
        
        public const string ColumnNameLei = "rer_lei";
        private string _lei;
        [Column(ColumnNameLei)]
        public string Lei
        {
            get { return _lei; }
            set { _lei = value; MarkColumnModified(ColumnNameLei); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_entity_relationships")]
    [PrimaryKey("nr_relationship_id")]
    [ExplicitColumns]
    public class EntityRelationshipTableModel : TableModel
    {
        
        public const string ColumnNameId = "nr_relationship_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameParentEntityId = "nr_parent_re_entity_id";
        private int _parentEntityId;
        [Column(ColumnNameParentEntityId)]
        public int ParentEntityId
        {
            get { return _parentEntityId; }
            set { _parentEntityId = value; MarkColumnModified(ColumnNameParentEntityId); }
        }
        
        public const string ColumnNameChildEntityId = "nr_child_re_entity_id";
        private int _childEntityId;
        [Column(ColumnNameChildEntityId)]
        public int ChildEntityId
        {
            get { return _childEntityId; }
            set { _childEntityId = value; MarkColumnModified(ColumnNameChildEntityId); }
        }
        
        public const string ColumnNameRelationshipType = "nr_relnship_type";
        private string _relationshipType;
        [Column(ColumnNameRelationshipType)]
        public string RelationshipType
        {
            get { return _relationshipType; }
            set { _relationshipType = value; MarkColumnModified(ColumnNameRelationshipType); }
        }
        
        public const string ColumnNameDescription = "nr_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameCreateContactId = "nr_create_nm_id";
        private int? _createContactId;
        [Column(ColumnNameCreateContactId)]
        public int? CreateContactId
        {
            get { return _createContactId; }
            set { _createContactId = value; MarkColumnModified(ColumnNameCreateContactId); }
        }
        
        public const string ColumnNameCreateDate = "nr_create_dt";
        private DateTime? _createDate;
        [Column(ColumnNameCreateDate)]
        public DateTime? CreateDate
        {
            get { return _createDate; }
            set { _createDate = value; MarkColumnModified(ColumnNameCreateDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_financial_center_holiday")]
    [PrimaryKey("fch_financial_center_holiday_id")]
    [ExplicitColumns]
    public class FinancialCenterHolidayTableModel : TableModel
    {
        
        public const string ColumnNameId = "fch_financial_center_holiday_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameFinancialCenterId = "fch_fci_financial_center_info_id";
        private int _financialCenterId;
        [Column(ColumnNameFinancialCenterId)]
        public int FinancialCenterId
        {
            get { return _financialCenterId; }
            set { _financialCenterId = value; MarkColumnModified(ColumnNameFinancialCenterId); }
        }
        
        public const string ColumnNameCalendarDate = "fch_calendar_dt";
        private DateTime _calendarDate;
        [Column(ColumnNameCalendarDate)]
        public DateTime CalendarDate
        {
            get { return _calendarDate; }
            set { _calendarDate = value; MarkColumnModified(ColumnNameCalendarDate); }
        }
        
        public const string ColumnNameCalendarDateEnd = "fch_calendar_dt_end";
        private DateTime _calendarDateEnd;
        [Column(ColumnNameCalendarDateEnd)]
        public DateTime CalendarDateEnd
        {
            get { return _calendarDateEnd; }
            set { _calendarDateEnd = value; MarkColumnModified(ColumnNameCalendarDateEnd); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_financials")]
    [PrimaryKey("fn_financials_id")]
    [ExplicitColumns]
    public class FinancialTableModel : TableModel
    {
        
        public const string ColumnNameId = "fn_financials_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "fn_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameFunctionalCurrencyId = "fn_rv_home_currency_id";
        private int? _functionalCurrencyId;
        [Column(ColumnNameFunctionalCurrencyId)]
        public int? FunctionalCurrencyId
        {
            get { return _functionalCurrencyId; }
            set { _functionalCurrencyId = value; MarkColumnModified(ColumnNameFunctionalCurrencyId); }
        }
        
        public const string ColumnNameNotes = "fn_notes";
        private string _notes;
        [Column(ColumnNameNotes)]
        public string Notes
        {
            get { return _notes; }
            set { _notes = value; MarkColumnModified(ColumnNameNotes); }
        }
        
        public const string ColumnNameTaxId = "fn_tax_id";
        private string _taxId;
        [Column(ColumnNameTaxId)]
        public string TaxId
        {
            get { return _taxId; }
            set { _taxId = value; MarkColumnModified(ColumnNameTaxId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_holiday_city")]
    [PrimaryKey("hc_holiday_city_id")]
    [ExplicitColumns]
    public class HolidayCityTableModel : TableModel
    {
        
        public const string ColumnNameId = "hc_holiday_city_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameHolidayCityName = "hc_city";
        private string _holidayCityName;
        [Column(ColumnNameHolidayCityName)]
        public string HolidayCityName
        {
            get { return _holidayCityName; }
            set { _holidayCityName = value; MarkColumnModified(ColumnNameHolidayCityName); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_legal_entity")]
    [PrimaryKey("rl_legal_entity_id")]
    [ExplicitColumns]
    public class LegalEntityTableModel : TableModel
    {
        
        public const string ColumnNameId = "rl_legal_entity_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "rl_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameIsBorrower = "rl_borrower_bit";
        private bool _isBorrower;
        [Column(ColumnNameIsBorrower)]
        public bool IsBorrower
        {
            get { return _isBorrower; }
            set { _isBorrower = value; MarkColumnModified(ColumnNameIsBorrower); }
        }
        
        public const string ColumnNameIsSmallBank = "rl_small_bank_bit";
        private bool? _isSmallBank;
        [Column(ColumnNameIsSmallBank)]
        public bool? IsSmallBank
        {
            get { return _isSmallBank; }
            set { _isSmallBank = value; MarkColumnModified(ColumnNameIsSmallBank); }
        }
        
        public const string ColumnNameEUEElection = "rl_rv_eue_election";
        private int _eUEElection;
        [Column(ColumnNameEUEElection)]
        public int EUEElection
        {
            get { return _eUEElection; }
            set { _eUEElection = value; MarkColumnModified(ColumnNameEUEElection); }
        }
        
        public const string ColumnNameDefaultValuationCurrency = "rl_rv_default_valuation_currency";
        private int? _defaultValuationCurrency;
        [Column(ColumnNameDefaultValuationCurrency)]
        public int? DefaultValuationCurrency
        {
            get { return _defaultValuationCurrency; }
            set { _defaultValuationCurrency = value; MarkColumnModified(ColumnNameDefaultValuationCurrency); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_market_data_agreement")]
    [PrimaryKey("mda_market_data_agreement_id")]
    [ExplicitColumns]
    public class MarketDataAgreementTableModel : TableModel
    {
        
        public const string ColumnNameId = "mda_market_data_agreement_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameMarketDataProviderId = "mda_mdp_market_data_provider_id";
        private int _marketDataProviderId;
        [Column(ColumnNameMarketDataProviderId)]
        public int MarketDataProviderId
        {
            get { return _marketDataProviderId; }
            set { _marketDataProviderId = value; MarkColumnModified(ColumnNameMarketDataProviderId); }
        }
        
        public const string ColumnNameAgreementDescription = "mda_description";
        private string _agreementDescription;
        [Column(ColumnNameAgreementDescription)]
        public string AgreementDescription
        {
            get { return _agreementDescription; }
            set { _agreementDescription = value; MarkColumnModified(ColumnNameAgreementDescription); }
        }
        
        public const string ColumnNameAgreementStartDate = "mda_start_date";
        private DateTime? _agreementStartDate;
        [Column(ColumnNameAgreementStartDate)]
        public DateTime? AgreementStartDate
        {
            get { return _agreementStartDate; }
            set { _agreementStartDate = value; MarkColumnModified(ColumnNameAgreementStartDate); }
        }
        
        public const string ColumnNameAgreementEndDate = "mda_end_date";
        private DateTime? _agreementEndDate;
        [Column(ColumnNameAgreementEndDate)]
        public DateTime? AgreementEndDate
        {
            get { return _agreementEndDate; }
            set { _agreementEndDate = value; MarkColumnModified(ColumnNameAgreementEndDate); }
        }
        
        public const string ColumnNameLicenseEntity = "mda_rv_licensed_entity";
        private int _licenseEntity;
        [Column(ColumnNameLicenseEntity)]
        public int LicenseEntity
        {
            get { return _licenseEntity; }
            set { _licenseEntity = value; MarkColumnModified(ColumnNameLicenseEntity); }
        }
        
        public const string ColumnNameRenewalCycle = "mda_rv_renewal_cycle";
        private int _renewalCycle;
        [Column(ColumnNameRenewalCycle)]
        public int RenewalCycle
        {
            get { return _renewalCycle; }
            set { _renewalCycle = value; MarkColumnModified(ColumnNameRenewalCycle); }
        }
        
        public const string ColumnNameTerminationNoticeInDays = "mda_termination_notice_in_days";
        private int? _terminationNoticeInDays;
        [Column(ColumnNameTerminationNoticeInDays)]
        public int? TerminationNoticeInDays
        {
            get { return _terminationNoticeInDays; }
            set { _terminationNoticeInDays = value; MarkColumnModified(ColumnNameTerminationNoticeInDays); }
        }
        
        public const string ColumnNameAccountManagerContactId = "mda_account_manager_contact_id";
        private int? _accountManagerContactId;
        [Column(ColumnNameAccountManagerContactId)]
        public int? AccountManagerContactId
        {
            get { return _accountManagerContactId; }
            set { _accountManagerContactId = value; MarkColumnModified(ColumnNameAccountManagerContactId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_market_data_agreement_user")]
    [PrimaryKey("mdau_market_data_agreement_user_id")]
    [ExplicitColumns]
    public class MarketDataAgreementUserTableModel : TableModel
    {
        
        public const string ColumnNameId = "mdau_market_data_agreement_user_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameMarketDataPackageId = "mdau_mdpa_market_data_package_id";
        private int _marketDataPackageId;
        [Column(ColumnNameMarketDataPackageId)]
        public int MarketDataPackageId
        {
            get { return _marketDataPackageId; }
            set { _marketDataPackageId = value; MarkColumnModified(ColumnNameMarketDataPackageId); }
        }
        
        public const string ColumnNameLicenseStartDate = "mdau_start_date";
        private DateTime? _licenseStartDate;
        [Column(ColumnNameLicenseStartDate)]
        public DateTime? LicenseStartDate
        {
            get { return _licenseStartDate; }
            set { _licenseStartDate = value; MarkColumnModified(ColumnNameLicenseStartDate); }
        }
        
        public const string ColumnNameLicenseEndDate = "mdau_end_date";
        private DateTime? _licenseEndDate;
        [Column(ColumnNameLicenseEndDate)]
        public DateTime? LicenseEndDate
        {
            get { return _licenseEndDate; }
            set { _licenseEndDate = value; MarkColumnModified(ColumnNameLicenseEndDate); }
        }
        
        public const string ColumnNameLicenseType = "mdau_rv_license_type";
        private int? _licenseType;
        [Column(ColumnNameLicenseType)]
        public int? LicenseType
        {
            get { return _licenseType; }
            set { _licenseType = value; MarkColumnModified(ColumnNameLicenseType); }
        }
        
        public const string ColumnNameAccountManagerContactId = "mdau_account_manager_contact_id";
        private int? _accountManagerContactId;
        [Column(ColumnNameAccountManagerContactId)]
        public int? AccountManagerContactId
        {
            get { return _accountManagerContactId; }
            set { _accountManagerContactId = value; MarkColumnModified(ColumnNameAccountManagerContactId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_market_data_package")]
    [PrimaryKey("mdpa_market_data_package_id")]
    [ExplicitColumns]
    public class MarketDataPackageTableModel : TableModel
    {
        
        public const string ColumnNameId = "mdpa_market_data_package_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameMarketDataAgreementId = "mdpa_mda_market_data_agreement_id";
        private int _marketDataAgreementId;
        [Column(ColumnNameMarketDataAgreementId)]
        public int MarketDataAgreementId
        {
            get { return _marketDataAgreementId; }
            set { _marketDataAgreementId = value; MarkColumnModified(ColumnNameMarketDataAgreementId); }
        }
        
        public const string ColumnNamePackageDescription = "mdpa_description";
        private string _packageDescription;
        [Column(ColumnNamePackageDescription)]
        public string PackageDescription
        {
            get { return _packageDescription; }
            set { _packageDescription = value; MarkColumnModified(ColumnNamePackageDescription); }
        }
        
        public const string ColumnNameReportingRequirement = "mdpa_rv_reporting_requirement";
        private int _reportingRequirement;
        [Column(ColumnNameReportingRequirement)]
        public int ReportingRequirement
        {
            get { return _reportingRequirement; }
            set { _reportingRequirement = value; MarkColumnModified(ColumnNameReportingRequirement); }
        }
        
        public const string ColumnNameEdadReportingCode = "mdpa_edad_reporting_code";
        private string _edadReportingCode;
        [Column(ColumnNameEdadReportingCode)]
        public string EdadReportingCode
        {
            get { return _edadReportingCode; }
            set { _edadReportingCode = value; MarkColumnModified(ColumnNameEdadReportingCode); }
        }
        
        public const string ColumnNameExternalRedistribution = "mdpa_rv_external_redistribution_raw";
        private int _externalRedistribution;
        [Column(ColumnNameExternalRedistribution)]
        public int ExternalRedistribution
        {
            get { return _externalRedistribution; }
            set { _externalRedistribution = value; MarkColumnModified(ColumnNameExternalRedistribution); }
        }
        
        public const string ColumnNameExternalRedistributionDelayinHours = "mdpa_external_redistribution_delay_in_hours";
        private int? _externalRedistributionDelayinHours;
        [Column(ColumnNameExternalRedistributionDelayinHours)]
        public int? ExternalRedistributionDelayinHours
        {
            get { return _externalRedistributionDelayinHours; }
            set { _externalRedistributionDelayinHours = value; MarkColumnModified(ColumnNameExternalRedistributionDelayinHours); }
        }
        
        public const string ColumnNameFeeLiableReporting = "mdpa_fee_liable_reporting_bit";
        private bool _feeLiableReporting;
        [Column(ColumnNameFeeLiableReporting)]
        public bool FeeLiableReporting
        {
            get { return _feeLiableReporting; }
            set { _feeLiableReporting = value; MarkColumnModified(ColumnNameFeeLiableReporting); }
        }
        
        public const string ColumnNameExternalRedistributionDerived = "mdpa_rv_external_redistribution_derived";
        private int _externalRedistributionDerived;
        [Column(ColumnNameExternalRedistributionDerived)]
        public int ExternalRedistributionDerived
        {
            get { return _externalRedistributionDerived; }
            set { _externalRedistributionDerived = value; MarkColumnModified(ColumnNameExternalRedistributionDerived); }
        }
        
        public const string ColumnNamePackagePublishTime = "mdpa_publish_time";
        private TimeSpan? _packagePublishTime;
        [Column(ColumnNamePackagePublishTime)]
        public TimeSpan? PackagePublishTime
        {
            get { return _packagePublishTime; }
            set { _packagePublishTime = value; MarkColumnModified(ColumnNamePackagePublishTime); }
        }
        
        public const string ColumnNameMarketDataPackageTimeZoneId = "mdpa_publish_time_zone_id";
        private int? _marketDataPackageTimeZoneId;
        [Column(ColumnNameMarketDataPackageTimeZoneId)]
        public int? MarketDataPackageTimeZoneId
        {
            get { return _marketDataPackageTimeZoneId; }
            set { _marketDataPackageTimeZoneId = value; MarkColumnModified(ColumnNameMarketDataPackageTimeZoneId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_market_data_package_cost")]
    [PrimaryKey("mdpc_market_data_package_cost_id")]
    [ExplicitColumns]
    public class MarketDataPackageCostTableModel : TableModel
    {
        
        public const string ColumnNameId = "mdpc_market_data_package_cost_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameMarketDataPackageId = "mdpc_mdpa_market_data_package_id";
        private int _marketDataPackageId;
        [Column(ColumnNameMarketDataPackageId)]
        public int MarketDataPackageId
        {
            get { return _marketDataPackageId; }
            set { _marketDataPackageId = value; MarkColumnModified(ColumnNameMarketDataPackageId); }
        }
        
        public const string ColumnNamePricingStartDate = "mdpc_start_date";
        private DateTime? _pricingStartDate;
        [Column(ColumnNamePricingStartDate)]
        public DateTime? PricingStartDate
        {
            get { return _pricingStartDate; }
            set { _pricingStartDate = value; MarkColumnModified(ColumnNamePricingStartDate); }
        }
        
        public const string ColumnNamePricingEndDate = "mdpc_end_date";
        private DateTime? _pricingEndDate;
        [Column(ColumnNamePricingEndDate)]
        public DateTime? PricingEndDate
        {
            get { return _pricingEndDate; }
            set { _pricingEndDate = value; MarkColumnModified(ColumnNamePricingEndDate); }
        }
        
        public const string ColumnNameMonthlyUnitPrice = "mdpc_monthly_unit_price";
        private decimal? _monthlyUnitPrice;
        [Column(ColumnNameMonthlyUnitPrice)]
        public decimal? MonthlyUnitPrice
        {
            get { return _monthlyUnitPrice; }
            set { _monthlyUnitPrice = value; MarkColumnModified(ColumnNameMonthlyUnitPrice); }
        }
        
        public const string ColumnNamePriceCurrency = "mdpc_rv_currency";
        private int? _priceCurrency;
        [Column(ColumnNamePriceCurrency)]
        public int? PriceCurrency
        {
            get { return _priceCurrency; }
            set { _priceCurrency = value; MarkColumnModified(ColumnNamePriceCurrency); }
        }
        
        public const string ColumnNameUnitOfPricing = "mdpc_rv_pricing_unit";
        private int? _unitOfPricing;
        [Column(ColumnNameUnitOfPricing)]
        public int? UnitOfPricing
        {
            get { return _unitOfPricing; }
            set { _unitOfPricing = value; MarkColumnModified(ColumnNameUnitOfPricing); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_market_data_package_index")]
    [PrimaryKey("mdpi_market_data_package_index_id")]
    [ExplicitColumns]
    public class MarketDataPackageIndexTableModel : TableModel
    {
        
        public const string ColumnNameId = "mdpi_market_data_package_index_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameMarketDataPackageId = "mdpi_mdpa_market_data_package_id";
        private int _marketDataPackageId;
        [Column(ColumnNameMarketDataPackageId)]
        public int MarketDataPackageId
        {
            get { return _marketDataPackageId; }
            set { _marketDataPackageId = value; MarkColumnModified(ColumnNameMarketDataPackageId); }
        }
        
        public const string ColumnNameIndexId = "mdpi_ip_provider_index_id";
        private int _indexId;
        [Column(ColumnNameIndexId)]
        public int IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_market_data_provider")]
    [PrimaryKey("mdp_market_data_provider_id")]
    [ExplicitColumns]
    public class MarketDataProviderTableModel : TableModel
    {
        
        public const string ColumnNameId = "mdp_market_data_provider_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameProviderType = "mdp_rv_provider_type";
        private int _providerType;
        [Column(ColumnNameProviderType)]
        public int ProviderType
        {
            get { return _providerType; }
            set { _providerType = value; MarkColumnModified(ColumnNameProviderType); }
        }
        
        public const string ColumnNameEntityId = "mdp_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_market_data_terminal")]
    [PrimaryKey("mdtm_market_data_terminal_id")]
    [ExplicitColumns]
    public class MarketDataTerminalTableModel : TableModel
    {
        
        public const string ColumnNameId = "mdtm_market_data_terminal_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameSerialNumber = "mdtm_serial_number";
        private string _serialNumber;
        [Column(ColumnNameSerialNumber)]
        public string SerialNumber
        {
            get { return _serialNumber; }
            set { _serialNumber = value; MarkColumnModified(ColumnNameSerialNumber); }
        }
        
        public const string ColumnNameLicenseType = "mdtm_rv_license_type";
        private int _licenseType;
        [Column(ColumnNameLicenseType)]
        public int LicenseType
        {
            get { return _licenseType; }
            set { _licenseType = value; MarkColumnModified(ColumnNameLicenseType); }
        }
        
        public const string ColumnNameSid = "mdtm_sid";
        private string _sid;
        [Column(ColumnNameSid)]
        public string Sid
        {
            get { return _sid; }
            set { _sid = value; MarkColumnModified(ColumnNameSid); }
        }
        
        public const string ColumnNameUserNumber = "mdtm_user_number";
        private string _userNumber;
        [Column(ColumnNameUserNumber)]
        public string UserNumber
        {
            get { return _userNumber; }
            set { _userNumber = value; MarkColumnModified(ColumnNameUserNumber); }
        }
        
        public const string ColumnNameUuid = "mdtm_uuid";
        private string _uuid;
        [Column(ColumnNameUuid)]
        public string Uuid
        {
            get { return _uuid; }
            set { _uuid = value; MarkColumnModified(ColumnNameUuid); }
        }
        
        public const string ColumnNameLicenseRenewalDate = "mdtm_renewal_date";
        private DateTime? _licenseRenewalDate;
        [Column(ColumnNameLicenseRenewalDate)]
        public DateTime? LicenseRenewalDate
        {
            get { return _licenseRenewalDate; }
            set { _licenseRenewalDate = value; MarkColumnModified(ColumnNameLicenseRenewalDate); }
        }
        
        public const string ColumnNameFloorLocation = "mdtm_location";
        private string _floorLocation;
        [Column(ColumnNameFloorLocation)]
        public string FloorLocation
        {
            get { return _floorLocation; }
            set { _floorLocation = value; MarkColumnModified(ColumnNameFloorLocation); }
        }
        
        public const string ColumnNameOffice = "mdtm_rv_office";
        private int _office;
        [Column(ColumnNameOffice)]
        public int Office
        {
            get { return _office; }
            set { _office = value; MarkColumnModified(ColumnNameOffice); }
        }
        
        public const string ColumnNameContractDate = "mdtm_contract_date";
        private DateTime? _contractDate;
        [Column(ColumnNameContractDate)]
        public DateTime? ContractDate
        {
            get { return _contractDate; }
            set { _contractDate = value; MarkColumnModified(ColumnNameContractDate); }
        }
        
        public const string ColumnNameRegistrantContactId = "mdtm_registrant_rc_contact_id";
        private int? _registrantContactId;
        [Column(ColumnNameRegistrantContactId)]
        public int? RegistrantContactId
        {
            get { return _registrantContactId; }
            set { _registrantContactId = value; MarkColumnModified(ColumnNameRegistrantContactId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_market_data_terminal_package")]
    [PrimaryKey("mdtp_market_data_terminal_package_id")]
    [ExplicitColumns]
    public class MarketDataTerminalPackageTableModel : TableModel
    {
        
        public const string ColumnNameId = "mdtp_market_data_terminal_package_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameMarketDataTerminalId = "mdtp_mdtm_market_data_terminal_id";
        private int _marketDataTerminalId;
        [Column(ColumnNameMarketDataTerminalId)]
        public int MarketDataTerminalId
        {
            get { return _marketDataTerminalId; }
            set { _marketDataTerminalId = value; MarkColumnModified(ColumnNameMarketDataTerminalId); }
        }
        
        public const string ColumnNameMarketDataPackageId = "mdtp_mdpa_market_data_package_id";
        private int _marketDataPackageId;
        [Column(ColumnNameMarketDataPackageId)]
        public int MarketDataPackageId
        {
            get { return _marketDataPackageId; }
            set { _marketDataPackageId = value; MarkColumnModified(ColumnNameMarketDataPackageId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_notes")]
    [PrimaryKey("nt_note_id")]
    [ExplicitColumns]
    public class NoteTableModel : TableModel
    {
        
        public const string ColumnNameId = "nt_note_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameText = "nt_notes";
        private string _text;
        [Column(ColumnNameText)]
        public string Text
        {
            get { return _text; }
            set { _text = value; MarkColumnModified(ColumnNameText); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_phone_nbr")]
    [PrimaryKey("ph_phone_nbr_id")]
    [ExplicitColumns]
    public class PhoneTableModel : TableModel
    {
        
        public const string ColumnNameId = "ph_phone_nbr_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameCountryId = "ph_cn_country_id";
        private int? _countryId;
        [Column(ColumnNameCountryId)]
        public int? CountryId
        {
            get { return _countryId; }
            set { _countryId = value; MarkColumnModified(ColumnNameCountryId); }
        }
        
        public const string ColumnNameAreaCode = "ph_area_code";
        private string _areaCode;
        [Column(ColumnNameAreaCode)]
        public string AreaCode
        {
            get { return _areaCode; }
            set { _areaCode = value; MarkColumnModified(ColumnNameAreaCode); }
        }
        
        public const string ColumnNamePhoneNumber = "ph_nbr";
        private string _phoneNumber;
        [Column(ColumnNamePhoneNumber)]
        public string PhoneNumber
        {
            get { return _phoneNumber; }
            set { _phoneNumber = value; MarkColumnModified(ColumnNamePhoneNumber); }
        }
        
        public const string ColumnNameExtension = "ph_ext";
        private string _extension;
        [Column(ColumnNameExtension)]
        public string Extension
        {
            get { return _extension; }
            set { _extension = value; MarkColumnModified(ColumnNameExtension); }
        }
        
        public const string ColumnNameDescription = "ph_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_phone_nbr_links")]
    [PrimaryKey("phl_phone_link_id")]
    [ExplicitColumns]
    public class PhoneLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "phl_phone_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNamePhoneId = "phl_ph_phone_nbr_id";
        private int _phoneId;
        [Column(ColumnNamePhoneId)]
        public int PhoneId
        {
            get { return _phoneId; }
            set { _phoneId = value; MarkColumnModified(ColumnNamePhoneId); }
        }
        
        public const string ColumnNameEntityId = "phl_re_entity_id";
        private int? _entityId;
        [Column(ColumnNameEntityId)]
        public int? EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameContactId = "phl_rc_contact_id";
        private int? _contactId;
        [Column(ColumnNameContactId)]
        public int? ContactId
        {
            get { return _contactId; }
            set { _contactId = value; MarkColumnModified(ColumnNameContactId); }
        }
        
        public const string ColumnNamePhoneType = "phl_rv_type_id";
        private int? _phoneType;
        [Column(ColumnNamePhoneType)]
        public int? PhoneType
        {
            get { return _phoneType; }
            set { _phoneType = value; MarkColumnModified(ColumnNamePhoneType); }
        }
        
        public const string ColumnNameDescription = "phl_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNamePrimary = "phl_primary_bit";
        private bool? _primary;
        [Column(ColumnNamePrimary)]
        public bool? Primary
        {
            get { return _primary; }
            set { _primary = value; MarkColumnModified(ColumnNamePrimary); }
        }
        
        public const string ColumnNameReadonly = "phl_readonly_bit";
        private bool? _readonly;
        [Column(ColumnNameReadonly)]
        public bool? Readonly
        {
            get { return _readonly; }
            set { _readonly = value; MarkColumnModified(ColumnNameReadonly); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_project")]
    [PrimaryKey("pj_project_id")]
    [ExplicitColumns]
    public class ProjectTableModel : TableModel
    {
        
        public const string ColumnNameId = "pj_project_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameName = "pj_project_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
        
        public const string ColumnNameType = "pj_rv_project_type";
        private int _type;
        [Column(ColumnNameType)]
        public int Type
        {
            get { return _type; }
            set { _type = value; MarkColumnModified(ColumnNameType); }
        }
        
        public const string ColumnNameStatus = "pj_rv_status";
        private int? _status;
        [Column(ColumnNameStatus)]
        public int? Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_project_index_link")]
    [PrimaryKey("pil_project_index_link_id")]
    [ExplicitColumns]
    public class ProjectIndexLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "pil_project_index_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameProjectId = "pil_pj_project_id";
        private int _projectId;
        [Column(ColumnNameProjectId)]
        public int ProjectId
        {
            get { return _projectId; }
            set { _projectId = value; MarkColumnModified(ColumnNameProjectId); }
        }
        
        public const string ColumnNameIndexId = "pil_ix_index_id";
        private int _indexId;
        [Column(ColumnNameIndexId)]
        public int IndexId
        {
            get { return _indexId; }
            set { _indexId = value; MarkColumnModified(ColumnNameIndexId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_project_permission_link")]
    [PrimaryKey("pp_project_permission_link_id")]
    [ExplicitColumns]
    public class ProjectPermissionLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "pp_project_permission_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameProjectId = "pp_pj_project_id";
        private int? _projectId;
        [Column(ColumnNameProjectId)]
        public int? ProjectId
        {
            get { return _projectId; }
            set { _projectId = value; MarkColumnModified(ColumnNameProjectId); }
        }
        
        public const string ColumnNameTransactionId = "pp_tr_transaction_id";
        private int? _transactionId;
        [Column(ColumnNameTransactionId)]
        public int? TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameValue = "pp_value";
        private bool? _value;
        [Column(ColumnNameValue)]
        public bool? Value
        {
            get { return _value; }
            set { _value = value; MarkColumnModified(ColumnNameValue); }
        }
        
        public const string ColumnNameContactId = "pp_rc_contact_id";
        private int? _contactId;
        [Column(ColumnNameContactId)]
        public int? ContactId
        {
            get { return _contactId; }
            set { _contactId = value; MarkColumnModified(ColumnNameContactId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_project_transaction_link")]
    [PrimaryKey("pt_project_transaction_link_id")]
    [ExplicitColumns]
    public class ProjectTransactionLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "pt_project_transaction_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "pt_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameProjectId = "pt_pj_project_id";
        private int _projectId;
        [Column(ColumnNameProjectId)]
        public int ProjectId
        {
            get { return _projectId; }
            set { _projectId = value; MarkColumnModified(ColumnNameProjectId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_provider_fieldsets")]
    [PrimaryKey("fs_provider_fieldset_id")]
    [ExplicitColumns]
    public class ProviderFieldSetTableModel : TableModel
    {
        
        public const string ColumnNameId = "fs_provider_fieldset_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameDescription = "fs_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameProvider = "fs_rv_provider_name_id";
        private int? _provider;
        [Column(ColumnNameProvider)]
        public int? Provider
        {
            get { return _provider; }
            set { _provider = value; MarkColumnModified(ColumnNameProvider); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_reference_value")]
    [PrimaryKey("rv_ref_value_key_id")]
    [ExplicitColumns]
    public class ReferenceValueTableModel : TableModel
    {
        
        public const string ColumnNameId = "rv_ref_value_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameGroupId = "rv_rf_reference_id";
        private int _groupId;
        [Column(ColumnNameGroupId)]
        public int GroupId
        {
            get { return _groupId; }
            set { _groupId = value; MarkColumnModified(ColumnNameGroupId); }
        }
        
        public const string ColumnNameDescription = "rv_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameNote = "rv_note";
        private string _note;
        [Column(ColumnNameNote)]
        public string Note
        {
            get { return _note; }
            set { _note = value; MarkColumnModified(ColumnNameNote); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_reference_value_sub")]
    [PrimaryKey("rvs_identity")]
    [ExplicitColumns]
    public class ReferenceValueSubTableModel : TableModel
    {
        
        public const string ColumnNameId = "rvs_ref_value_sub_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameParentReferenceValueId = "rvs_rv_ref_value_id";
        private int _parentReferenceValueId;
        [Column(ColumnNameParentReferenceValueId)]
        public int ParentReferenceValueId
        {
            get { return _parentReferenceValueId; }
            set { _parentReferenceValueId = value; MarkColumnModified(ColumnNameParentReferenceValueId); }
        }
        
        public const string ColumnNameDescription = "rvs_description";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameNote = "rvs_note";
        private string _note;
        [Column(ColumnNameNote)]
        public string Note
        {
            get { return _note; }
            set { _note = value; MarkColumnModified(ColumnNameNote); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_regulation_detail_dodd_frank")]
    [PrimaryKey("redf_regulation_detail_dodd_frank_id")]
    [ExplicitColumns]
    public class RegulationDetailDoddFrankTableModel : TableModel
    {
        
        public const string ColumnNameId = "redf_regulation_detail_dodd_frank_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityRegulationId = "redf_rer_entity_regulation_id";
        private int _entityRegulationId;
        [Column(ColumnNameEntityRegulationId)]
        public int EntityRegulationId
        {
            get { return _entityRegulationId; }
            set { _entityRegulationId = value; MarkColumnModified(ColumnNameEntityRegulationId); }
        }
        
        public const string ColumnNameIRAssetClass = "redf_asset_class_ir_bit";
        private bool _iRAssetClass;
        [Column(ColumnNameIRAssetClass)]
        public bool IRAssetClass
        {
            get { return _iRAssetClass; }
            set { _iRAssetClass = value; MarkColumnModified(ColumnNameIRAssetClass); }
        }
        
        public const string ColumnNameFXAssetClass = "redf_asset_class_fx_bit";
        private bool _fXAssetClass;
        [Column(ColumnNameFXAssetClass)]
        public bool FXAssetClass
        {
            get { return _fXAssetClass; }
            set { _fXAssetClass = value; MarkColumnModified(ColumnNameFXAssetClass); }
        }
        
        public const string ColumnNameCommodityAssetClass = "redf_asset_class_commodity_bit";
        private bool _commodityAssetClass;
        [Column(ColumnNameCommodityAssetClass)]
        public bool CommodityAssetClass
        {
            get { return _commodityAssetClass; }
            set { _commodityAssetClass = value; MarkColumnModified(ColumnNameCommodityAssetClass); }
        }
        
        public const string ColumnNameIsUsPerson = "redf_is_us_person_bit";
        private bool _isUsPerson;
        [Column(ColumnNameIsUsPerson)]
        public bool IsUsPerson
        {
            get { return _isUsPerson; }
            set { _isUsPerson = value; MarkColumnModified(ColumnNameIsUsPerson); }
        }
        
        public const string ColumnNameRegulationStatus = "redf_rv_status";
        private int _regulationStatus;
        [Column(ColumnNameRegulationStatus)]
        public int RegulationStatus
        {
            get { return _regulationStatus; }
            set { _regulationStatus = value; MarkColumnModified(ColumnNameRegulationStatus); }
        }
        
        public const string ColumnNameSecFiler = "redf_rv_sec_filer";
        private int? _secFiler;
        [Column(ColumnNameSecFiler)]
        public int? SecFiler
        {
            get { return _secFiler; }
            set { _secFiler = value; MarkColumnModified(ColumnNameSecFiler); }
        }
        
        public const string ColumnNameBoardApproved = "redf_is_board_approved_bit";
        private bool? _boardApproved;
        [Column(ColumnNameBoardApproved)]
        public bool? BoardApproved
        {
            get { return _boardApproved; }
            set { _boardApproved = value; MarkColumnModified(ColumnNameBoardApproved); }
        }
        
        public const string ColumnNameSuitabilityPoliciesSentDate = "redf_suitability_policies_sent_dt";
        private DateTime? _suitabilityPoliciesSentDate;
        [Column(ColumnNameSuitabilityPoliciesSentDate)]
        public DateTime? SuitabilityPoliciesSentDate
        {
            get { return _suitabilityPoliciesSentDate; }
            set { _suitabilityPoliciesSentDate = value; MarkColumnModified(ColumnNameSuitabilityPoliciesSentDate); }
        }
        
        public const string ColumnNameSuitabilityPoliciesAdopted = "redf_suitability_policies_adopted_bit";
        private bool? _suitabilityPoliciesAdopted;
        [Column(ColumnNameSuitabilityPoliciesAdopted)]
        public bool? SuitabilityPoliciesAdopted
        {
            get { return _suitabilityPoliciesAdopted; }
            set { _suitabilityPoliciesAdopted = value; MarkColumnModified(ColumnNameSuitabilityPoliciesAdopted); }
        }
        
        public const string ColumnNameEueSelected = "redf_eue_selected";
        private bool? _eueSelected;
        [Column(ColumnNameEueSelected)]
        public bool? EueSelected
        {
            get { return _eueSelected; }
            set { _eueSelected = value; MarkColumnModified(ColumnNameEueSelected); }
        }
        
        public const string ColumnNameCpoName = "redf_cpo_name";
        private string _cpoName;
        [Column(ColumnNameCpoName)]
        public string CpoName
        {
            get { return _cpoName; }
            set { _cpoName = value; MarkColumnModified(ColumnNameCpoName); }
        }
        
        public const string ColumnNameCpoExemption = "redf_rv_pool_exemptions";
        private int _cpoExemption;
        [Column(ColumnNameCpoExemption)]
        public int CpoExemption
        {
            get { return _cpoExemption; }
            set { _cpoExemption = value; MarkColumnModified(ColumnNameCpoExemption); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_regulation_detail_emir")]
    [PrimaryKey("reem_regulation_detail_emir_id")]
    [ExplicitColumns]
    public class RegulationDetailEmirTableModel : TableModel
    {
        
        public const string ColumnNameId = "reem_regulation_detail_emir_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityRegulationId = "reem_rer_entity_regulation_id";
        private int _entityRegulationId;
        [Column(ColumnNameEntityRegulationId)]
        public int EntityRegulationId
        {
            get { return _entityRegulationId; }
            set { _entityRegulationId = value; MarkColumnModified(ColumnNameEntityRegulationId); }
        }
        
        public const string ColumnNameRegulationStatus = "reem_rv_regulatory_status";
        private int? _regulationStatus;
        [Column(ColumnNameRegulationStatus)]
        public int? RegulationStatus
        {
            get { return _regulationStatus; }
            set { _regulationStatus = value; MarkColumnModified(ColumnNameRegulationStatus); }
        }
        
        public const string ColumnNamePoliciesSentDate = "reem_emir_policies_sent_dt";
        private DateTime? _policiesSentDate;
        [Column(ColumnNamePoliciesSentDate)]
        public DateTime? PoliciesSentDate
        {
            get { return _policiesSentDate; }
            set { _policiesSentDate = value; MarkColumnModified(ColumnNamePoliciesSentDate); }
        }
        
        public const string ColumnNamePoliciesAdopted = "reem_emir_policies_adopted_bit";
        private bool? _policiesAdopted;
        [Column(ColumnNamePoliciesAdopted)]
        public bool? PoliciesAdopted
        {
            get { return _policiesAdopted; }
            set { _policiesAdopted = value; MarkColumnModified(ColumnNamePoliciesAdopted); }
        }
        
        public const string ColumnNameIsAuthorizedCreditInstitution = "reem_is_authorized_credit_institution_bit";
        private bool? _isAuthorizedCreditInstitution;
        [Column(ColumnNameIsAuthorizedCreditInstitution)]
        public bool? IsAuthorizedCreditInstitution
        {
            get { return _isAuthorizedCreditInstitution; }
            set { _isAuthorizedCreditInstitution = value; MarkColumnModified(ColumnNameIsAuthorizedCreditInstitution); }
        }
        
        public const string ColumnNameSubjectToAIFMD = "reem_subject_to_aifmd_bit";
        private bool? _subjectToAIFMD;
        [Column(ColumnNameSubjectToAIFMD)]
        public bool? SubjectToAIFMD
        {
            get { return _subjectToAIFMD; }
            set { _subjectToAIFMD = value; MarkColumnModified(ColumnNameSubjectToAIFMD); }
        }
        
        public const string ColumnNameInScopeForEMIR = "reem_rv_scope";
        private int? _inScopeForEMIR;
        [Column(ColumnNameInScopeForEMIR)]
        public int? InScopeForEMIR
        {
            get { return _inScopeForEMIR; }
            set { _inScopeForEMIR = value; MarkColumnModified(ColumnNameInScopeForEMIR); }
        }
        
        public const string ColumnNameEMIRClearingCategory = "reem_rv_clearing_category";
        private int? _eMIRClearingCategory;
        [Column(ColumnNameEMIRClearingCategory)]
        public int? EMIRClearingCategory
        {
            get { return _eMIRClearingCategory; }
            set { _eMIRClearingCategory = value; MarkColumnModified(ColumnNameEMIRClearingCategory); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_regulation_nfa_registration_status")]
    [PrimaryKey("rnfa_regulation_nfa_registration_status_id")]
    [ExplicitColumns]
    public class RegulationDetailDoddFrankNfaRegistrationStatusTableModel : TableModel
    {
        
        public const string ColumnNameId = "rnfa_regulation_nfa_registration_status_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameRegulationDetailDoddFrankId = "rnfa_redf_regulation_detail_dodd_frank_id";
        private int _regulationDetailDoddFrankId;
        [Column(ColumnNameRegulationDetailDoddFrankId)]
        public int RegulationDetailDoddFrankId
        {
            get { return _regulationDetailDoddFrankId; }
            set { _regulationDetailDoddFrankId = value; MarkColumnModified(ColumnNameRegulationDetailDoddFrankId); }
        }
        
        public const string ColumnNameStatus = "rnfa_status";
        private int _status;
        [Column(ColumnNameStatus)]
        public int Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_reminder")]
    [PrimaryKey("rem_reminder_id")]
    [ExplicitColumns]
    public class ReminderTableModel : TableModel
    {
        
        public const string ColumnNameId = "rem_reminder_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameReferenceDate = "rem_reference_dt";
        private DateTime? _referenceDate;
        [Column(ColumnNameReferenceDate)]
        public DateTime? ReferenceDate
        {
            get { return _referenceDate; }
            set { _referenceDate = value; MarkColumnModified(ColumnNameReferenceDate); }
        }
        
        public const string ColumnNameDateType = "rem_rv_date_type";
        private int _dateType;
        [Column(ColumnNameDateType)]
        public int DateType
        {
            get { return _dateType; }
            set { _dateType = value; MarkColumnModified(ColumnNameDateType); }
        }
        
        public const string ColumnNameSubject = "rem_subject";
        private string _subject;
        [Column(ColumnNameSubject)]
        public string Subject
        {
            get { return _subject; }
            set { _subject = value; MarkColumnModified(ColumnNameSubject); }
        }
        
        public const string ColumnNameBody = "rem_body";
        private string _body;
        [Column(ColumnNameBody)]
        public string Body
        {
            get { return _body; }
            set { _body = value; MarkColumnModified(ColumnNameBody); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_reminder_date")]
    [PrimaryKey("rmd_reminder_date_id")]
    [ExplicitColumns]
    public class ReminderDateTableModel : TableModel
    {
        
        public const string ColumnNameId = "rmd_reminder_date_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameReminderId = "rmd_rem_reminder_id";
        private int _reminderId;
        [Column(ColumnNameReminderId)]
        public int ReminderId
        {
            get { return _reminderId; }
            set { _reminderId = value; MarkColumnModified(ColumnNameReminderId); }
        }
        
        public const string ColumnNameDaysBack = "rmd_days_back";
        private int _daysBack;
        [Column(ColumnNameDaysBack)]
        public int DaysBack
        {
            get { return _daysBack; }
            set { _daysBack = value; MarkColumnModified(ColumnNameDaysBack); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_reminder_link")]
    [PrimaryKey("rml_reminder_link_id")]
    [ExplicitColumns]
    public class ReminderLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "rml_reminder_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameReminderId = "rml_rem_reminder_id";
        private int _reminderId;
        [Column(ColumnNameReminderId)]
        public int ReminderId
        {
            get { return _reminderId; }
            set { _reminderId = value; MarkColumnModified(ColumnNameReminderId); }
        }
        
        public const string ColumnNameEntityId = "rml_re_entity_id";
        private int? _entityId;
        [Column(ColumnNameEntityId)]
        public int? EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameTransactionId = "rml_tr_transaction_id";
        private int? _transactionId;
        [Column(ColumnNameTransactionId)]
        public int? TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_reminder_recipient")]
    [PrimaryKey("rmr_reminder_recipient_id")]
    [ExplicitColumns]
    public class ReminderRecipientTableModel : TableModel
    {
        
        public const string ColumnNameId = "rmr_reminder_recipient_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameReminderId = "rmr_rem_reminder_id";
        private int _reminderId;
        [Column(ColumnNameReminderId)]
        public int ReminderId
        {
            get { return _reminderId; }
            set { _reminderId = value; MarkColumnModified(ColumnNameReminderId); }
        }
        
        public const string ColumnNameContactId = "rmr_rc_contact_id";
        private int _contactId;
        [Column(ColumnNameContactId)]
        public int ContactId
        {
            get { return _contactId; }
            set { _contactId = value; MarkColumnModified(ColumnNameContactId); }
        }
        
        public const string ColumnNameType = "rmr_rv_type";
        private int _type;
        [Column(ColumnNameType)]
        public int Type
        {
            get { return _type; }
            set { _type = value; MarkColumnModified(ColumnNameType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_role")]
    [PrimaryKey("cro_role_id")]
    [ExplicitColumns]
    public class RoleTableModel : TableModel
    {
        
        public const string ColumnNameId = "cro_role_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameRoleEntityId = "cro_re_entity_id";
        private int _roleEntityId;
        [Column(ColumnNameRoleEntityId)]
        public int RoleEntityId
        {
            get { return _roleEntityId; }
            set { _roleEntityId = value; MarkColumnModified(ColumnNameRoleEntityId); }
        }
        
        public const string ColumnNameRoleName = "cro_role_name";
        private string _roleName;
        [Column(ColumnNameRoleName)]
        public string RoleName
        {
            get { return _roleName; }
            set { _roleName = value; MarkColumnModified(ColumnNameRoleName); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_state")]
    [PrimaryKey("st_state_id")]
    [ExplicitColumns]
    public class StateTableModel : TableModel
    {
        
        public const string ColumnNameId = "st_state_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameCountryId = "st_cn_country_id";
        private int _countryId;
        [Column(ColumnNameCountryId)]
        public int CountryId
        {
            get { return _countryId; }
            set { _countryId = value; MarkColumnModified(ColumnNameCountryId); }
        }
        
        public const string ColumnNameName = "st_state_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
        
        public const string ColumnNameStateAbbreviation = "st_state_abrv";
        private string _stateAbbreviation;
        [Column(ColumnNameStateAbbreviation)]
        public string StateAbbreviation
        {
            get { return _stateAbbreviation; }
            set { _stateAbbreviation = value; MarkColumnModified(ColumnNameStateAbbreviation); }
        }
        
        public const string ColumnNameRegionRefId = "st_rv_region";
        private int? _regionRefId;
        [Column(ColumnNameRegionRefId)]
        public int? RegionRefId
        {
            get { return _regionRefId; }
            set { _regionRefId = value; MarkColumnModified(ColumnNameRegionRefId); }
        }
        
        public const string ColumnNameDivisionRefId = "st_rv_division";
        private int? _divisionRefId;
        [Column(ColumnNameDivisionRefId)]
        public int? DivisionRefId
        {
            get { return _divisionRefId; }
            set { _divisionRefId = value; MarkColumnModified(ColumnNameDivisionRefId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_time_zone")]
    [PrimaryKey("tz_time_zone_id")]
    [ExplicitColumns]
    public class MarketDataPackageTimeZoneTableModel : TableModel
    {
        
        public const string ColumnNameId = "tz_time_zone_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameDescription = "tz_time_zone_desc";
        private string _description;
        [Column(ColumnNameDescription)]
        public string Description
        {
            get { return _description; }
            set { _description = value; MarkColumnModified(ColumnNameDescription); }
        }
        
        public const string ColumnNameAbbreviation = "tz_time_zone_abrv";
        private string _abbreviation;
        [Column(ColumnNameAbbreviation)]
        public string Abbreviation
        {
            get { return _abbreviation; }
            set { _abbreviation = value; MarkColumnModified(ColumnNameAbbreviation); }
        }
        
        public const string ColumnNameHoursFromGmt = "tz_hrs_from_gmt";
        private int? _hoursFromGmt;
        [Column(ColumnNameHoursFromGmt)]
        public int? HoursFromGmt
        {
            get { return _hoursFromGmt; }
            set { _hoursFromGmt = value; MarkColumnModified(ColumnNameHoursFromGmt); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.com_user_pref")]
    [PrimaryKey("up_user_pref_id")]
    [ExplicitColumns]
    public class UserPreferenceTableModel : TableModel
    {
        
        public const string ColumnNameId = "up_user_pref_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameUserId = "up_us_user_id";
        private int _userId;
        [Column(ColumnNameUserId)]
        public int UserId
        {
            get { return _userId; }
            set { _userId = value; MarkColumnModified(ColumnNameUserId); }
        }
        
        public const string ColumnNameUserPreference = "up_rv_pref_type_id";
        private int? _userPreference;
        [Column(ColumnNameUserPreference)]
        public int? UserPreference
        {
            get { return _userPreference; }
            set { _userPreference = value; MarkColumnModified(ColumnNameUserPreference); }
        }
        
        public const string ColumnNamePreferenceValue = "up_pref_value";
        private string _preferenceValue;
        [Column(ColumnNamePreferenceValue)]
        public string PreferenceValue
        {
            get { return _preferenceValue; }
            set { _preferenceValue = value; MarkColumnModified(ColumnNamePreferenceValue); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.dtcc_request_response")]
    [PrimaryKey("drr_request_response_id")]
    [ExplicitColumns]
    public class DtccRequestResponseTableModel : TableModel
    {
        
        public const string ColumnNameId = "drr_request_response_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameMessageTime = "drr_message_dto";
        private DateTimeOffset _messageTime;
        [Column(ColumnNameMessageTime)]
        public DateTimeOffset MessageTime
        {
            get { return _messageTime; }
            set { _messageTime = value; MarkColumnModified(ColumnNameMessageTime); }
        }
        
        public const string ColumnNameDtccRequestResponseType = "drr_rv_type";
        private int _dtccRequestResponseType;
        [Column(ColumnNameDtccRequestResponseType)]
        public int DtccRequestResponseType
        {
            get { return _dtccRequestResponseType; }
            set { _dtccRequestResponseType = value; MarkColumnModified(ColumnNameDtccRequestResponseType); }
        }
        
        public const string ColumnNameUrl = "drr_url";
        private string _url;
        [Column(ColumnNameUrl)]
        public string Url
        {
            get { return _url; }
            set { _url = value; MarkColumnModified(ColumnNameUrl); }
        }
        
        public const string ColumnNameMessage = "drr_message";
        private string _message;
        [Column(ColumnNameMessage)]
        public string Message
        {
            get { return _message; }
            set { _message = value; MarkColumnModified(ColumnNameMessage); }
        }
        
        public const string ColumnNameCreatedBy = "drr_create_nm_id";
        private int? _createdBy;
        [Column(ColumnNameCreatedBy)]
        public int? CreatedBy
        {
            get { return _createdBy; }
            set { _createdBy = value; MarkColumnModified(ColumnNameCreatedBy); }
        }
        
        public const string ColumnNameCreatedDate = "drr_create_dto";
        private DateTimeOffset? _createdDate;
        [Column(ColumnNameCreatedDate)]
        public DateTimeOffset? CreatedDate
        {
            get { return _createdDate; }
            set { _createdDate = value; MarkColumnModified(ColumnNameCreatedDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.dtcc_request_response_sdr")]
    [PrimaryKey("drrs_request_response_sdr_id")]
    [ExplicitColumns]
    public class DtccRequestResponseSdrTableModel : TableModel
    {
        
        public const string ColumnNameId = "drrs_request_response_sdr_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameDtccRequestResponseId = "drrs_drr_request_response_id";
        private int _dtccRequestResponseId;
        [Column(ColumnNameDtccRequestResponseId)]
        public int DtccRequestResponseId
        {
            get { return _dtccRequestResponseId; }
            set { _dtccRequestResponseId = value; MarkColumnModified(ColumnNameDtccRequestResponseId); }
        }
        
        public const string ColumnNameTransactionId = "drrs_tr_transaction_id";
        private int? _transactionId;
        [Column(ColumnNameTransactionId)]
        public int? TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameSdrId = "drrs_sdr";
        private int _sdrId;
        [Column(ColumnNameSdrId)]
        public int SdrId
        {
            get { return _sdrId; }
            set { _sdrId = value; MarkColumnModified(ColumnNameSdrId); }
        }
        
        public const string ColumnNameCreatedBy = "drrs_create_nm_id";
        private int? _createdBy;
        [Column(ColumnNameCreatedBy)]
        public int? CreatedBy
        {
            get { return _createdBy; }
            set { _createdBy = value; MarkColumnModified(ColumnNameCreatedBy); }
        }
        
        public const string ColumnNameCreatedDate = "drrs_create_dto";
        private DateTimeOffset? _createdDate;
        [Column(ColumnNameCreatedDate)]
        public DateTimeOffset? CreatedDate
        {
            get { return _createdDate; }
            set { _createdDate = value; MarkColumnModified(ColumnNameCreatedDate); }
        }
        
        public const string ColumnNameRecordId = "drrs_record_id";
        private int _recordId;
        [Column(ColumnNameRecordId)]
        public int RecordId
        {
            get { return _recordId; }
            set { _recordId = value; MarkColumnModified(ColumnNameRecordId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.dtcc_request_response_transaction")]
    [PrimaryKey("drrt_request_response_transaction_id")]
    [ExplicitColumns]
    public class DtccRequestResponseTransactionTableModel : TableModel
    {
        
        public const string ColumnNameId = "drrt_request_response_transaction_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameDtccRequestResponseId = "drrt_drr_request_response_id";
        private int _dtccRequestResponseId;
        [Column(ColumnNameDtccRequestResponseId)]
        public int DtccRequestResponseId
        {
            get { return _dtccRequestResponseId; }
            set { _dtccRequestResponseId = value; MarkColumnModified(ColumnNameDtccRequestResponseId); }
        }
        
        public const string ColumnNameTransactionId = "drrt_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNameCreatedBy = "drrt_create_nm_id";
        private int? _createdBy;
        [Column(ColumnNameCreatedBy)]
        public int? CreatedBy
        {
            get { return _createdBy; }
            set { _createdBy = value; MarkColumnModified(ColumnNameCreatedBy); }
        }
        
        public const string ColumnNameCreatedDate = "drrt_create_dto";
        private DateTimeOffset? _createdDate;
        [Column(ColumnNameCreatedDate)]
        public DateTimeOffset? CreatedDate
        {
            get { return _createdDate; }
            set { _createdDate = value; MarkColumnModified(ColumnNameCreatedDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.exp_entity_planning_cycle_link")]
    [PrimaryKey("epcl_entity_planning_cycle_link_id")]
    [ExplicitColumns]
    public class EntityPlanningCycleLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "epcl_entity_planning_cycle_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameLegalEntityId = "epcl_rl_legal_entity_id";
        private int _legalEntityId;
        [Column(ColumnNameLegalEntityId)]
        public int LegalEntityId
        {
            get { return _legalEntityId; }
            set { _legalEntityId = value; MarkColumnModified(ColumnNameLegalEntityId); }
        }
        
        public const string ColumnNamePlanningCycleId = "epcl_expc_planning_cycle_id";
        private int _planningCycleId;
        [Column(ColumnNamePlanningCycleId)]
        public int PlanningCycleId
        {
            get { return _planningCycleId; }
            set { _planningCycleId = value; MarkColumnModified(ColumnNamePlanningCycleId); }
        }
        
        public const string ColumnNameSubmitterContactId = "exps_rc_contact_id_exposure_submitter";
        private int? _submitterContactId;
        [Column(ColumnNameSubmitterContactId)]
        public int? SubmitterContactId
        {
            get { return _submitterContactId; }
            set { _submitterContactId = value; MarkColumnModified(ColumnNameSubmitterContactId); }
        }
        
        public const string ColumnNameApproverContactId = "exps_rc_contact_id_exposure_approver";
        private int? _approverContactId;
        [Column(ColumnNameApproverContactId)]
        public int? ApproverContactId
        {
            get { return _approverContactId; }
            set { _approverContactId = value; MarkColumnModified(ColumnNameApproverContactId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.exp_entity_planning_cycle_status")]
    [PrimaryKey("epcs_entity_planning_cycle_status_id")]
    [ExplicitColumns]
    public class EntityPlanningCycleStatusTableModel : TableModel
    {
        
        public const string ColumnNameId = "epcs_entity_planning_cycle_status_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityPlanningCycleLinkId = "epcs_epcl_entity_planning_cycle_link_id";
        private int _entityPlanningCycleLinkId;
        [Column(ColumnNameEntityPlanningCycleLinkId)]
        public int EntityPlanningCycleLinkId
        {
            get { return _entityPlanningCycleLinkId; }
            set { _entityPlanningCycleLinkId = value; MarkColumnModified(ColumnNameEntityPlanningCycleLinkId); }
        }
        
        public const string ColumnNameEntityId = "epcs_responsible_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameStatus = "epcs_rv_status";
        private int _status;
        [Column(ColumnNameStatus)]
        public int Status
        {
            get { return _status; }
            set { _status = value; MarkColumnModified(ColumnNameStatus); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.exp_exposure")]
    [PrimaryKey("exp_exposure_id")]
    [ExplicitColumns]
    public class ExposureTableModel : TableModel
    {
        
        public const string ColumnNameId = "exp_exposure_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityPlanningCycleLinkId = "exp_epcl_entity_planning_cycle_link_id";
        private int _entityPlanningCycleLinkId;
        [Column(ColumnNameEntityPlanningCycleLinkId)]
        public int EntityPlanningCycleLinkId
        {
            get { return _entityPlanningCycleLinkId; }
            set { _entityPlanningCycleLinkId = value; MarkColumnModified(ColumnNameEntityPlanningCycleLinkId); }
        }
        
        public const string ColumnNameCurrency = "exp_rv_currency";
        private int _currency;
        [Column(ColumnNameCurrency)]
        public int Currency
        {
            get { return _currency; }
            set { _currency = value; MarkColumnModified(ColumnNameCurrency); }
        }
        
        public const string ColumnNameAmount = "exp_amount";
        private decimal _amount;
        [Column(ColumnNameAmount)]
        public decimal Amount
        {
            get { return _amount; }
            set { _amount = value; MarkColumnModified(ColumnNameAmount); }
        }
        
        public const string ColumnNameTag = "exp_tag";
        private string _tag;
        [Column(ColumnNameTag)]
        public string Tag
        {
            get { return _tag; }
            set { _tag = value; MarkColumnModified(ColumnNameTag); }
        }
        
        public const string ColumnNamePlanningCycleBucketId = "exp_pceb_planning_cycle_exposure_buckets_id";
        private int _planningCycleBucketId;
        [Column(ColumnNamePlanningCycleBucketId)]
        public int PlanningCycleBucketId
        {
            get { return _planningCycleBucketId; }
            set { _planningCycleBucketId = value; MarkColumnModified(ColumnNamePlanningCycleBucketId); }
        }
        
        public const string ColumnNamePlanningCyclePeriodSettingId = "exp_pcps_planning_cycle_period_settings_id";
        private int _planningCyclePeriodSettingId;
        [Column(ColumnNamePlanningCyclePeriodSettingId)]
        public int PlanningCyclePeriodSettingId
        {
            get { return _planningCyclePeriodSettingId; }
            set { _planningCyclePeriodSettingId = value; MarkColumnModified(ColumnNamePlanningCyclePeriodSettingId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.exp_planning_cycle")]
    [PrimaryKey("expc_planning_cycle_id")]
    [ExplicitColumns]
    public class PlanningCycleTableModel : TableModel
    {
        
        public const string ColumnNameId = "expc_planning_cycle_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameName = "expc_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
        
        public const string ColumnNameEffectiveDate = "expc_effective_dt";
        private DateTime _effectiveDate;
        [Column(ColumnNameEffectiveDate)]
        public DateTime EffectiveDate
        {
            get { return _effectiveDate; }
            set { _effectiveDate = value; MarkColumnModified(ColumnNameEffectiveDate); }
        }
        
        public const string ColumnNameNote = "expc_note";
        private string _note;
        [Column(ColumnNameNote)]
        public string Note
        {
            get { return _note; }
            set { _note = value; MarkColumnModified(ColumnNameNote); }
        }
        
        public const string ColumnNameDueDate = "expc_due_date";
        private DateTime? _dueDate;
        [Column(ColumnNameDueDate)]
        public DateTime? DueDate
        {
            get { return _dueDate; }
            set { _dueDate = value; MarkColumnModified(ColumnNameDueDate); }
        }
        
        public const string ColumnNamePlanningCycleSettingsId = "expc_pcs_planning_cycle_settings_id";
        private int _planningCycleSettingsId;
        [Column(ColumnNamePlanningCycleSettingsId)]
        public int PlanningCycleSettingsId
        {
            get { return _planningCycleSettingsId; }
            set { _planningCycleSettingsId = value; MarkColumnModified(ColumnNamePlanningCycleSettingsId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.exp_planning_cycle_exposure_buckets")]
    [PrimaryKey("pceb_planning_cycle_exposure_buckets_id")]
    [ExplicitColumns]
    public class PlanningCycleExposureBucketsTableModel : TableModel
    {
        
        public const string ColumnNameId = "pceb_planning_cycle_exposure_buckets_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNamePlanningCycleSettingsId = "pceb_pcs_planning_cycle_settings_id";
        private int _planningCycleSettingsId;
        [Column(ColumnNamePlanningCycleSettingsId)]
        public int PlanningCycleSettingsId
        {
            get { return _planningCycleSettingsId; }
            set { _planningCycleSettingsId = value; MarkColumnModified(ColumnNamePlanningCycleSettingsId); }
        }
        
        public const string ColumnNameName = "pceb_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
        
        public const string ColumnNameType = "pceb_rv_type";
        private int _type;
        [Column(ColumnNameType)]
        public int Type
        {
            get { return _type; }
            set { _type = value; MarkColumnModified(ColumnNameType); }
        }
        
        public const string ColumnNameDefaultTradingBucket = "pceb_default_trading_bucket_bit";
        private bool _defaultTradingBucket;
        [Column(ColumnNameDefaultTradingBucket)]
        public bool DefaultTradingBucket
        {
            get { return _defaultTradingBucket; }
            set { _defaultTradingBucket = value; MarkColumnModified(ColumnNameDefaultTradingBucket); }
        }
        
        public const string ColumnNameUseHedging = "pceb_use_hedging_bit";
        private bool _useHedging;
        [Column(ColumnNameUseHedging)]
        public bool UseHedging
        {
            get { return _useHedging; }
            set { _useHedging = value; MarkColumnModified(ColumnNameUseHedging); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.exp_planning_cycle_period_settings")]
    [PrimaryKey("pcps_planning_cycle_period_settings_id")]
    [ExplicitColumns]
    public class PlanningCyclePeriodSettingsTableModel : TableModel
    {
        
        public const string ColumnNameId = "pcps_planning_cycle_period_settings_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNamePlanningCycleSettingId = "pcps_pcs_planning_cycle_settings_id";
        private int _planningCycleSettingId;
        [Column(ColumnNamePlanningCycleSettingId)]
        public int PlanningCycleSettingId
        {
            get { return _planningCycleSettingId; }
            set { _planningCycleSettingId = value; MarkColumnModified(ColumnNamePlanningCycleSettingId); }
        }
        
        public const string ColumnNamePeriod = "pcps_period";
        private int _period;
        [Column(ColumnNamePeriod)]
        public int Period
        {
            get { return _period; }
            set { _period = value; MarkColumnModified(ColumnNamePeriod); }
        }
        
        public const string ColumnNameAmount = "pcps_amount";
        private decimal _amount;
        [Column(ColumnNameAmount)]
        public decimal Amount
        {
            get { return _amount; }
            set { _amount = value; MarkColumnModified(ColumnNameAmount); }
        }
        
        public const string ColumnNameMinAmount = "pcps_min_amount";
        private decimal? _minAmount;
        [Column(ColumnNameMinAmount)]
        public decimal? MinAmount
        {
            get { return _minAmount; }
            set { _minAmount = value; MarkColumnModified(ColumnNameMinAmount); }
        }
        
        public const string ColumnNameMaxAmount = "pcps_max_amount";
        private decimal? _maxAmount;
        [Column(ColumnNameMaxAmount)]
        public decimal? MaxAmount
        {
            get { return _maxAmount; }
            set { _maxAmount = value; MarkColumnModified(ColumnNameMaxAmount); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.exp_planning_cycle_settings")]
    [PrimaryKey("pcs_planning_cycle_settings_id")]
    [ExplicitColumns]
    public class PlanningCycleSettingsTableModel : TableModel
    {
        
        public const string ColumnNameId = "pcs_planning_cycle_settings_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "pcs_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameCycleFrequency = "pcs_rv_cycle_frequency";
        private int? _cycleFrequency;
        [Column(ColumnNameCycleFrequency)]
        public int? CycleFrequency
        {
            get { return _cycleFrequency; }
            set { _cycleFrequency = value; MarkColumnModified(ColumnNameCycleFrequency); }
        }
        
        public const string ColumnNameNumberOfCycles = "pcs_number_of_cycle_frequencies";
        private int? _numberOfCycles;
        [Column(ColumnNameNumberOfCycles)]
        public int? NumberOfCycles
        {
            get { return _numberOfCycles; }
            set { _numberOfCycles = value; MarkColumnModified(ColumnNameNumberOfCycles); }
        }
        
        public const string ColumnNameCycleRollDay = "pcs_cycle_roll_day";
        private int? _cycleRollDay;
        [Column(ColumnNameCycleRollDay)]
        public int? CycleRollDay
        {
            get { return _cycleRollDay; }
            set { _cycleRollDay = value; MarkColumnModified(ColumnNameCycleRollDay); }
        }
        
        public const string ColumnNameCfarTolerance = "pcs_cfar_tolerance";
        private long? _cfarTolerance;
        [Column(ColumnNameCfarTolerance)]
        public long? CfarTolerance
        {
            get { return _cfarTolerance; }
            set { _cfarTolerance = value; MarkColumnModified(ColumnNameCfarTolerance); }
        }
        
        public const string ColumnNameWorstCaseRiskPercentile = "pcs_worst_case_risk_percentile";
        private decimal? _worstCaseRiskPercentile;
        [Column(ColumnNameWorstCaseRiskPercentile)]
        public decimal? WorstCaseRiskPercentile
        {
            get { return _worstCaseRiskPercentile; }
            set { _worstCaseRiskPercentile = value; MarkColumnModified(ColumnNameWorstCaseRiskPercentile); }
        }
        
        public const string ColumnNameEffectiveDate = "pcs_effective_dt";
        private DateTime _effectiveDate;
        [Column(ColumnNameEffectiveDate)]
        public DateTime EffectiveDate
        {
            get { return _effectiveDate; }
            set { _effectiveDate = value; MarkColumnModified(ColumnNameEffectiveDate); }
        }
        
        public const string ColumnNameSettingType = "pcs_rv_setting_type";
        private int? _settingType;
        [Column(ColumnNameSettingType)]
        public int? SettingType
        {
            get { return _settingType; }
            set { _settingType = value; MarkColumnModified(ColumnNameSettingType); }
        }
        
        public const string ColumnNameSpillOverPeriod = "pcs_spillover_period";
        private int? _spillOverPeriod;
        [Column(ColumnNameSpillOverPeriod)]
        public int? SpillOverPeriod
        {
            get { return _spillOverPeriod; }
            set { _spillOverPeriod = value; MarkColumnModified(ColumnNameSpillOverPeriod); }
        }
        
        public const string ColumnNameTradeRoundingConvention = "pcs_rv_trade_rounding_convention";
        private int? _tradeRoundingConvention;
        [Column(ColumnNameTradeRoundingConvention)]
        public int? TradeRoundingConvention
        {
            get { return _tradeRoundingConvention; }
            set { _tradeRoundingConvention = value; MarkColumnModified(ColumnNameTradeRoundingConvention); }
        }
        
        public const string ColumnNameTradeMaturityRollDay = "pcs_trade_maturity_roll_day";
        private int? _tradeMaturityRollDay;
        [Column(ColumnNameTradeMaturityRollDay)]
        public int? TradeMaturityRollDay
        {
            get { return _tradeMaturityRollDay; }
            set { _tradeMaturityRollDay = value; MarkColumnModified(ColumnNameTradeMaturityRollDay); }
        }
        
        public const string ColumnNameGlobalHedging = "pcs_global_hedging_bit";
        private bool _globalHedging;
        [Column(ColumnNameGlobalHedging)]
        public bool GlobalHedging
        {
            get { return _globalHedging; }
            set { _globalHedging = value; MarkColumnModified(ColumnNameGlobalHedging); }
        }
        
        public const string ColumnNameProgramSettingType = "pcs_rv_program_setting";
        private int _programSettingType;
        [Column(ColumnNameProgramSettingType)]
        public int ProgramSettingType
        {
            get { return _programSettingType; }
            set { _programSettingType = value; MarkColumnModified(ColumnNameProgramSettingType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.exp_transaction_exposure_buckets_link")]
    [PrimaryKey("tebl_transaction_exposure_buckets_link_id")]
    [ExplicitColumns]
    public class TransactionExposureBucketsLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "tebl_transaction_exposure_buckets_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTransactionId = "tebl_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
        
        public const string ColumnNamePlanningCycleExposureBucketsId = "tebl_pceb_planning_cycle_exposure_buckets_id";
        private int _planningCycleExposureBucketsId;
        [Column(ColumnNamePlanningCycleExposureBucketsId)]
        public int PlanningCycleExposureBucketsId
        {
            get { return _planningCycleExposureBucketsId; }
            set { _planningCycleExposureBucketsId = value; MarkColumnModified(ColumnNamePlanningCycleExposureBucketsId); }
        }
        
        public const string ColumnNameSubType = "tebl_subtype";
        private string _subType;
        [Column(ColumnNameSubType)]
        public string SubType
        {
            get { return _subType; }
            set { _subType = value; MarkColumnModified(ColumnNameSubType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.lms_report")]
    [PrimaryKey("rep_report_id")]
    [ExplicitColumns]
    public class ReportTableModel : TableModel
    {
        
        public const string ColumnNameId = "rep_report_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameReportName = "rep_report_name";
        private string _reportName;
        [Column(ColumnNameReportName)]
        public string ReportName
        {
            get { return _reportName; }
            set { _reportName = value; MarkColumnModified(ColumnNameReportName); }
        }
        
        public const string ColumnNameReportTypeId = "rep_rpl_report_list_id";
        private int _reportTypeId;
        [Column(ColumnNameReportTypeId)]
        public int ReportTypeId
        {
            get { return _reportTypeId; }
            set { _reportTypeId = value; MarkColumnModified(ColumnNameReportTypeId); }
        }
        
        public const string ColumnNameReportStatus = "rep_rv_report_status";
        private int _reportStatus;
        [Column(ColumnNameReportStatus)]
        public int ReportStatus
        {
            get { return _reportStatus; }
            set { _reportStatus = value; MarkColumnModified(ColumnNameReportStatus); }
        }
        
        public const string ColumnNameCreatedOn = "rep_create_dt";
        private DateTime? _createdOn;
        [Column(ColumnNameCreatedOn)]
        public DateTime? CreatedOn
        {
            get { return _createdOn; }
            set { _createdOn = value; MarkColumnModified(ColumnNameCreatedOn); }
        }
        
        public const string ColumnNameCreatedBy = "rep_create_nm_id";
        private int? _createdBy;
        [Column(ColumnNameCreatedBy)]
        public int? CreatedBy
        {
            get { return _createdBy; }
            set { _createdBy = value; MarkColumnModified(ColumnNameCreatedBy); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.lms_report_arg_value")]
    [PrimaryKey("rav_report_arg_value_id")]
    [ExplicitColumns]
    public class ReportArgumentValueTableModel : TableModel
    {
        
        public const string ColumnNameId = "rav_report_arg_value_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameReportId = "rav_rep_report_id";
        private int _reportId;
        [Column(ColumnNameReportId)]
        public int ReportId
        {
            get { return _reportId; }
            set { _reportId = value; MarkColumnModified(ColumnNameReportId); }
        }
        
        public const string ColumnNameArgumentId = "rav_ral_report_arg_list_id";
        private int _argumentId;
        [Column(ColumnNameArgumentId)]
        public int ArgumentId
        {
            get { return _argumentId; }
            set { _argumentId = value; MarkColumnModified(ColumnNameArgumentId); }
        }
        
        public const string ColumnNameArgumentValue = "rav_argument_value";
        private string _argumentValue;
        [Column(ColumnNameArgumentValue)]
        public string ArgumentValue
        {
            get { return _argumentValue; }
            set { _argumentValue = value; MarkColumnModified(ColumnNameArgumentValue); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.lms_report_entity")]
    [PrimaryKey("lre_report_entity_id")]
    [ExplicitColumns]
    public class ReportEntityTableModel : TableModel
    {
        
        public const string ColumnNameId = "lre_report_entity_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameReportId = "lre_rep_report_id";
        private int _reportId;
        [Column(ColumnNameReportId)]
        public int ReportId
        {
            get { return _reportId; }
            set { _reportId = value; MarkColumnModified(ColumnNameReportId); }
        }
        
        public const string ColumnNameEntityId = "lre_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameContactId = "lre_rc_contact_id";
        private int? _contactId;
        [Column(ColumnNameContactId)]
        public int? ContactId
        {
            get { return _contactId; }
            set { _contactId = value; MarkColumnModified(ColumnNameContactId); }
        }
        
        public const string ColumnNameIsFavorite = "lre_is_favorite_bit";
        private bool? _isFavorite;
        [Column(ColumnNameIsFavorite)]
        public bool? IsFavorite
        {
            get { return _isFavorite; }
            set { _isFavorite = value; MarkColumnModified(ColumnNameIsFavorite); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.lms_report_function_params")]
    [PrimaryKey("rfp_param_id")]
    [ExplicitColumns]
    public class CustomizableReportReportParamsTableModel : TableModel
    {
        
        public const string ColumnNameId = "rfp_param_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameReportUdfLinkId = "rfp_rlnk_report_udf_link_id";
        private int _reportUdfLinkId;
        [Column(ColumnNameReportUdfLinkId)]
        public int ReportUdfLinkId
        {
            get { return _reportUdfLinkId; }
            set { _reportUdfLinkId = value; MarkColumnModified(ColumnNameReportUdfLinkId); }
        }
        
        public const string ColumnNameFunctionLabelName = "rfp_function_label_name";
        private string _functionLabelName;
        [Column(ColumnNameFunctionLabelName)]
        public string FunctionLabelName
        {
            get { return _functionLabelName; }
            set { _functionLabelName = value; MarkColumnModified(ColumnNameFunctionLabelName); }
        }
        
        public const string ColumnNameFromDate = "rfp_from_dt";
        private DateTime? _fromDate;
        [Column(ColumnNameFromDate)]
        public DateTime? FromDate
        {
            get { return _fromDate; }
            set { _fromDate = value; MarkColumnModified(ColumnNameFromDate); }
        }
        
        public const string ColumnNameToDate = "rfp_to_dt";
        private DateTime? _toDate;
        [Column(ColumnNameToDate)]
        public DateTime? ToDate
        {
            get { return _toDate; }
            set { _toDate = value; MarkColumnModified(ColumnNameToDate); }
        }
        
        public const string ColumnNameShockAmount = "rfp_shock";
        private int? _shockAmount;
        [Column(ColumnNameShockAmount)]
        public int? ShockAmount
        {
            get { return _shockAmount; }
            set { _shockAmount = value; MarkColumnModified(ColumnNameShockAmount); }
        }
        
        public const string ColumnNameAllocationType = "rfp_rv_percent_allocation";
        private int? _allocationType;
        [Column(ColumnNameAllocationType)]
        public int? AllocationType
        {
            get { return _allocationType; }
            set { _allocationType = value; MarkColumnModified(ColumnNameAllocationType); }
        }
        
        public const string ColumnNameFx = "rfp_fx_bit";
        private bool? _fx;
        [Column(ColumnNameFx)]
        public bool? Fx
        {
            get { return _fx; }
            set { _fx = value; MarkColumnModified(ColumnNameFx); }
        }
        
        public const string ColumnNameDelta = "rfp_delta_bit";
        private bool? _delta;
        [Column(ColumnNameDelta)]
        public bool? Delta
        {
            get { return _delta; }
            set { _delta = value; MarkColumnModified(ColumnNameDelta); }
        }
        
        public const string ColumnNameCurrency = "rfp_rv_reporting_currency";
        private int? _currency;
        [Column(ColumnNameCurrency)]
        public int? Currency
        {
            get { return _currency; }
            set { _currency = value; MarkColumnModified(ColumnNameCurrency); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.lms_report_list")]
    [PrimaryKey("rpl_report_list_id")]
    [ExplicitColumns]
    public class ReportListTableModel : TableModel
    {
        
        public const string ColumnNameId = "rpl_report_list_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameReportType = "rpl_report";
        private string _reportType;
        [Column(ColumnNameReportType)]
        public string ReportType
        {
            get { return _reportType; }
            set { _reportType = value; MarkColumnModified(ColumnNameReportType); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.lms_report_udf_link")]
    [PrimaryKey("rlnk_report_udf_link_id")]
    [ExplicitColumns]
    public class CustomizableReportUDFLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "rlnk_report_udf_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameReportId = "rlnk_rep_report_id";
        private int _reportId;
        [Column(ColumnNameReportId)]
        public int ReportId
        {
            get { return _reportId; }
            set { _reportId = value; MarkColumnModified(ColumnNameReportId); }
        }
        
        public const string ColumnNameReportUdfListId = "rlnk_rul_report_udf_list_id";
        private int _reportUdfListId;
        [Column(ColumnNameReportUdfListId)]
        public int ReportUdfListId
        {
            get { return _reportUdfListId; }
            set { _reportUdfListId = value; MarkColumnModified(ColumnNameReportUdfListId); }
        }
        
        public const string ColumnNameSelected = "rlnk_select_bit";
        private bool? _selected;
        [Column(ColumnNameSelected)]
        public bool? Selected
        {
            get { return _selected; }
            set { _selected = value; MarkColumnModified(ColumnNameSelected); }
        }
        
        public const string ColumnNameSelectOrder = "rlnk_select_order";
        private int? _selectOrder;
        [Column(ColumnNameSelectOrder)]
        public int? SelectOrder
        {
            get { return _selectOrder; }
            set { _selectOrder = value; MarkColumnModified(ColumnNameSelectOrder); }
        }
        
        public const string ColumnNameGrouped = "rlnk_groupby_bit";
        private bool? _grouped;
        [Column(ColumnNameGrouped)]
        public bool? Grouped
        {
            get { return _grouped; }
            set { _grouped = value; MarkColumnModified(ColumnNameGrouped); }
        }
        
        public const string ColumnNameGroupedOrder = "rlnk_groupby_order";
        private int? _groupedOrder;
        [Column(ColumnNameGroupedOrder)]
        public int? GroupedOrder
        {
            get { return _groupedOrder; }
            set { _groupedOrder = value; MarkColumnModified(ColumnNameGroupedOrder); }
        }
        
        public const string ColumnNameSorted = "rlnk_orderby_bit";
        private bool? _sorted;
        [Column(ColumnNameSorted)]
        public bool? Sorted
        {
            get { return _sorted; }
            set { _sorted = value; MarkColumnModified(ColumnNameSorted); }
        }
        
        public const string ColumnNameSortedOrder = "rlnk_orderby_order";
        private int? _sortedOrder;
        [Column(ColumnNameSortedOrder)]
        public int? SortedOrder
        {
            get { return _sortedOrder; }
            set { _sortedOrder = value; MarkColumnModified(ColumnNameSortedOrder); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.lms_report_udf_list")]
    [PrimaryKey("rul_report_udf_list_id")]
    [ExplicitColumns]
    public class AvailableColumnTableModel : TableModel
    {
        
        public const string ColumnNameId = "rul_report_udf_list_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameFormula = "rul_column_name";
        private string _formula;
        [Column(ColumnNameFormula)]
        public string Formula
        {
            get { return _formula; }
            set { _formula = value; MarkColumnModified(ColumnNameFormula); }
        }
        
        public const string ColumnNameName = "rul_column_display_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
        
        public const string ColumnNameCategoryId = "rul_ruca_report_udf_list_cat_id";
        private int _categoryId;
        [Column(ColumnNameCategoryId)]
        public int CategoryId
        {
            get { return _categoryId; }
            set { _categoryId = value; MarkColumnModified(ColumnNameCategoryId); }
        }
        
        public const string ColumnNameAllowGroupBy = "rul_allow_groupby_bit";
        private bool _allowGroupBy;
        [Column(ColumnNameAllowGroupBy)]
        public bool AllowGroupBy
        {
            get { return _allowGroupBy; }
            set { _allowGroupBy = value; MarkColumnModified(ColumnNameAllowGroupBy); }
        }
        
        public const string ColumnNameAllowSortBy = "rul_allow_orderby_bit";
        private bool _allowSortBy;
        [Column(ColumnNameAllowSortBy)]
        public bool AllowSortBy
        {
            get { return _allowSortBy; }
            set { _allowSortBy = value; MarkColumnModified(ColumnNameAllowSortBy); }
        }
        
        public const string ColumnNameAlwaysSelected = "rul_always_select_bit";
        private bool _alwaysSelected;
        [Column(ColumnNameAlwaysSelected)]
        public bool AlwaysSelected
        {
            get { return _alwaysSelected; }
            set { _alwaysSelected = value; MarkColumnModified(ColumnNameAlwaysSelected); }
        }
        
        public const string ColumnNameAlwaysSelectOrder = "rul_always_select_order";
        private int? _alwaysSelectOrder;
        [Column(ColumnNameAlwaysSelectOrder)]
        public int? AlwaysSelectOrder
        {
            get { return _alwaysSelectOrder; }
            set { _alwaysSelectOrder = value; MarkColumnModified(ColumnNameAlwaysSelectOrder); }
        }
        
        public const string ColumnNameFunctionOption = "rul_rv_gui_function_option";
        private int? _functionOption;
        [Column(ColumnNameFunctionOption)]
        public int? FunctionOption
        {
            get { return _functionOption; }
            set { _functionOption = value; MarkColumnModified(ColumnNameFunctionOption); }
        }
        
        public const string ColumnNameHelpText = "rul_column_help_text";
        private string _helpText;
        [Column(ColumnNameHelpText)]
        public string HelpText
        {
            get { return _helpText; }
            set { _helpText = value; MarkColumnModified(ColumnNameHelpText); }
        }
        
        public const string ColumnNameSubTotalType = "rul_rv_subtotal_type";
        private int? _subTotalType;
        [Column(ColumnNameSubTotalType)]
        public int? SubTotalType
        {
            get { return _subTotalType; }
            set { _subTotalType = value; MarkColumnModified(ColumnNameSubTotalType); }
        }
        
        public const string ColumnNameCurrencyColumnId = "rul_currency_column_list_id_pointer";
        private int? _currencyColumnId;
        [Column(ColumnNameCurrencyColumnId)]
        public int? CurrencyColumnId
        {
            get { return _currencyColumnId; }
            set { _currencyColumnId = value; MarkColumnModified(ColumnNameCurrencyColumnId); }
        }
        
        public const string ColumnNameColumnFormat = "rul_rv_formatting";
        private int _columnFormat;
        [Column(ColumnNameColumnFormat)]
        public int ColumnFormat
        {
            get { return _columnFormat; }
            set { _columnFormat = value; MarkColumnModified(ColumnNameColumnFormat); }
        }
        
        public const string ColumnNameDefaultColumnWidth = "rul_default_report_column_width";
        private decimal? _defaultColumnWidth;
        [Column(ColumnNameDefaultColumnWidth)]
        public decimal? DefaultColumnWidth
        {
            get { return _defaultColumnWidth; }
            set { _defaultColumnWidth = value; MarkColumnModified(ColumnNameDefaultColumnWidth); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.lms_report_udf_list_cat")]
    [PrimaryKey("ruca_report_udf_list_cat_id")]
    [ExplicitColumns]
    public class ReportCategoryTableModel : TableModel
    {
        
        public const string ColumnNameId = "ruca_report_udf_list_cat_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameName = "ruca_category_name";
        private string _name;
        [Column(ColumnNameName)]
        public string Name
        {
            get { return _name; }
            set { _name = value; MarkColumnModified(ColumnNameName); }
        }
        
        public const string ColumnNameSortOrder = "ruca_ui_sort_order";
        private int? _sortOrder;
        [Column(ColumnNameSortOrder)]
        public int? SortOrder
        {
            get { return _sortOrder; }
            set { _sortOrder = value; MarkColumnModified(ColumnNameSortOrder); }
        }
        
        public const string ColumnNameReportListId = "ruca_rpl_report_list_id";
        private int _reportListId;
        [Column(ColumnNameReportListId)]
        public int ReportListId
        {
            get { return _reportListId; }
            set { _reportListId = value; MarkColumnModified(ColumnNameReportListId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.lms_report_user_specified_link")]
    [PrimaryKey("rusl_report_user_specified_link_id")]
    [ExplicitColumns]
    public class CustomizableReportUserSpecifiedLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "rusl_report_user_specified_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameReportId = "rusl_rep_report_id";
        private int _reportId;
        [Column(ColumnNameReportId)]
        public int ReportId
        {
            get { return _reportId; }
            set { _reportId = value; MarkColumnModified(ColumnNameReportId); }
        }
        
        public const string ColumnNameCovenantDefinitionId = "rusl_dcd_debt_covenant_definition_id";
        private int _covenantDefinitionId;
        [Column(ColumnNameCovenantDefinitionId)]
        public int CovenantDefinitionId
        {
            get { return _covenantDefinitionId; }
            set { _covenantDefinitionId = value; MarkColumnModified(ColumnNameCovenantDefinitionId); }
        }
        
        public const string ColumnNameColumnLabelName = "rusl_column_label_name";
        private string _columnLabelName;
        [Column(ColumnNameColumnLabelName)]
        public string ColumnLabelName
        {
            get { return _columnLabelName; }
            set { _columnLabelName = value; MarkColumnModified(ColumnNameColumnLabelName); }
        }
        
        public const string ColumnNameSelected = "rusl_select_bit";
        private bool? _selected;
        [Column(ColumnNameSelected)]
        public bool? Selected
        {
            get { return _selected; }
            set { _selected = value; MarkColumnModified(ColumnNameSelected); }
        }
        
        public const string ColumnNameSelectOrder = "rusl_select_order";
        private int? _selectOrder;
        [Column(ColumnNameSelectOrder)]
        public int? SelectOrder
        {
            get { return _selectOrder; }
            set { _selectOrder = value; MarkColumnModified(ColumnNameSelectOrder); }
        }
        
        public const string ColumnNameGrouped = "rusl_groupby_bit";
        private bool? _grouped;
        [Column(ColumnNameGrouped)]
        public bool? Grouped
        {
            get { return _grouped; }
            set { _grouped = value; MarkColumnModified(ColumnNameGrouped); }
        }
        
        public const string ColumnNameGroupedOrder = "rusl_groupby_order";
        private int? _groupedOrder;
        [Column(ColumnNameGroupedOrder)]
        public int? GroupedOrder
        {
            get { return _groupedOrder; }
            set { _groupedOrder = value; MarkColumnModified(ColumnNameGroupedOrder); }
        }
        
        public const string ColumnNameSorted = "rusl_orderby_bit";
        private bool? _sorted;
        [Column(ColumnNameSorted)]
        public bool? Sorted
        {
            get { return _sorted; }
            set { _sorted = value; MarkColumnModified(ColumnNameSorted); }
        }
        
        public const string ColumnNameSortedOrder = "rusl_orderby_order";
        private int? _sortedOrder;
        [Column(ColumnNameSortedOrder)]
        public int? SortedOrder
        {
            get { return _sortedOrder; }
            set { _sortedOrder = value; MarkColumnModified(ColumnNameSortedOrder); }
        }
        
        public const string ColumnNameFromDate = "rusl_from_dt";
        private DateTime? _fromDate;
        [Column(ColumnNameFromDate)]
        public DateTime? FromDate
        {
            get { return _fromDate; }
            set { _fromDate = value; MarkColumnModified(ColumnNameFromDate); }
        }
        
        public const string ColumnNameToDate = "rusl_to_dt";
        private DateTime? _toDate;
        [Column(ColumnNameToDate)]
        public DateTime? ToDate
        {
            get { return _toDate; }
            set { _toDate = value; MarkColumnModified(ColumnNameToDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.lms_template")]
    [PrimaryKey("tpl_template_id")]
    [ExplicitColumns]
    public class ReportTemplateTableModel : TableModel
    {
        
        public const string ColumnNameId = "tpl_template_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameReportId = "tpl_rep_report_id";
        private int _reportId;
        [Column(ColumnNameReportId)]
        public int ReportId
        {
            get { return _reportId; }
            set { _reportId = value; MarkColumnModified(ColumnNameReportId); }
        }
        
        public const string ColumnNameGeneratedName = "tpl_generated_name";
        private string _generatedName;
        [Column(ColumnNameGeneratedName)]
        public string GeneratedName
        {
            get { return _generatedName; }
            set { _generatedName = value; MarkColumnModified(ColumnNameGeneratedName); }
        }
        
        public const string ColumnNameIsPrivate = "tpl_private_bit";
        private bool _isPrivate;
        [Column(ColumnNameIsPrivate)]
        public bool IsPrivate
        {
            get { return _isPrivate; }
            set { _isPrivate = value; MarkColumnModified(ColumnNameIsPrivate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.lms_template_contact_link")]
    [PrimaryKey("tcl_template_contact_link_id")]
    [ExplicitColumns]
    public class FavoriteReportLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "tcl_template_contact_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTemplateId = "tcl_tpl_template_id";
        private int _templateId;
        [Column(ColumnNameTemplateId)]
        public int TemplateId
        {
            get { return _templateId; }
            set { _templateId = value; MarkColumnModified(ColumnNameTemplateId); }
        }
        
        public const string ColumnNameEntityContactLinkId = "tcl_ec_entity_contact_link_id";
        private int _entityContactLinkId;
        [Column(ColumnNameEntityContactLinkId)]
        public int EntityContactLinkId
        {
            get { return _entityContactLinkId; }
            set { _entityContactLinkId = value; MarkColumnModified(ColumnNameEntityContactLinkId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.poc_booked_accounting_event")]
    [PrimaryKey("bae_booked_accounting_event_id")]
    [ExplicitColumns]
    public class BookedRevenueTableModel : TableModel
    {
        
        public const string ColumnNameId = "bae_booked_accounting_event_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameTreatmentId = "bae_ac_accounting_id";
        private int _treatmentId;
        [Column(ColumnNameTreatmentId)]
        public int TreatmentId
        {
            get { return _treatmentId; }
            set { _treatmentId = value; MarkColumnModified(ColumnNameTreatmentId); }
        }
        
        public const string ColumnNameEventType = "bae_rv_event_type";
        private int _eventType;
        [Column(ColumnNameEventType)]
        public int EventType
        {
            get { return _eventType; }
            set { _eventType = value; MarkColumnModified(ColumnNameEventType); }
        }
        
        public const string ColumnNameAmount = "bae_amount";
        private long _amount;
        [Column(ColumnNameAmount)]
        public long Amount
        {
            get { return _amount; }
            set { _amount = value; MarkColumnModified(ColumnNameAmount); }
        }
        
        public const string ColumnNameDate = "bae_date";
        private DateTime _date;
        [Column(ColumnNameDate)]
        public DateTime Date
        {
            get { return _date; }
            set { _date = value; MarkColumnModified(ColumnNameDate); }
        }
        
        public const string ColumnNamePeriodEndDate = "bae_period_end_date";
        private DateTime _periodEndDate;
        [Column(ColumnNamePeriodEndDate)]
        public DateTime PeriodEndDate
        {
            get { return _periodEndDate; }
            set { _periodEndDate = value; MarkColumnModified(ColumnNamePeriodEndDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.poc_booked_accounting_event_link")]
    [PrimaryKey("bael_booked_accounting_event_link_id")]
    [ExplicitColumns]
    public class BookedRevenueLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "bael_booked_accounting_event_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameInvoiceId = "bael_invoice_bae_booked_accounting_event_id";
        private int _invoiceId;
        [Column(ColumnNameInvoiceId)]
        public int InvoiceId
        {
            get { return _invoiceId; }
            set { _invoiceId = value; MarkColumnModified(ColumnNameInvoiceId); }
        }
        
        public const string ColumnNameRevenueId = "bael_bookedaccountingevent_bae_booked_accounting_event_id";
        private int? _revenueId;
        [Column(ColumnNameRevenueId)]
        public int? RevenueId
        {
            get { return _revenueId; }
            set { _revenueId = value; MarkColumnModified(ColumnNameRevenueId); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.poc_contract")]
    [PrimaryKey("ctr_contract_id")]
    [ExplicitColumns]
    public class ContractTableModel : TableModel
    {
        
        public const string ColumnNameId = "ctr_contract_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameEntityId = "ctr_re_entity_id";
        private int _entityId;
        [Column(ColumnNameEntityId)]
        public int EntityId
        {
            get { return _entityId; }
            set { _entityId = value; MarkColumnModified(ColumnNameEntityId); }
        }
        
        public const string ColumnNameClientIdentifier = "ctr_contract_name";
        private string _clientIdentifier;
        [Column(ColumnNameClientIdentifier)]
        public string ClientIdentifier
        {
            get { return _clientIdentifier; }
            set { _clientIdentifier = value; MarkColumnModified(ColumnNameClientIdentifier); }
        }
        
        public const string ColumnNameContractType = "ctr_rv_contract_type";
        private int _contractType;
        [Column(ColumnNameContractType)]
        public int ContractType
        {
            get { return _contractType; }
            set { _contractType = value; MarkColumnModified(ColumnNameContractType); }
        }
        
        public const string ColumnNameLegalEntityId = "ctr_rl_legal_entity_id";
        private int _legalEntityId;
        [Column(ColumnNameLegalEntityId)]
        public int LegalEntityId
        {
            get { return _legalEntityId; }
            set { _legalEntityId = value; MarkColumnModified(ColumnNameLegalEntityId); }
        }
        
        public const string ColumnNameCurrency = "ctr_rv_currency";
        private int _currency;
        [Column(ColumnNameCurrency)]
        public int Currency
        {
            get { return _currency; }
            set { _currency = value; MarkColumnModified(ColumnNameCurrency); }
        }
        
        public const string ColumnNameClassification = "ctr_rv_classification";
        private int _classification;
        [Column(ColumnNameClassification)]
        public int Classification
        {
            get { return _classification; }
            set { _classification = value; MarkColumnModified(ColumnNameClassification); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.poc_contract_event")]
    [PrimaryKey("cte_contract_event_id")]
    [ExplicitColumns]
    public class ContractEventTableModel : TableModel
    {
        
        public const string ColumnNameId = "cte_contract_event_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameContractId = "cte_ctr_contract_id";
        private int _contractId;
        [Column(ColumnNameContractId)]
        public int ContractId
        {
            get { return _contractId; }
            set { _contractId = value; MarkColumnModified(ColumnNameContractId); }
        }
        
        public const string ColumnNameType = "cte_rv_contract_event_type";
        private int _type;
        [Column(ColumnNameType)]
        public int Type
        {
            get { return _type; }
            set { _type = value; MarkColumnModified(ColumnNameType); }
        }
        
        public const string ColumnNameAmount = "cte_amount";
        private long _amount;
        [Column(ColumnNameAmount)]
        public long Amount
        {
            get { return _amount; }
            set { _amount = value; MarkColumnModified(ColumnNameAmount); }
        }
        
        public const string ColumnNameDate = "cte_event_date";
        private DateTime _date;
        [Column(ColumnNameDate)]
        public DateTime Date
        {
            get { return _date; }
            set { _date = value; MarkColumnModified(ColumnNameDate); }
        }
        
        public const string ColumnNameAsOfDate = "cte_as_of_date";
        private DateTime _asOfDate;
        [Column(ColumnNameAsOfDate)]
        public DateTime AsOfDate
        {
            get { return _asOfDate; }
            set { _asOfDate = value; MarkColumnModified(ColumnNameAsOfDate); }
        }
    }

    [ExcludeFromCodeCoverage]
    [TableName("dbo.poc_contract_transaction_link")]
    [PrimaryKey("ctl_contract_transaction_link_id")]
    [ExplicitColumns]
    public class ContractTransactionLinkTableModel : TableModel
    {
        
        public const string ColumnNameId = "ctl_contract_transaction_link_id";
        [Column(ColumnNameId)]
        public override int Id { get; set; }
        
        public const string ColumnNameContractId = "ctl_ctr_contract_id";
        private int _contractId;
        [Column(ColumnNameContractId)]
        public int ContractId
        {
            get { return _contractId; }
            set { _contractId = value; MarkColumnModified(ColumnNameContractId); }
        }
        
        public const string ColumnNameTransactionId = "ctl_tr_transaction_id";
        private int _transactionId;
        [Column(ColumnNameTransactionId)]
        public int TransactionId
        {
            get { return _transactionId; }
            set { _transactionId = value; MarkColumnModified(ColumnNameTransactionId); }
        }
    }


}